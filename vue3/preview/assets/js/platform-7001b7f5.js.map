{"version":3,"mappings":"wFA6BO,SAASA,EAAoBC,GAClC,MAAMC,EAAOC,EAAMF,GAAMC,OAAS,IAC5BE,EAAIC,KAAKC,MAAMJ,EAAQ,OACvBK,EAAIF,KAAKC,MAAOJ,EAAA,MAAkB,MAClCM,EAAIH,KAAKC,MAAOJ,EAAQ,KAAY,IAGnC,OAAEO,KAFI,GAAGL,EAAI,EAAIA,EAAI,IAAM,KAAKG,EAAI,EAAIA,EAAI,KAAO,KAAKC,EAAI,EAAIA,EAAI,KAAO,KAEnEE,KADFN,GAAK,EAAI,UAAY,SAEpC,CAGgB,SAAAO,EAAmBC,EAAiBC,GAM3C,OALD,MAAAA,KAAAC,SAAeC,IACO,UAAtBC,EAAOJ,EAAKG,MACTH,EAAAG,GAAOH,EAAKG,GAAKE,OAAM,GAAI,GAClC,IAEKL,CACT,CAcO,SAASM,IACR,MAAAC,49tJACAC,EAAWC,OAAOR,KAAKM,GACvBG,EAAyB,GAMxB,OACLC,YALkBH,EAASI,QAAQT,IAC/BA,EAAIU,SAAS,MAAMH,EAAaI,KAAKX,IACjCA,EAAIU,SAAS,QAAUV,EAAIU,SAAS,QAI5CH,eAEJ","names":["getCountDownTimeStr","time","diff","dayjs","d","Math","floor","h","m","text","type","handleRegionParams","args","keys","forEach","key","typeOf","slice","getDevelopPages","pages","allNames","Object","unValidNames","valideNames","filter","includes","push"],"sources":["../../../src/utils/platform.ts"],"sourcesContent":["/********************************************************\r\n ***** 平台内部方法(仅限脱单计划平台使用的方法) *****\r\n ********************************************************/\r\n\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { typeOf, emptyTime, storage, isProd } from \"@/utils\";\r\nimport dayjs from \"dayjs\";\r\n\r\n// 获取认证方式\r\nexport function getAuthWaysFromObj(item: CommonObj) {\r\n  const ways: number[] = [];\r\n  const map: CommonObj = {\r\n    // isSupportContract: 0,\r\n    // isSupportPerson: 0,\r\n    isSupportCpyWeChat: 2,\r\n    isSupportDingTalk: 4,\r\n    isSupportEmail: 0,\r\n    isSupportFeiShu: 3,\r\n    isSupportWorkCard: 1,\r\n  };\r\n  for (const key in map) {\r\n    if (item[key]) {\r\n      ways.push(map[key]);\r\n    }\r\n  }\r\n  return ways;\r\n}\r\n\r\n//到期时间倒计时字符串\r\nexport function getCountDownTimeStr(time: string) {\r\n  const diff = dayjs(time).diff() / 1000;\r\n  const d = Math.floor(diff / (60 * 60 * 24));\r\n  const h = Math.floor((diff % (60 * 60 * 24)) / (60 * 60));\r\n  const m = Math.floor((diff % (60 * 60)) / 60);\r\n  const text = `${d > 0 ? d + \"天\" : \"\"}${h > 0 ? h + \"小时\" : \"\"}${m > 0 ? m + \"分钟\" : \"\"}`;\r\n  const type = d >= 1 ? \"success\" : \"danger\";\r\n  return { text, type };\r\n}\r\n\r\n//处理地区传值，只传最后一级，而不是传一个数组\r\nexport function handleRegionParams(args: CommonObj, keys: string[]) {\r\n  keys?.forEach(key => {\r\n    if (typeOf(args[key]) === \"Array\") {\r\n      args[key] = args[key].slice(-1)[0];\r\n    }\r\n  });\r\n  return args;\r\n}\r\n\r\n/**\r\n * 处理时间：后端的时间为 1000-01-01 00:00:00 时，实际上是空值\r\n * @tips 提取出来是为了方便后续集中处理，可能还有其他处理操作，或更简便的处理方式\r\n */\r\nexport function handleDateTime(row: CommonObj, key: string) {\r\n  return row[key] === emptyTime ? \"-\" : row[key];\r\n}\r\n\r\n/**\r\n * 计算src/views下开发的有效页面\r\n * @return\r\n */\r\nexport function getDevelopPages() {\r\n  const pages = import.meta.glob(\"@/views/**/*.vue\");\r\n  const allNames = Object.keys(pages);\r\n  const unValidNames: string[] = []; //无效页面\r\n  //有效页面\r\n  const valideNames = allNames.filter((key: string) => {\r\n    if (key.includes(\" \")) unValidNames.push(key);\r\n    return !key.includes(\"/_\") && !key.includes(\" \");\r\n  });\r\n  return {\r\n    valideNames,\r\n    unValidNames,\r\n  };\r\n}\r\n"],"file":"assets/js/platform-7001b7f5.js"}