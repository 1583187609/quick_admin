{"version":3,"file":"Column.vue_vue_type_script_name_Column_setup_true_lang-daf0c4b3.js","sources":["../../../src/components/BaseCrud/_components/Column.vue"],"sourcesContent":["<!-- 页面-简介 -->\r\n<!--\r\n{ width?: string | number ; minWidth?: string | number ; label?: string ; prop?: string | [string, string] ;  headerAlign?: AlignType; ... 9 more ...; children?: TableColAttrs[]; }\r\n{ width?: string | number; minWidth?: string | number; type?: string;  showOverflowTooltip?: boolean | Partial<Pick<ElTooltipProps, \"placement\" | ... 7 more ... | \"showArrow\">>; ... 35 more ...; style?: unknown; }\r\n-->\r\n<template>\r\n  <el-table-column v-bind=\"newCol\" v-if=\"newCol.type && ['index', 'selection'].includes(newCol.type)\"></el-table-column>\r\n  <template v-else>\r\n    <el-table-column v-bind=\"deleteAttrs(newCol, ['children'])\" :reserve-selection=\"selection\" v-if=\"newCol.children?.length\">\r\n      <Column\r\n        :col=\"subCol\"\r\n        :selection=\"selection\"\r\n        :refreshList=\"refreshList\"\r\n        :groupBtnsAttrs=\"groupBtnsAttrs\"\r\n        :getGroupBtnsOfRow=\"getGroupBtnsOfRow\"\r\n        :disabled=\"disabled\"\r\n        v-for=\"(subCol, subInd) in newCol?.children\"\r\n        :key=\"subInd\"\r\n      />\r\n    </el-table-column>\r\n    <template v-else>\r\n      <!-- 下面拆成两段写是为了formatter属性生效，在#default插槽中时，element-plus 的 formatter不会生效 -->\r\n      <el-table-column v-bind=\"newCol\" :formatter=\"newCol.formatter\" :reserve-selection=\"selection\" v-if=\"newCol.formatter\">\r\n        <template #header=\"{ column, $index, store, _self }\">\r\n          <BaseRender :data=\"column.label\" />\r\n          <el-popover v-bind=\"popoverAttrs\" v-if=\"popoverAttrs\">\r\n            <template #reference>\r\n              <BaseIcon :color=\"cssVars.colorInfo\" name=\"QuestionFilled\" />\r\n            </template>\r\n            <BaseRender :data=\"popoverAttrs.defaultSlot\" v-if=\"popoverAttrs.defaultSlot\" />\r\n          </el-popover>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column v-bind=\"newCol\" :reserve-selection=\"selection\" v-else>\r\n        <template #header=\"{ column, $index, store, _self }\">\r\n          <!--{{ column.label }} -->\r\n          <BaseRender :data=\"newCol.customLabel\" v-if=\"newCol.customLabel\" />\r\n          <BaseRender :data=\"devErrorTips(column.label, getIsHandle(_self, column) ? undefined : '')\" v-else />\r\n          <el-popover v-bind=\"popoverAttrs\" v-if=\"popoverAttrs\">\r\n            <template #reference>\r\n              <BaseIcon :color=\"getIsHandle(_self, column) ? cssVars.colorDanger : cssVars.colorInfo\" name=\"QuestionFilled\" />\r\n            </template>\r\n            <BaseRender :data=\"popoverAttrs.defaultSlot\" v-if=\"popoverAttrs.defaultSlot\" />\r\n          </el-popover>\r\n        </template>\r\n        <template #default=\"{ row, column, $index }\">\r\n          <!-- <BaseRender\r\n            :data=\"devErrorTips(newCol.prop as string)\"\r\n            v-if=\"!(newCol.prop as string).startsWith('$') && row[newCol.prop as string] === undefined\"\r\n          /> -->\r\n          <!-- <template v-else> -->\r\n          <template v-if=\"!newCol.type\">\r\n            {{ renderValue(row[newCol.prop as string]) }}\r\n          </template>\r\n          <GroupBtns\r\n            :row=\"{ ...row, $index }\"\r\n            :btns=\"getGroupBtnsOfRow?.(row, $index)\"\r\n            v-bind=\"groupBtnsAttrs\"\r\n            @click=\"(btnObj, next) => onGroupBtn(btnObj, { row, col: newCol, $index }, next)\"\r\n            v-else-if=\"newCol.type === 'operate'\"\r\n          >\r\n          </GroupBtns>\r\n          <BaseIcon name=\"Sort\" size=\"1.2em\" v-else-if=\"newCol.type === 'sort'\" />\r\n          <!-- id和备注列 -->\r\n          <template v-else-if=\"['id', 'remark'].includes(newCol.type)\">\r\n            {{ renderValue(row?.[newCol.prop as string]) }}\r\n          </template>\r\n          <!-- 自定义列 -->\r\n          <slot name=\"custom\" v-bind=\"{ row, col: newCol, ind: $index }\" v-else-if=\"newCol.type === 'custom'\"></slot>\r\n          <!-- 创建和修改列（后面再考虑优化） -->\r\n          <template v-else-if=\"['create', 'update'].includes(newCol.type)\">\r\n            <!-- {{ getSplitPropsVal(row, newCol.prop) }} -->\r\n            <template v-if=\"newCol.prop?.includes(propsJoinChar)\">\r\n              <div>\r\n                <BaseRender :data=\"getCreateOrUpdateText(row, newCol.prop as string, 0) \" />\r\n              </div>\r\n              <div>\r\n                <BaseRender :data=\"getCreateOrUpdateText(row, newCol.prop as string, 1) \" />\r\n              </div>\r\n            </template>\r\n            <template v-else>\r\n              {{ renderValue(row?.[newCol.prop as string]) }}\r\n            </template>\r\n          </template>\r\n          <template v-else-if=\"newCol.type === 'switch'\">\r\n            <el-switch\r\n              :modelValue=\"row[newCol.prop as string]\"\r\n              v-bind=\"deleteAttrs(newCol.attrs, ['onChange'])\"\r\n              @change=\"(val:StrNum | boolean)=>handleSwitchChange(newCol, row, $index)\"\r\n              v-if=\"newCol?.attrs?.fetch\"\r\n            />\r\n            <el-switch v-model=\"row[newCol.prop as string]\" v-bind=\"newCol.attrs\" v-else />\r\n          </template>\r\n          <BaseTag :value=\"row[newCol.prop as string]\" v-bind=\"newCol.attrs\" v-else-if=\"newCol.type === 'BaseTag'\" />\r\n          <template v-else-if=\"newCol.type === 'BaseImg'\">\r\n            <BaseImg\r\n              style=\"margin: 0 auto\"\r\n              :src=\"row[newCol.prop as string]\"\r\n              v-bind=\"newCol.attrs\"\r\n              v-if=\"row[newCol.prop as string]\"\r\n            />\r\n            <template v-else>-</template>\r\n          </template>\r\n          <BaseText v-bind=\"newCol.attrs\" v-else-if=\"newCol.type === 'BaseText'\">\r\n            {{ renderValue(row[newCol.prop as string]) }}\r\n          </BaseText>\r\n          <BaseCopy :text=\"row[newCol.prop as string]\" v-bind=\"newCol.attrs\" v-else-if=\"newCol.type === 'BaseCopy'\" />\r\n          <CustomSpecialTableCols :row=\"row\" :col=\"newCol\" v-else />\r\n          <!-- </template> -->\r\n        </template>\r\n      </el-table-column>\r\n    </template>\r\n  </template>\r\n</template>\r\n<script lang=\"ts\" name=\"Column\" setup>\r\nimport { ref, reactive, watch, computed, h } from \"vue\";\r\nimport {\r\n  propsJoinChar,\r\n  deleteAttrs,\r\n  getPopoverAttrs,\r\n  emptyVals,\r\n  devErrorTips,\r\n  showMessage,\r\n  renderValue,\r\n  isDev,\r\n} from \"@/components/_utils\";\r\nimport { BtnItem } from \"@/components/BaseBtn\";\r\nimport { TableColAttrs } from \"@/components/table\";\r\nimport GroupBtns, { GroupBtnsAttrs } from \"./GroupBtns.vue\";\r\nimport CustomSpecialTableCols from \"@/config/_components/CustomSpecialTableCols.vue\";\r\nimport cssVars from \"@/assets/styles/_var.module.scss\";\r\nimport config from \"@/config\";\r\nimport { CommonObj, FinallyNext, StrNum } from \"@/vite-env\";\r\nimport BaseRender from \"@/components/BaseRender.vue\";\r\nimport { PopoverAttrs } from \"@/components/BaseFormItem\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"Column\" }); \n\r\nexport type RefreshListFn = (cb?: () => void) => void;\r\nexport interface RowBtnInfo {\r\n  row: CommonObj;\r\n  col: TableColAttrs;\r\n  $index: number;\r\n}\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    col: TableColAttrs;\r\n    disabled?: boolean;\r\n    selection?: boolean;\r\n    refreshList?: RefreshListFn;\r\n    groupBtnsAttrs?: GroupBtnsAttrs;\r\n    getGroupBtnsOfRow?: (row: CommonObj, $rowInd: number) => BtnItem[];\r\n  }>(),\r\n  Object.assign({}, config?.BaseCrud?._components?.Column)\r\n);\r\nconst emits = defineEmits([\"groupBtn\"]);\r\nlet popoverAttrs: PopoverAttrs | undefined;\r\nconst newCol = getNewCol(props.col);\r\nfunction onGroupBtn(btnObj: BtnItem, { row, col, $index }: RowBtnInfo, next: FinallyNext) {\r\n  emits(\"groupBtn\", btnObj, { row, col, $index }, next);\r\n}\r\nfunction getNewCol(col: TableColAttrs) {\r\n  popoverAttrs = getPopoverAttrs(col.extra?.popover);\r\n  // delete col.popover; //popover属性只能绑定在 el-popover上，不然会触发 ElementPlus 的警告\r\n  if (typeof col.label !== \"string\") {\r\n    col.customLabel = col.label;\r\n    col.label = \"\";\r\n  }\r\n  delete col.extra; //popover属性只能绑定在 el-popover上，不然会触发 ElementPlus 的警告\r\n  return col;\r\n}\r\n// 该列是否已联调\r\nfunction getIsHandle(_self: CommonObj, column: CommonObj) {\r\n  return !(newCol.prop as string).startsWith(\"$\") && _self.data?.length && _self.data[0]?.[column.property] === undefined;\r\n}\r\n// 此功能后续可能会移除\r\nfunction handleSwitchChange(col: TableColAttrs, row: CommonObj, ind: number) {\r\n  const { attrs = {} } = col;\r\n  const { fetch, idKeys = [\"id\", \"id\"], statusKey = \"status\" } = attrs;\r\n  const preKey = attrs?.activeValue === row[statusKey] ? \"in\" : \"\";\r\n  ind !== -1 &&\r\n    fetch?.({\r\n      [idKeys[0]]: row[idKeys[1]],\r\n      [statusKey]: attrs?.[preKey + \"activeValue\"],\r\n    }).then(() => {\r\n      showMessage(`${attrs?.[preKey + \"activeText\"]}成功`);\r\n      props.refreshList?.();\r\n    });\r\n}\r\nfunction getCreateOrUpdateText(row: CommonObj, prop: string, ind: number = 0) {\r\n  const keys = prop.split(propsJoinChar);\r\n  const val = row?.[keys?.[ind]];\r\n  return renderValue(val);\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n"],"names":["props","__props","emits","__emit","popoverAttrs","newCol","col","getPopoverAttrs","_a","extra","popover","label","customLabel","getNewCol","getIsHandle","_self","column","prop","startsWith","data","length","_b","property","getCreateOrUpdateText","row","ind","keys","split","propsJoinChar","val","renderValue","btnObj","$index","next","attrs","fetch","idKeys","statusKey","preKey","activeValue","then","showMessage","refreshList","call"],"mappings":"i8BAgJA,MAAMA,EAAQC,EAWRC,EAAQC,EACV,IAAAC,EACE,MAAAC,EAIN,SAAmBC,SACFF,EAAAG,EAAgB,OAAAC,EAAAF,EAAIG,YAAJ,EAAAD,EAAWE,SAEjB,iBAAdJ,EAAIK,QACbL,EAAIM,YAAcN,EAAIK,MACtBL,EAAIK,MAAQ,IAGP,cADAL,EAAIG,MACJH,CACT,CAbeO,CAAUb,EAAMM,KAetB,SAAAQ,EAAYC,EAAkBC,WAC9B,OAAEX,EAAOY,KAAgBC,WAAW,OAAQ,OAAAV,EAAAO,EAAMI,WAAN,EAAAX,EAAYY,cAA+C,KAArC,OAAAC,EAAAN,EAAMI,KAAK,SAAXE,EAAAA,EAAgBL,EAAOM,UAClG,CAeA,SAASC,EAAsBC,EAAgBP,EAAcQ,EAAc,GACnE,MAAAC,EAAOT,EAAKU,MAAMC,GAClBC,QAAML,WAAa,MAAPE,OAAO,EAAAA,EAAAD,IACzB,OAAOK,EAAYD,EACrB,0/DAnCA,SAAoBE,GAAiBP,IAAEA,MAAKlB,EAAK0B,OAAAA,GAAsBC,GACrE/B,EAAM,WAAY6B,EAAQ,CAAEP,MAAKlB,MAAK0B,UAAUC,EAClD,kzBAgBS,SAAmB3B,EAAoBkB,EAAgBC,GAC9D,MAAMS,MAAEA,EAAQ,IAAO5B,GACjB6B,MAAEA,SAAOC,EAAS,CAAC,KAAM,MAAIC,UAAGA,EAAY,UAAaH,EACzDI,GAAgB,MAAPJ,OAAO,EAAAA,EAAAK,eAAgBf,EAAIa,GAAa,KAAO,QAC9DZ,IACU,MAARU,GAAQA,EAAA,CACN,CAACC,EAAO,IAAKZ,EAAIY,EAAO,IACxBC,CAACA,GAAY,MAAAH,OAAA,EAAAA,EAAQI,EAAS,iBAC7BE,MAAK,WACNC,EAAY,GAAG,MAAAP,OAAA,EAAAA,EAAQI,EAAS,mBAChC,OAAA9B,EAAAR,EAAM0C,cAANlC,EAAAmC,KAAA3C,EAAA,IAEN"}