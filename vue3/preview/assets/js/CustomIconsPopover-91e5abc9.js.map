{"version":3,"file":"CustomIconsPopover-91e5abc9.js","sources":["../../../src/components/_test_components/CustomIconsPopover.vue"],"sourcesContent":["<template>\r\n  <el-popover placement=\"bottom-start\" :width=\"width - 100\" trigger=\"click\" ref=\"popoverRef\">\r\n    <template #reference>\r\n      <div class=\"icon-box f-fs-c\" v-if=\"iconName\">\r\n        <BaseIcon size=\"26\" :name=\"iconName\"></BaseIcon>\r\n        <span class=\"ml-h\">{{ iconName }}</span>\r\n      </div>\r\n      <span class=\"placeholder\" v-else>请选择菜单图标</span>\r\n    </template>\r\n    <ul class=\"list f-fs-fs-w all-hide-scroll\">\r\n      <li @click=\"onClick('')\" class=\"item f-c-c-c f-1\" :class=\"{ active: iconName == '' }\">\r\n        <span class=\"f-c-c\" style=\"height: 32px; width: 32px; font-size: 22px\">无</span>\r\n        <span class=\"text line-1\">none</span>\r\n      </li>\r\n      <li\r\n        @click=\"onClick(name)\"\r\n        class=\"item f-c-c-c f-1\"\r\n        :class=\"{ active: iconName == name }\"\r\n        v-for=\"(name, ind) in names\"\r\n        :key=\"ind\"\r\n      >\r\n        <BaseIcon :name=\"name\" size=\"30\"></BaseIcon>\r\n        <span class=\"text line-1\">{{ name }}</span>\r\n      </li>\r\n      <li class=\"f-empty item\" v-for=\"(item, ind) in 7 - (names.length % 7)\" :key=\"'empty-' + ind\"></li>\r\n    </ul>\r\n  </el-popover>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed } from \"vue\";\r\nimport * as Icons from \"@element-plus/icons-vue\";\r\nimport { ClickOutside, useFormItem } from \"element-plus\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"CustomIconsPopover\" }); \n\r\n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    width: number;\r\n    modelValue?: string;\r\n  }>(),\r\n  {\r\n    modelValue: \"\",\r\n  }\r\n);\r\nconst emits = defineEmits([\"update:modelValue\"]);\r\nconst popoverRef = ref<any>(null);\r\nconst { formItem } = useFormItem();\r\nconst names = ref(Object.keys(Icons));\r\nconst iconName = computed(() => {\r\n  return props.modelValue;\r\n});\r\nfunction onClick(name: string) {\r\n  emits(\"update:modelValue\", name);\r\n  popoverRef.value.hide();\r\n  formItem?.validate(\"blur\");\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.placeholder {\r\n  cursor: pointer;\r\n  color: $color-text-light;\r\n}\r\n.list {\r\n  max-height: 400px;\r\n  overflow: auto;\r\n  .item {\r\n    cursor: pointer;\r\n    flex-basis: 100px;\r\n    margin: $gap-half $gap-qtr;\r\n    &:hover {\r\n      color: #000;\r\n      transform: scale(1.2);\r\n      transition: 0.3s;\r\n    }\r\n    &.active {\r\n      color: $color-primary;\r\n      transform: scale(1.2);\r\n      .text {\r\n        color: $color-primary;\r\n      }\r\n    }\r\n    .text {\r\n      font-weight: 500;\r\n      margin-top: 2px;\r\n      font-size: $font-size-light;\r\n    }\r\n  }\r\n}\r\n.icon-box {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"names":["props","__props","emits","__emit","popoverRef","ref","formItem","useFormItem","names","Object","keys","Icons","iconName","computed","modelValue","onClick","name","value","hide","validate"],"mappings":"m8DAqCA,MAAMA,EAAQC,EASRC,EAAQC,EACRC,EAAaC,EAAS,OACtBC,SAAEA,GAAaC,IACfC,EAAQH,EAAII,OAAOC,KAAKC,IACxBC,EAAWC,GAAS,IACjBb,EAAMc,aAEf,SAASC,EAAQC,GACfd,EAAM,oBAAqBc,GAC3BZ,EAAWa,MAAMC,OACjB,MAAAZ,GAAAA,EAAUa,SAAS,OACrB"}