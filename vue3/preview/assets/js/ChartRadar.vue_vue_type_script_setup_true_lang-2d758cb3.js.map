{"version":3,"file":"ChartRadar.vue_vue_type_script_setup_true_lang-2d758cb3.js","sources":["../../../src/components/chart/ChartRadar.vue"],"sourcesContent":["<template>\r\n  <Chart class=\"chart-radar\" :option=\"newOpt\" :height=\"height\" :width=\"width\" :theme=\"theme\"></Chart>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport * as echarts from \"echarts\";\r\nimport { reactive, computed } from \"vue\";\r\nimport Chart from \"@/components/chart/Chart.vue\";\r\nimport { typeOf } from \"@/components/_utils\";\r\nimport type { EchartTheme, ChartData } from \"./_config/types\";\r\nimport { merge } from \"lodash\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { axisCfg, gradColors, titleCfg } from \"./_config\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"ChartRadar\" }); \n\r\nconst defaultOption = {\r\n  title: {\r\n    // text: \"Budget vs spending\",\r\n  },\r\n  legend: {\r\n    // data: [\"Allocated Budget\", \"Actual Spending\"],\r\n  },\r\n  radar: {\r\n    // shape: 'circle',\r\n    indicator: [\r\n      { name: \"Sales\", max: 6500 },\r\n      { name: \"Administration\", max: 16000 },\r\n      { name: \"Information Technology\", max: 30000 },\r\n      { name: \"Customer Support\", max: 38000 },\r\n      { name: \"Development\", max: 52000 },\r\n      { name: \"Marketing\", max: 25000 },\r\n    ],\r\n  },\r\n  // dataset: {\r\n  //   source: [\r\n  //     [\"type\", \"Sales\", \"Administration\", \"Information Technology\", \"Customer Support\", \"Development\", \"Marketing\"],\r\n  //     [\"Actual Spending\", 5000, 14000, 28000, 26000, 42000, 21000],\r\n  //     [\"Allocated Budget\", 4200, 3000, 20000, 35000, 50000, 18000],\r\n  //   ],\r\n  // },\r\n  series: [\r\n    {\r\n      name: \"Budget vs spending\",\r\n      type: \"radar\",\r\n      data: [\r\n        {\r\n          value: [4200, 3000, 20000, 35000, 50000, 18000],\r\n          name: \"Allocated Budget\",\r\n        },\r\n        {\r\n          value: [5000, 14000, 28000, 26000, 42000, 21000],\r\n          name: \"Actual Spending\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    theme?: EchartTheme;\r\n    height?: string | number;\r\n    width?: string | number;\r\n    title?: string;\r\n    data?: ChartData;\r\n    option?: CommonObj;\r\n  }>(),\r\n  {\r\n    data: () => [\r\n      [\"product\", \"2015\", \"2016\", \"2017\"],\r\n      [\"示例1\", 43.3, 85.8, 93.7],\r\n      [\"示例2\", 83.1, 73.4, 55.1],\r\n      [\"示例3\", 86.4, 65.2, 82.5],\r\n      [\"示例4\", 72.4, 53.9, 39.1],\r\n    ],\r\n    option: () => ({}),\r\n  }\r\n);\r\nconst newOpt = computed(() => {\r\n  const { option, data, title } = props;\r\n  return merge(\r\n    {},\r\n    defaultOption,\r\n    {\r\n      ...(title && { title: { text: title, ...titleCfg } }),\r\n      dataset: {\r\n        source: data,\r\n      },\r\n      // series: getSeries(),\r\n    },\r\n    option\r\n  );\r\n});\r\n/**\r\n * 获取series\r\n */\r\nfunction getSeries() {\r\n  const { data, option } = props;\r\n  const barWidth = option.barWidth || defaultOption.barWidth;\r\n  return (\r\n    data[0]?.slice(1)?.map((item: any, ind: number) => {\r\n      return {\r\n        type: \"bar\",\r\n        itemStyle: {\r\n          borderRadius: [barWidth / 2, barWidth / 2, 0, 0],\r\n          color: getItemColor(ind),\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"#666\",\r\n          fontSize: 14,\r\n        },\r\n      };\r\n    }) || []\r\n  );\r\n}\r\n\r\n/**\r\n * 获取series 的itemStyle的color值\r\n * @param ind {number} 数组下标值\r\n * @param isMulti {boolean} 是否是多维度\r\n */\r\nfunction getItemColor(ind: number, isMulti?: boolean) {\r\n  const { data } = props;\r\n  isMulti = typeOf(isMulti) === \"Undefined\" ? data[0].length > 2 : isMulti;\r\n  /** 多维度多色，同一维度同一种颜色 */\r\n  if (isMulti) {\r\n    //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n    return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n      {\r\n        offset: 0,\r\n        color: gradColors[ind][0],\r\n      },\r\n      {\r\n        offset: 1,\r\n        color: gradColors[ind][1],\r\n      },\r\n    ]);\r\n  } else {\r\n    /** 单维度多色可用，同一维度不同颜色 */\r\n    return (params: CommonObj) => {\r\n      const i = params.dataIndex;\r\n      //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n      return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n        {\r\n          offset: 0,\r\n          color: gradColors[i][0],\r\n        },\r\n        {\r\n          offset: 1,\r\n          color: gradColors[i][1],\r\n        },\r\n      ]);\r\n    };\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n"],"names":["defaultOption","title","legend","radar","indicator","name","max","series","type","data","value","props","__props","newOpt","computed","option","merge","text","titleCfg","dataset","source"],"mappings":"mfAgBA,MAAMA,EAAgB,CACpBC,MAAO,CAEP,EACAC,OAAQ,CAER,EACAC,MAAO,CAELC,UAAW,CACT,CAAEC,KAAM,QAASC,IAAK,MACtB,CAAED,KAAM,iBAAkBC,IAAK,MAC/B,CAAED,KAAM,yBAA0BC,IAAK,KACvC,CAAED,KAAM,mBAAoBC,IAAK,MACjC,CAAED,KAAM,cAAeC,IAAK,MAC5B,CAAED,KAAM,YAAaC,IAAK,QAU9BC,OAAQ,CACN,CACEF,KAAM,qBACNG,KAAM,QACNC,KAAM,CACJ,CACEC,MAAO,CAAC,KAAM,IAAM,IAAO,KAAO,IAAO,MACzCL,KAAM,oBAER,CACEK,MAAO,CAAC,IAAM,KAAO,KAAO,KAAO,KAAO,MAC1CL,KAAM,uBAMVM,EAAQC,EAoBRC,EAASC,GAAS,KACtB,MAAMC,OAAEA,EAAAN,KAAQA,EAAMR,MAAAA,GAAUU,EACzB,OAAAK,EAAAA,MACL,CAAC,EACDhB,EACA,IACMC,GAAS,CAAEA,MAAO,CAAEgB,KAAMhB,KAAUiB,IACxCC,QAAS,CACPC,OAAQX,IAIZM,EAAA"}