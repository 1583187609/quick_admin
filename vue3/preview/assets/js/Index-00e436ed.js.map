{"version":3,"file":"Index-00e436ed.js","sources":["../../../src/components/BaseCrud/Index.vue"],"sourcesContent":["<template>\r\n  <div class=\"base-crud f-fs-s-c\" ref=\"baseCrudRef\">\r\n    <QueryForm\r\n      class=\"f-0\"\r\n      :class=\"size === 'small' ? 'mb-6' : 'mb-h'\"\r\n      v-model=\"model\"\r\n      :disabled=\"disabled\"\r\n      :fields=\"fields\"\r\n      :sections=\"sections\"\r\n      :loading=\"loading\"\r\n      :inputDebounce=\"inputDebounce\"\r\n      :colSpanAttrs=\"colSpanAttrs\"\r\n      :compact=\"compact\"\r\n      @reset=\"handleReset\"\r\n      @search=\"handleSearch\"\r\n      @change=\"handleChange\"\r\n      :size=\"size\"\r\n      :rowNum=\"rowNum\"\r\n      v-bind=\"formAttrs\"\r\n      ref=\"queryFormRef\"\r\n    >\r\n      <template #custom=\"{ field, form }\">\r\n        <slot :name=\"field.prop\" :field=\"field\" :form=\"form\"></slot>\r\n      </template>\r\n    </QueryForm>\r\n    <slot name=\"middle\"></slot>\r\n    <ExtraBtns\r\n      class=\"f-0\"\r\n      :columns=\"newCols\"\r\n      :allColumns=\"allCols\"\r\n      :btns=\"newExtraBtns\"\r\n      :isEmpty=\"!newRows?.length\"\r\n      @update:cols=\"(cols:TableField[])=>{newCols = cols}\"\r\n      @click=\"onExtraBtn\"\r\n      :total=\"pageInfo.total\"\r\n      :batchBtn=\"batchBtn && selection\"\r\n      :size=\"size\"\r\n      ref=\"extraBtnsRef\"\r\n      v-if=\"newExtraBtns.length\"\r\n    />\r\n    <slot\r\n      :loading=\"loading\"\r\n      :rows=\"newRows\"\r\n      :total=\"pageInfo.total\"\r\n      :hasMore=\"pageInfo.hasMore\"\r\n      :params=\"params\"\r\n      :onGroupBtn=\"onGroupBtn\"\r\n    >\r\n      <QueryTable\r\n        :groupBtnsAttrs=\"{\r\n          compact,\r\n          small: size === 'small',\r\n          ...groupBtnsAttrs,\r\n        }\"\r\n        :loading=\"loading\"\r\n        :cols=\"newCols\"\r\n        :rows=\"newRows\"\r\n        :total=\"pageInfo.total\"\r\n        :sort=\"!!sort\"\r\n        :index=\"index\"\r\n        :selection=\"selectable\"\r\n        :groupBtns=\"groupBtns\"\r\n        :currPage=\"pagination ? currPageInfo[reqMap!.curr_page] : 1\"\r\n        :pageSize=\"pagination ? currPageInfo[reqMap!.page_size] : 20\"\r\n        :filterBtnsByAuth=\"filterBtnsByAuth\"\r\n        :refreshList=\"refreshList\"\r\n        @groupBtn=\"onGroupBtn\"\r\n        @selectionChange=\"handleSelectionChange\"\r\n        @update:cols=\"(cols:TableField[])=>{allCols=cols}\"\r\n        :disabled=\"disabled\"\r\n        v-bind=\"tableAttrs\"\r\n        :size=\"size\"\r\n        ref=\"queryTableRef\"\r\n      >\r\n        <template #custom=\"{ row, col, $index }\">\r\n          <slot :name=\"col.prop\" v-bind=\"{ row, col, $index }\"></slot>\r\n        </template>\r\n      </QueryTable>\r\n    </slot>\r\n    <Pagination\r\n      v-bind=\"pageAttrs\"\r\n      v-model:currPage=\"currPageInfo[reqMap!.curr_page]\"\r\n      v-model:pageSize=\"currPageInfo[reqMap!.page_size]\"\r\n      :total=\"pageInfo.total\"\r\n      @sizeChange=\"handleSizeChange\"\r\n      @currentChange=\"handleCurrChange\"\r\n      :small=\"size === 'small'\"\r\n      v-if=\"pagination && showPagination\"\r\n    />\r\n  </div>\r\n</template>\r\n<script lang=\"ts\" name=\"BaseCrud\" setup>\r\nimport { ref, reactive, watch, computed, onMounted, inject } from \"vue\";\r\nimport { FormField, FormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport { TableField } from \"@/components/table\";\r\nimport { GroupBtnsType } from \"@/components/BaseCrud/_components/GroupBtns.vue\";\r\nimport { pickBy, cloneDeep, merge, upperFirst } from \"lodash\";\r\nimport ExtraBtns, { ToolBtnName } from \"./_components/ExtraBtns/Index.vue\";\r\nimport QueryTable from \"@/components/BaseCrud/_components/QueryTable.vue\";\r\nimport QueryForm from \"@/components/BaseCrud/_components/QueryForm/Index.vue\";\r\nimport { BtnName, BaseBtnType, getBtnObj, BtnItem } from \"@/components/BaseBtn\";\r\nimport {\r\n  isProd,\r\n  omitAttrs,\r\n  printLog,\r\n  propsJoinChar,\r\n  rangeJoinChar,\r\n  showMessage,\r\n  typeOf,\r\n  emptyVals,\r\n  defaultReqMap,\r\n  defaultResMap,\r\n  defaultColSpanAttrs,\r\n} from \"@/components/_utils\";\r\nimport Pagination from \"./_components/Pagination.vue\";\r\nimport { GroupBtnsAttrs } from \"./_components/GroupBtns.vue\";\r\nimport { splitPropsParams } from \"@/components/_utils\";\r\nimport { handleClickExtraBtns, getQueryFieldValue } from \"./_utils\";\r\nimport { FilterByAuthFn, batchBtnNames } from \"@/components/BaseCrud\";\r\nimport { CommonObj, FetchType, UniteFetchType, FinallyNext, StrNum, CommonSize } from \"@/vite-env\";\r\nimport { SectionFieldsItemAttrs } from \"@/components/form\";\r\nimport { ColSpanAttrs } from \"@/components/form\";\r\nimport { ClosePopupType } from \"@/App.vue\";\r\nimport config from \"@/config\";\r\nimport { SummaryListType, PaginationAttrs } from \"@/components/table\";\r\nimport { QueryFieldsItem, ReqMap, ResMap, TriggerGetListType } from \"@/components/BaseCrud\";\r\nimport Sortable from \"sortablejs\";\r\nimport { TplCfgAttrs } from \"./_components/ImportPopup.vue\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"BaseCrud\" }); \n\r\n\r\nconst openPopup = inject<any>(\"openPopup\");\r\nconst allCols = ref<TableField[]>([]);\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    modelValue?: CommonObj; //表单数据\r\n    rowKey?: string;\r\n    formAttrs?: CommonObj; //el-form的属性配置\r\n    tableAttrs?: CommonObj; //el-table的属性配置\r\n    pageAttrs?: CommonObj; //分页配置\r\n    disabled?: boolean; //是否禁用\r\n    groupBtnsAttrs?: GroupBtnsAttrs; //分页配置\r\n    pagination?: false | PaginationAttrs; //是否分页\r\n    fields?: FormField[];\r\n    sections?: SectionFieldsItemAttrs[];\r\n    cols?: TableField[];\r\n    selectAll?: boolean;\r\n    fetch?: UniteFetchType;\r\n    fetchSuccess?: (res: any) => void; //请求成功的回调函数\r\n    fetchFail?: (err: any) => void; //请求成功的回调函数\r\n    immediate?: boolean; //页面刚创建时是否立即发起请求获取数据\r\n    extraBtns?: BaseBtnType[]; //额外的按钮，在表单下方，表格上方\r\n    groupBtns?: GroupBtnsType; //分组按钮，在表格的操作一栏\r\n    reqMap?: ReqMap; //请求参数的键名映射\r\n    resMap?: ResMap; //响应参数的键名映射\r\n    showPagination?: boolean;\r\n    summaryList?: SummaryListType; //汇总请求数据的 list\r\n    sort?: boolean | UniteFetchType; //是否展示排序列\r\n    index?: boolean; //是否展示序号列\r\n    selection?: boolean; //是否展示选择框\r\n    batchBtn?: boolean; //是否显示批量按钮\r\n    exportCfg?: {\r\n      limit: number; //一次性导出数据的上限条数\r\n    };\r\n    importCfg?: TplCfgAttrs; //导入的下载模板配置\r\n    extraParams?: CommonObj; //额外的参数\r\n    log?: boolean; //是否console.log(rows)\r\n    debug?: boolean; //是否在打印请求数据之后不执行请求的逻辑\r\n    isOmit?: boolean; //是否剔除掉undefined, ''的属性值\r\n    changeFetch?: boolean; //是否onChang之后就发送请求（仅限于Select类组件，不含Input类组件）\r\n    inputDebounce?: boolean; //输入框输入时，是否通过防抖输入，触发搜索\r\n    filterByAuth?: FilterByAuthFn;\r\n    colSpanAttrs?: ColSpanAttrs;\r\n    compact?: boolean; //表单项之间排列是否紧凑点\r\n    size?: CommonSize;\r\n    rowNum?: number; //筛选条件的表单展示几行\r\n    handleRequest?: (args: CommonObj) => CommonObj; //处理参数\r\n    handleResponse?: (res: any) => any; //处理响应数据\r\n  }>(),\r\n  Object.assign(\r\n    {\r\n      rowKey: \"id\",\r\n      log: !isProd,\r\n      fields: () => [],\r\n      cols: () => [],\r\n      immediate: true,\r\n      changeFetch: true,\r\n      batchBtn: false,\r\n      isOmit: true,\r\n      inputDebounce: true,\r\n      exportCfg: () => ({ limit: 10000 }),\r\n      pagination: () => ({ currPage: 1, pageSize: 20 }),\r\n      reqMap: () => defaultReqMap,\r\n      resMap: () => defaultResMap,\r\n      showPagination: true,\r\n      colSpanAttrs: () => defaultColSpanAttrs,\r\n      // 跟下面的size: \"small\" 搭配使用，会，会使得排版布局更加紧凑\r\n      // colSpanAttrs: () => ({\r\n      //  xs: 12,\r\n      //   sm: 12,\r\n      //   md: 8,\r\n      //   lg: 4,\r\n      //   xl: 3,\r\n      // }),\r\n      // size: \"small\",\r\n      compact: (_props: CommonObj) => _props.colSpanAttrs.xl < 6,\r\n      filterByAuth: (auth: number[]) => true,\r\n    },\r\n    config?.BaseCrud?.Index\r\n  )\r\n);\r\nconst emits = defineEmits([\"update:modelValue\", \"extraBtn\", \"groupBtn\", \"selectionChange\", \"rows\", \"dargSortEnd\"]);\r\nconst closePopup: any = inject(\"closePopup\");\r\nconst queryTableRef = ref<any>(null);\r\nconst queryFormRef = ref<any>(null);\r\nconst extraBtnsRef = ref<any>(null);\r\nconst baseCrudRef = ref<any>(null);\r\nconst { reqMap, resMap, extraParams = {} } = props;\r\nconst initPageInfo = props.pagination\r\n  ? {\r\n      [`${reqMap!.curr_page}`]: props.pagination.currPage,\r\n      [`${reqMap!.page_size}`]: props.pagination.pageSize,\r\n    }\r\n  : {};\r\nconst initParams = {\r\n  ...initPageInfo,\r\n  ...extraParams,\r\n};\r\nconst currPageInfo = reactive<CommonObj>(cloneDeep(initPageInfo));\r\nconst pageInfo = reactive<CommonObj>({ total: 0, hasMore: true });\r\nconst loading = ref(false);\r\nconst newRows = ref([]);\r\nconst seledRows = ref<CommonObj[]>([]);\r\nconst model = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(val: any) {\r\n    emits(\"update:modelValue\", val);\r\n  },\r\n});\r\n//请求参数\r\nlet params: CommonObj = cloneDeep(initParams);\r\nconst newExtraBtns = computed<BtnItem[]>(() => {\r\n  const { extraBtns = [], disabled } = props;\r\n  const btns = extraBtns.map((btn: BaseBtnType) => {\r\n    const btnObj: BtnItem = getBtnObj(btn);\r\n    const { name, attrs, customRules } = btnObj;\r\n    if (batchBtnNames?.includes(name as string)) {\r\n      btnObj.popconfirm = false;\r\n      if (customRules) {\r\n        attrs!.disabled = !pageInfo.total;\r\n      } else {\r\n        attrs!.disabled = !seledRows.value.length;\r\n      }\r\n    }\r\n    if (disabled) {\r\n      attrs!.disabled = disabled;\r\n    }\r\n    return btnObj;\r\n  });\r\n  return filterBtnsByAuth(btns);\r\n});\r\n//是否存在批量按钮，若存在且不是自定义处理按钮逻辑，则表格中需要自动添加 selection 列\r\nconst existBatchBtns = computed<boolean>(() => {\r\n  return !!newExtraBtns.value.find((it: BtnItem) => batchBtnNames.includes(it.name as BtnName) && !it.customRules);\r\n});\r\nconst selectable = computed(() => props.selection || existBatchBtns.value);\r\nconst newCols = ref<TableField[]>(props.cols.slice());\r\n//当额外参数改变时，发起请求\r\nwatch(\r\n  () => props.extraParams,\r\n  newVal => {\r\n    merge(params, newVal);\r\n    getList(params, undefined, \"extraParams\");\r\n  },\r\n  { deep: true }\r\n);\r\nonMounted(() => {\r\n  // judgeIsInDialog(\"basic-dialog\");\r\n  props.sort && handleDragSort();\r\n});\r\n//重置\r\nfunction handleReset() {\r\n  Object.assign(currPageInfo, initPageInfo);\r\n  params = cloneDeep(initParams);\r\n  getList(params, undefined, \"reset\");\r\n}\r\n/**\r\n * 判断是否位于 dialog 弹窗中\r\n * @notice 先不要删除，后面可能会有用\r\n */\r\nfunction judgeIsInDialog(className: string = \"basic-dialog\", startLevel: number = 5) {\r\n  let isInDia = false;\r\n  getTargetPar(startLevel);\r\n  function getTargetPar(sLevel = 0) {\r\n    let targetPar = baseCrudRef.value.parentNode;\r\n    while (sLevel > 0) {\r\n      targetPar = targetPar?.parentNode;\r\n      sLevel--;\r\n      if (targetPar?.classList?.contains(className)) {\r\n        isInDia = true;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return isInDia;\r\n}\r\n//点击搜索\r\nfunction handleSearch(data: CommonObj) {\r\n  Object.assign(params, { [`${reqMap!.curr_page as string}`]: 1 });\r\n  getList(params, undefined, \"search\");\r\n}\r\n//每页条数变化时\r\nfunction handleSizeChange(val: number) {\r\n  Object.assign(params, {\r\n    [`${reqMap!.curr_page as string}`]: 1,\r\n    [`${reqMap!.page_size as string}`]: val,\r\n  });\r\n  getList(params, undefined, \"sizeChange\");\r\n}\r\n//当前页码变化时\r\nfunction handleCurrChange(val: number) {\r\n  Object.assign(params, { [`${reqMap!.curr_page as string}`]: val });\r\n  getList(params, undefined, \"currChange\");\r\n}\r\n/**\r\n * 处理change事件\r\n * @param changedVals change变动的表单字段\r\n * @param withModelData model是否有值（即初始值，是否有值）\r\n */\r\nfunction handleChange(changedVals: CommonObj, withModelData?: boolean) {\r\n  const { immediate, changeFetch } = props;\r\n  changedVals = splitPropsParams(changedVals);\r\n  if (withModelData) {\r\n    merge(params, changedVals);\r\n    Object.assign(initParams, params);\r\n  } else {\r\n    if (!changeFetch) return;\r\n    // merge(params, changedVals, { [`${reqMap!.curr_page}`]: 1 }); //用merge合并时，属性值为对象时，不能完成合并，故采用下面的方法进行合并\r\n    Object.assign(params, changedVals, { [`${reqMap!.curr_page}`]: 1 });\r\n  }\r\n  immediate && getList(params, undefined, \"change\");\r\n}\r\n//获取列表数据\r\nfunction getList(args: CommonObj = params, cb?: FinallyNext, trigger: TriggerGetListType = \"expose\") {\r\n  // console.log(trigger, \"trigger-------触发getList类型\");\r\n  const { fetch, handleRequest, isOmit, handleResponse, selectAll, summaryList, fetchSuccess, fetchFail, log } = props;\r\n  if (!fetch) return;\r\n  loading.value = true;\r\n  if (handleRequest) args = handleRequest(args);\r\n  isOmit && (args = omitAttrs(args)); //剔除掉值为undefined, '', null的属性\r\n  log && printLog(args, \"req\");\r\n  fetch(args)\r\n    .then((res: any) => {\r\n      if (!res) return;\r\n      if (handleResponse) res = handleResponse(res);\r\n      const newList = res[resMap!.records as string];\r\n      if (!newList) return console.error(\"响应数据不是标准的分页数据结构，请自测：\", res);\r\n      log && printLog(newList, \"res\");\r\n      const _currPage = args[reqMap!.curr_page as string];\r\n      if (summaryList) {\r\n        const t = typeOf(summaryList);\r\n        const oldList = newRows.value;\r\n        if (t === \"Boolean\") {\r\n          newRows.value = _currPage === 1 ? newList : [...oldList, ...newList];\r\n        } else if (t === \"Function\") {\r\n          newRows.value = summaryList(_currPage, oldList, newList);\r\n        } else {\r\n          throw new Error(`暂未处理此种类型：${t}`);\r\n        }\r\n      } else {\r\n        newRows.value = newList;\r\n      }\r\n      Object.assign(pageInfo, {\r\n        total: res[resMap!.total_num as string],\r\n        hasMore: res[resMap!.has_more as string],\r\n      });\r\n      Object.assign(currPageInfo, {\r\n        [reqMap!.curr_page]: _currPage,\r\n        [reqMap!.page_size]: args[reqMap!.page_size as string],\r\n      });\r\n      if (selectAll) {\r\n        seledRows.value = newList;\r\n      }\r\n      fetchSuccess?.(res);\r\n      emits(\"rows\", newRows.value, args);\r\n      cb?.();\r\n    })\r\n    .catch((err: any) => {\r\n      fetchFail?.(err);\r\n    })\r\n    .finally(() => {\r\n      loading.value = false;\r\n    });\r\n}\r\n//点击额外的按钮\r\nfunction onExtraBtn(btnObj: BtnItem) {\r\n  const { rowKey, exportCfg, importCfg } = props;\r\n  const { text } = btnObj;\r\n  handleClickExtraBtns({\r\n    btnObj,\r\n    cols: allCols.value,\r\n    seledRows: seledRows.value,\r\n    seledKeys: seledRows.value.map((it: CommonObj) => it[rowKey]),\r\n    total: pageInfo.total,\r\n    exportCfg,\r\n    emits,\r\n    next: (hint = `${text || \"操作\"}成功`, closeType?: ClosePopupType, cb?: () => void, isRefreshList: boolean = true) => {\r\n      showMessage(hint);\r\n      closePopup(closeType);\r\n      isRefreshList && refreshList();\r\n      selectable.value && queryTableRef.value.clearSelection(); //清空全选\r\n      cb?.();\r\n    },\r\n    openPopup,\r\n    importCfg,\r\n  });\r\n}\r\n//点击操作栏按钮\r\nfunction onGroupBtn(btnObj: BtnItem, row: CommonObj, next: FinallyNext, isRefreshList: boolean = true) {\r\n  const { name, text } = btnObj;\r\n  emits(\"groupBtn\", name, row, (hint?: string, closeType?: ClosePopupType, cb?: () => void) => {\r\n    next(hint, closeType, cb);\r\n    isRefreshList && refreshList();\r\n  });\r\n}\r\n//处理多选改变时\r\nfunction handleSelectionChange(rows: CommonObj[], keys: string[]) {\r\n  seledRows.value = rows;\r\n  emits(\"selectionChange\", rows, keys);\r\n}\r\n//根据权限对按钮进行过滤\r\nfunction filterBtnsByAuth(btns: BtnItem[] = []) {\r\n  const { filterByAuth } = props;\r\n  if (!filterByAuth) return btns;\r\n  return btns.filter(({ auth }) => {\r\n    return auth?.length ? filterByAuth(auth) : true;\r\n  });\r\n}\r\n/**\r\n * 刷新列表\r\n * @param cb function 预留的回调函数\r\n */\r\nfunction refreshList(cb?: () => void) {\r\n  getList(params, cb, \"refresh\");\r\n}\r\ndefineExpose({\r\n  refreshList,\r\n  getList,\r\n  getQueryParams(isOmit = props.isOmit) {\r\n    return isOmit ? omitAttrs(params) : params;\r\n  },\r\n  getQueryFields(excludeKeys = [reqMap!.curr_page, reqMap!.page_size]) {\r\n    const queryFields: QueryFieldsItem[] = [];\r\n    const rangeKeys: string[] = [];\r\n    const propFields = queryFormRef.value.getFields() as FormFieldAttrs[];\r\n    propFields.forEach((it: FormFieldAttrs) => {\r\n      if (it.prop?.includes(propsJoinChar)) {\r\n        rangeKeys.push(it.prop as string);\r\n      }\r\n    }) as unknown as FormFieldAttrs[];\r\n    for (const prop in params) {\r\n      if (excludeKeys && !excludeKeys.includes(prop)) {\r\n        const target = propFields.find((it: FormFieldAttrs) => it.prop === prop);\r\n        if (target) {\r\n          const val = params[prop];\r\n          const canPush = !emptyVals.includes(val) && (typeOf(val) !== \"Array\" || val.some((it: StrNum) => it !== \"\"));\r\n          if (canPush) {\r\n            queryFields.push({\r\n              label: target.label,\r\n              value: getQueryFieldValue(target, val),\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    rangeKeys.forEach(prop => {\r\n      const [minKey, maxKey] = prop.split(propsJoinChar);\r\n      const minVal = params[minKey];\r\n      const maxVal = params[maxKey];\r\n      const target = propFields.find((it: FormFieldAttrs) => it.prop!.includes(prop));\r\n      if (target && (minVal || maxVal)) {\r\n        queryFields.push({\r\n          label: target.label,\r\n          value: [minVal, maxVal].join(rangeJoinChar),\r\n        });\r\n      }\r\n    });\r\n    return queryFields;\r\n  },\r\n});\r\n// 拖拽排序\r\nfunction handleDragSort(ele = queryTableRef.value.tableRef.$el.querySelector(\".el-table__body-wrapper tbody\") as HTMLElement) {\r\n  const { rowKey } = props;\r\n  Sortable.create(ele, {\r\n    handle: \".sort-cell\",\r\n    animation: 300,\r\n    onEnd(res: CommonObj) {\r\n      const { newIndex, oldIndex } = res;\r\n      if (typeof props.sort === \"boolean\") {\r\n        emits(\"dargSortEnd\", { newIndex, oldIndex }, (tips = \"修改排序成功\") => {\r\n          // const removeItem = newRows.value.splice(oldIndex, 1)[0];\r\n          // newRows.value.splice(newIndex, 0, removeItem);\r\n          showMessage(tips);\r\n        });\r\n      } else {\r\n        // (props.sort as any)({[rowKey]})\r\n      }\r\n    },\r\n  });\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.base-crud {\r\n  height: 100%;\r\n  width: 100%;\r\n  // overflow: auto;\r\n}\r\n</style>\r\n"],"names":["openPopup","inject","allCols","ref","props","__props","emits","__emit","closePopup","queryTableRef","queryFormRef","extraBtnsRef","baseCrudRef","reqMap","resMap","extraParams","initPageInfo","pagination","curr_page","currPage","page_size","pageSize","initParams","currPageInfo","reactive","cloneDeep","pageInfo","total","hasMore","loading","newRows","seledRows","model","computed","get","modelValue","set","val","params","newExtraBtns","extraBtns","disabled","filterBtnsByAuth","map","btn","btnObj","getBtnObj","name","attrs","customRules","_a","batchBtnNames","includes","popconfirm","value","length","existBatchBtns","find","it","selectable","selection","newCols","cols","slice","handleReset","Object","assign","getList","handleSearch","data","handleSizeChange","handleCurrChange","handleChange","changedVals","withModelData","immediate","changeFetch","splitPropsParams","args","cb","trigger","fetch","handleRequest","isOmit","handleResponse","selectAll","summaryList","fetchSuccess","fetchFail","log","omitAttrs","printLog","then","res","newList","records","_currPage","t","typeOf","oldList","Error","total_num","has_more","catch","err","finally","onExtraBtn","rowKey","exportCfg","importCfg","text","handleClickExtraBtns","seledKeys","next","hint","closeType","isRefreshList","showMessage","refreshList","clearSelection","onGroupBtn","row","handleSelectionChange","rows","keys","btns","filterByAuth","filter","auth","watch","newVal","deep","onMounted","sort","ele","tableRef","$el","querySelector","Sortable","create","handle","animation","onEnd","newIndex","oldIndex","tips","handleDragSort","__expose","getQueryParams","getQueryFields","excludeKeys","queryFields","rangeKeys","propFields","getFields","forEach","prop","propsJoinChar","push","target","emptyVals","some","label","getQueryFieldValue","minKey","maxKey","split","minVal","maxVal","join","rangeJoinChar"],"mappings":"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"}