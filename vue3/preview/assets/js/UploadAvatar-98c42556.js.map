{"version":3,"file":"UploadAvatar-98c42556.js","sources":["../../../src/components/upload/UploadAvatar.vue"],"sourcesContent":["<!-- 上传头像带裁剪功能等 -->\r\n<template>\r\n  <el-upload\r\n    class=\"upload-avatar f-c-c\"\r\n    action=\"https://run.mocky.io/v3/9d059bf9-4660-45f2-925d-ce80ad6c4d15\"\r\n    :show-file-list=\"false\"\r\n    :on-success=\"handleSuccess\"\r\n    :before-upload=\"beforeUpload\"\r\n    :accept=\"accepts.join(',')\"\r\n  >\r\n    <img :src=\"imgSrc\" class=\"img\" v-if=\"imgSrc\" />\r\n    <BaseIcon name=\"Plus\" size=\"32\" v-else />\r\n  </el-upload>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed } from \"vue\";\r\nimport type { UploadProps } from \"element-plus\";\r\nimport avatarImg from \"@/assets/images/default/avatar.png\";\r\nimport { showMessage } from \"../_utils\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"UploadAvatar\" }); \n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    modelValue?: string;\r\n    accepts?: string[];\r\n    maxSize?: number; //图片大小限制：单位Mb\r\n  }>(),\r\n  {\r\n    modelValue: avatarImg,\r\n    accepts: () => [\"image/png\", \"image/jpeg\"],\r\n    maxSize: 1,\r\n  }\r\n);\r\nconst emits = defineEmits([\"update:modelValue\"]);\r\nconst imgSrc = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(val: any) {\r\n    emits(\"update:modelValue\", val);\r\n  },\r\n});\r\nconst handleSuccess: UploadProps[\"onSuccess\"] = (response, uploadFile) => {\r\n  emits(\"update:modelValue\", URL.createObjectURL(uploadFile.raw!));\r\n};\r\n\r\nconst beforeUpload: UploadProps[\"beforeUpload\"] = rawFile => {\r\n  const { type, size } = rawFile;\r\n  const { accepts, maxSize } = props;\r\n  if (!accepts.includes(type)) {\r\n    const str = accepts.map((it: string) => it.split(\"/\")[1]).join(\"，\");\r\n    showMessage(`请上传 ${str} 格式的图片！`, \"error\");\r\n    return false;\r\n  } else if (size / 1024 / 1024 > maxSize) {\r\n    showMessage(`图片大小不能超过 ${maxSize}MB!`, \"error\");\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.upload-avatar {\r\n  border: 1px dashed $color-border-light;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  width: 100px;\r\n  height: 100px;\r\n  &:hover {\r\n    border-color: $color-border-heavy;\r\n  }\r\n  .img {\r\n  }\r\n}\r\n</style>\r\n"],"names":["props","__props","emits","__emit","imgSrc","computed","get","modelValue","set","val","handleSuccess","response","uploadFile","URL","createObjectURL","raw","beforeUpload","rawFile","type","size","accepts","maxSize","includes","str","map","it","split","join","showMessage"],"mappings":"inDAsBA,MAAMA,EAAQC,EAYRC,EAAQC,EACRC,EAASC,EAAS,CACtBC,IAAM,IACGN,EAAMO,WAEf,GAAAC,CAAIC,GACFP,EAAM,oBAAqBO,EAC7B,IAEIC,EAA0C,CAACC,EAAUC,KACzDV,EAAM,oBAAqBW,IAAIC,gBAAgBF,EAAWG,KAAK,EAG3DC,EAAuDC,IACrD,MAAAC,KAAEA,EAAMC,KAAAA,GAASF,GACjBG,QAAEA,EAASC,QAAAA,GAAYrB,EAC7B,IAAKoB,EAAQE,SAASJ,GAAO,CAC3B,MAAMK,EAAMH,EAAQI,KAAKC,GAAeA,EAAGC,MAAM,KAAK,KAAIC,KAAK,KAExD,OADKC,EAAA,OAAOL,WAAc,UAC1B,CACE,CAAA,QAAAJ,EAAO,KAAO,KAAOE,KAClBO,EAAA,YAAYP,OAAc,UAC/B,EAEF"}