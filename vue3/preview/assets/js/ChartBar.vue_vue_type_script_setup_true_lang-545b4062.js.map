{"version":3,"file":"ChartBar.vue_vue_type_script_setup_true_lang-545b4062.js","sources":["../../../src/components/chart/ChartBar.vue"],"sourcesContent":["<template>\r\n  <Chart class=\"chart-bar\" :option=\"newOpt\" :height=\"height\" :width=\"width\" :theme=\"theme\"></Chart>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport * as echarts from \"echarts\";\r\nimport { reactive, computed } from \"vue\";\r\nimport Chart from \"@/components/chart/Chart.vue\";\r\nimport { typeOf } from \"@/components/_utils\";\r\nimport type { EchartTheme, ChartData } from \"./_config/types\";\r\nimport { merge } from \"lodash\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { axisCfg, gradColors, titleCfg } from \"./_config\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"ChartBar\" }); \n\r\nconst defaultOption = {\r\n  // title: {},\r\n  legend: {},\r\n  barWidth: 16,\r\n  barGap: \"50%\",\r\n  tooltip: {\r\n    trigger: \"item\",\r\n  },\r\n  //类目轴（category）。默认情况下，类目轴对应到 dataset 第一列。\r\n  xAxis: { type: \"category\", ...axisCfg },\r\n  //数值轴（value）。\r\n  yAxis: {\r\n    type: \"value\",\r\n    // name: unit, //纵轴单位\r\n    ...axisCfg,\r\n  },\r\n  grid: { left: 0, top: 30, right: 0, bottom: 0, containLabel: true },\r\n  // dataset: {\r\n  //   // dimensions: [\"product\", \"2015\", \"2016\", \"2017\"],\r\n  //   source: [[\"Matcha Latte\", 43.3, 85.8, 93.7],[\"Milk Tea\", 83.1, 73.4, 55.1]], // 提供一份数据。\r\n  // },\r\n  // 声明多个 bar 系列，默认情况下，每个系列会自动对应到 dataset 的每一列。\r\n  // series: [{ type: \"bar\" }, { type: \"bar\" }, { type: \"bar\" }],\r\n};\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    theme?: EchartTheme;\r\n    height?: string | number;\r\n    width?: string | number;\r\n    title?: string;\r\n    unit?: string;\r\n    data?: ChartData;\r\n    option?: CommonObj;\r\n  }>(),\r\n  {\r\n    data: () => [\r\n      [\"product\", \"2015\", \"2016\", \"2017\"],\r\n      [\"示例1\", 43.3, 85.8, 93.7],\r\n      [\"示例2\", 83.1, 73.4, 55.1],\r\n      [\"示例3\", 86.4, 65.2, 82.5],\r\n      [\"示例4\", 72.4, 53.9, 39.1],\r\n      // [\"product\", \"2015\"],\r\n      // [\"Matcha Latte\", 43.3],\r\n      // [\"Milk Tea\", 83.1],\r\n      // [\"Cheese Cocoa\", 86.4],\r\n      // [\"Walnut Brownie\", 72.4],\r\n    ],\r\n    option: () => ({}),\r\n  }\r\n);\r\nconst newOpt = computed(() => {\r\n  const { option, data, title, unit } = props;\r\n  return merge(\r\n    {},\r\n    defaultOption,\r\n    {\r\n      ...(title && { title: { text: title, ...titleCfg } }),\r\n      ...(unit && { yAxis: { name: unit } }),\r\n      dataset: {\r\n        source: data,\r\n      },\r\n      series: getSeries(),\r\n    },\r\n    option\r\n  );\r\n});\r\n/**\r\n * 获取series\r\n */\r\nfunction getSeries() {\r\n  const { data, option } = props;\r\n  const barWidth = option.barWidth || defaultOption.barWidth;\r\n  return (\r\n    data[0]?.slice(1)?.map((item: any, ind: number) => {\r\n      return {\r\n        type: \"bar\",\r\n        itemStyle: {\r\n          borderRadius: [barWidth / 2, barWidth / 2, 0, 0],\r\n          color: getItemColor(ind),\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"#666\",\r\n          fontSize: 14,\r\n        },\r\n      };\r\n    }) || []\r\n  );\r\n}\r\n\r\n/**\r\n * 获取series 的itemStyle的color值\r\n * @param ind {number} 数组下标值\r\n * @param isMulti {boolean} 是否是多维度\r\n */\r\nfunction getItemColor(ind: number, isMulti?: boolean) {\r\n  const { data } = props;\r\n  isMulti = typeOf(isMulti) === \"Undefined\" ? data[0].length > 2 : isMulti;\r\n  /** 多维度多色，同一维度同一种颜色 */\r\n  if (isMulti) {\r\n    //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n    return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n      {\r\n        offset: 0,\r\n        color: gradColors[ind][0],\r\n      },\r\n      {\r\n        offset: 1,\r\n        color: gradColors[ind][1],\r\n      },\r\n    ]);\r\n  } else {\r\n    /** 单维度多色可用，同一维度不同颜色 */\r\n    return (params: CommonObj) => {\r\n      const i = params.dataIndex;\r\n      //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n      return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n        {\r\n          offset: 0,\r\n          color: gradColors[i][0],\r\n        },\r\n        {\r\n          offset: 1,\r\n          color: gradColors[i][1],\r\n        },\r\n      ]);\r\n    };\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n"],"names":["defaultOption","legend","barWidth","barGap","tooltip","trigger","xAxis","type","axisCfg","yAxis","grid","left","top","right","bottom","containLabel","props","__props","newOpt","computed","option","data","title","unit","merge","text","titleCfg","name","dataset","source","series","getSeries","_b","_a","slice","map","item","ind","itemStyle","borderRadius","color","getItemColor","label","show","position","fontSize","isMulti","typeOf","length","echarts.graphic.LinearGradient","offset","gradColors","params","i","dataIndex"],"mappings":"qkBAgBA,MAAMA,EAAgB,CAEpBC,OAAQ,CAAC,EACTC,SAAU,GACVC,OAAQ,MACRC,QAAS,CACPC,QAAS,QAGXC,MAAO,CAAEC,KAAM,cAAeC,GAE9BC,MAAO,CACLF,KAAM,WAEHC,GAELE,KAAM,CAAEC,KAAM,EAAGC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,EAAGC,cAAc,IAQzDC,EAAQC,EA0BRC,EAASC,GAAS,KACtB,MAAMC,OAAEA,EAAAC,KAAQA,EAAMC,MAAAA,EAAAC,KAAOA,GAASP,EAC/B,OAAAQ,EAAAA,MACL,CAAC,EACDxB,EACA,IACMsB,GAAS,CAAEA,MAAO,CAAEG,KAAMH,KAAUI,OACpCH,GAAQ,CAAEd,MAAO,CAAEkB,KAAMJ,IAC7BK,QAAS,CACPC,OAAQR,GAEVS,OAAQC,KAEVX,EAAA,IAMJ,SAASW,YACD,MAAAV,KAAEA,EAAMD,OAAAA,GAAWJ,EACnBd,EAAWkB,EAAOlB,UAAYF,EAAcE,SAEhD,OAAA,OAAA8B,EAAA,OAAAC,EAAAZ,EAAK,SAAI,EAAAY,EAAAC,MAAM,SAAI,EAAAF,EAAAG,KAAI,CAACC,EAAWC,KAC1B,CACL9B,KAAM,MACN+B,UAAW,CACTC,aAAc,CAACrC,EAAW,EAAGA,EAAW,EAAG,EAAG,GAC9CsC,MAAOC,EAAaJ,IAEtBK,MAAO,CACLC,MAAM,EACNC,SAAU,MACVJ,MAAO,OACPK,SAAU,UAGV,EAEV,CAOS,SAAAJ,EAAaJ,EAAaS,GAC3B,MAAAzB,KAAEA,GAASL,EAGjB,OAFU8B,EAAoB,cAApBC,EAAOD,GAA2BzB,EAAK,GAAG2B,OAAS,EAAIF,GAIxD,IAAIG,EAA+B,EAAG,EAAG,EAAG,EAAG,CACpD,CACEC,OAAQ,EACRV,MAAOW,EAAWd,GAAK,IAEzB,CACEa,OAAQ,EACRV,MAAOW,EAAWd,GAAK,MAKnBe,IACN,MAAMC,EAAID,EAAOE,UAEjB,OAAO,IAAIL,EAA+B,EAAG,EAAG,EAAG,EAAG,CACpD,CACEC,OAAQ,EACRV,MAAOW,EAAWE,GAAG,IAEvB,CACEH,OAAQ,EACRV,MAAOW,EAAWE,GAAG,KAExB,CAGP"}