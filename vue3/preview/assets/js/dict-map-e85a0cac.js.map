{"version":3,"file":"dict-map-e85a0cac.js","sources":["../../../src/hooks/dict-map.ts"],"sourcesContent":["import { useDictStore } from \"@/store\";\r\nimport { merge } from \"lodash\";\r\nimport dict, { CascaderName, DictName } from \"@/dict\";\r\nimport { printLog, storage, typeOf } from \"@/utils\";\r\nimport { CommonObj, StrNum, OptionItem, FetchType } from \"@/vite-env\";\r\n\r\nexport default () => {\r\n  const { dictMap, cascaderMap } = useDictStore();\r\n  /**\r\n   * 获取tagMap\r\n   * @param name 映射map的名称\r\n   * @param codeMap 例如：YesNo 的 codeMap: {0:1, 1:0}，显示时就会将是否对调\r\n   */\r\n  function getMap(name: DictName, codeMap?: CommonObj) {\r\n    const currMap = dictMap[name];\r\n    if (!currMap) return console.error(\"未找到name为\" + name + \"的tagMap\");\r\n    if (codeMap) {\r\n      const tempMap: CommonObj = {};\r\n      for (const key in codeMap) {\r\n        tempMap[key] = currMap[codeMap[key]];\r\n      }\r\n      return merge({}, currMap, tempMap); //是为了可以不写完所有code（只写出需要对调的code即可）\r\n    }\r\n    return currMap;\r\n  }\r\n\r\n  /**\r\n   * 获取字典文本内容\r\n   * @param {string} name  字典名称\r\n   * @param {string} key  字典中的建名\r\n   * @param {string} char  为空时的占位符号\r\n   */\r\n  function getText(name: DictName, key: StrNum, char = \"-\"): string {\r\n    const currMap = getMap(name);\r\n    return currMap[key]?.text || char;\r\n  }\r\n\r\n  /**\r\n   * 获取字典下拉项\r\n   * @param name DictName 字典名称\r\n   * @param includeKeys string[] 过滤时要包含的keys\r\n   * @param isExclude boolean 是否排除掉要包含的keys\r\n   */\r\n  function getOpts(name: DictName, includeKeys: StrNum[] = [], isExclude = false): OptionItem[] {\r\n    const currMap = getMap(name);\r\n    let opts: OptionItem[] = [];\r\n    for (const key in currMap) {\r\n      const { text, disabled } = currMap[key];\r\n      const val = isNaN(Number(key)) ? key : Number(key);\r\n      const opt: OptionItem = { label: text, value: val };\r\n      if (disabled !== undefined) {\r\n        opt.disabled = disabled;\r\n      }\r\n      opts.push(opt);\r\n    }\r\n    if (typeOf(includeKeys) !== \"Array\") {\r\n      throw new Error(\"请传入一个数组\");\r\n    }\r\n    if (includeKeys?.length) {\r\n      opts = opts.filter(it => {\r\n        const isInclude = includeKeys.includes(it.value as StrNum);\r\n        return isExclude ? !isInclude : isInclude;\r\n      });\r\n    }\r\n    return opts;\r\n  }\r\n\r\n  // 获取级联中的文字\r\n  function getCascaderText(name: CascaderName, val: StrNum, char = \"-\") {\r\n    if (typeof val === \"undefined\") return char;\r\n    const regions: OptionItem[] = cascaderMap[name];\r\n    if (!regions) throw new Error(`未找到name为${name}的字典映射`);\r\n    let text = \"\";\r\n    regions.find(item => {\r\n      const { label, children = [] } = item;\r\n      const target = children.find((it: OptionItem) => it.value === val);\r\n      if (target) {\r\n        text = `${label}${char}${target.label}`;\r\n      }\r\n      return !!target;\r\n    });\r\n    return text;\r\n  }\r\n\r\n  // 获取级联下拉项\r\n  function getCascaderOpts(name: CascaderName): OptionItem[] {\r\n    const opts = cascaderMap[name];\r\n    if (!opts) throw new Error(`未找到name为${name}的字典映射`);\r\n    return opts;\r\n  }\r\n\r\n  return {\r\n    getMap,\r\n    getText,\r\n    getOpts,\r\n    getCascaderText,\r\n    getCascaderOpts,\r\n  };\r\n};\r\n"],"names":["useDictMap","dictMap","cascaderMap","useDictStore","getMap","name","codeMap","currMap","tempMap","key","merge","getText","char","_a","text","getOpts","includeKeys","isExclude","opts","disabled","opt","label","value","isNaN","Number","push","typeOf","Error","length","filter","it","isInclude","includes","getCascaderText","val","regions","find","item","children","target","getCascaderOpts"],"mappings":"oHAMA,MAAAA,EAAe,KACb,MAAMC,QAAEA,EAAAC,YAASA,GAAgBC,IAMxB,SAAAC,EAAOC,EAAgBC,GACxB,MAAAC,EAAUN,EAAQI,GACxB,GAAKE,EAAL,CACA,GAAID,EAAS,CACX,MAAME,EAAqB,CAAA,EAC3B,IAAA,MAAWC,KAAOH,EAChBE,EAAQC,GAAOF,EAAQD,EAAQG,IAEjC,OAAOC,QAAM,CAAA,EAAIH,EAASC,EAC5B,CACO,OAAAD,CARyD,CASlE,CAmEO,MAAA,CACLH,SACAO,QA7DF,SAAiBN,EAAgBI,EAAaG,EAAO,WAE5C,OAAA,OAAAC,EADST,EAAOC,GACRI,SAAR,EAAAI,EAAcC,OAAQF,CAC/B,EA2DEG,QAnDF,SAAiBV,EAAgBW,EAAwB,GAAIC,GAAY,GACjE,MAAAV,EAAUH,EAAOC,GACvB,IAAIa,EAAqB,GACzB,IAAA,MAAWT,KAAOF,EAAS,CACzB,MAAMO,KAAEA,EAAAK,SAAMA,GAAaZ,EAAQE,GAE7BW,EAAkB,CAAEC,MAAOP,EAAMQ,MAD3BC,MAAMC,OAAOf,IAAQA,EAAMe,OAAOf,SAE7B,IAAbU,IACFC,EAAID,SAAWA,GAEjBD,EAAKO,KAAKL,EACZ,CACI,GAAwB,UAAxBM,EAAOV,GACH,MAAA,IAAIW,MAAM,WAQX,aANHX,WAAaY,UACRV,EAAAA,EAAKW,QAAaC,IACvB,MAAMC,EAAYf,EAAYgB,SAASF,EAAGR,OACnC,OAAAL,GAAac,EAAYA,CAAA,KAG7Bb,CACT,EA8BEe,gBA3BF,SAAyB5B,EAAoB6B,EAAatB,EAAO,KAC/D,QAAmB,IAARsB,EAA4B,OAAAtB,EACjC,MAAAuB,EAAwBjC,EAAYG,GAC1C,IAAK8B,EAAS,MAAM,IAAIR,MAAM,WAAWtB,UACzC,IAAIS,EAAO,GASJ,OARCqB,EAAAC,MAAaC,IACnB,MAAMhB,MAAEA,EAAAiB,SAAOA,EAAW,IAAOD,EAC3BE,EAASD,EAASF,MAAMN,GAAmBA,EAAGR,QAAUY,IAI9D,OAHIK,IACFzB,EAAO,GAAGO,IAAQT,IAAO2B,EAAOlB,WAEzBkB,CAAA,IAEJzB,CACT,EAcE0B,gBAXF,SAAyBnC,GACjB,MAAAa,EAAOhB,EAAYG,GACzB,IAAKa,EAAM,MAAM,IAAIS,MAAM,WAAWtB,UAC/B,OAAAa,CACT,EAOE"}