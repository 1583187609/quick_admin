{"version":3,"file":"index-c75b50f3.js","sources":["../../../src/hooks/select-opts/index.ts","../../../src/api-mock/base.ts"],"sourcesContent":["// 获取下拉项 select 的 options\r\nimport { ref, computed, nextTick, h } from \"vue\";\r\nimport CompanyOption from \"./_components/CompanyOption.vue\";\r\nimport { GetOptionsSchool, GetOptionsCompany } from \"@/api-mock\";\r\nimport { CommonObj, OptionItem, StrNum } from \"@/vite-env\";\r\nimport { FormFieldAttrs } from \"@/components/BaseFormItem\";\r\n\r\nexport type SelectSearchType = \"school\" | \"company\";\r\n\r\nconst typeMap: CommonObj = {\r\n  school: {\r\n    reqNameKey: \"name\",\r\n    resValKey: \"id\", //跟下方的handleItem中的value对应的键名保持一致\r\n    fetchApi: GetOptionsSchool,\r\n    defaultField: { prop: \"xx\", label: \"学校\", type: \"select\" },\r\n    handleItem(item: CommonObj) {\r\n      const { name, id } = item;\r\n      return { label: name, value: id };\r\n    },\r\n  },\r\n  company: {\r\n    reqNameKey: \"name\",\r\n    resValKey: \"id\",\r\n    fetchApi: GetOptionsCompany,\r\n    defaultField: { prop: \"gs\", label: \"公司\", type: \"select\" },\r\n    handleItem(item: CommonObj) {\r\n      const { fullName, shortName, id } = item;\r\n      return {\r\n        label: fullName,\r\n        customOption: h(CompanyOption, { fullName, shortName }),\r\n        value: id,\r\n      };\r\n    },\r\n  },\r\n};\r\n\r\nexport default () => {\r\n  /**\r\n   * 获取输入并搜索的下拉项\r\n   * @tips 作为 \"school\" | \"company\" 两个搜索下拉项的整合\r\n   */\r\n  function getSearchOpts(\r\n    type: SelectSearchType,\r\n    field: FormFieldAttrs,\r\n    name?: string,\r\n    cb?: (val: StrNum, row: CommonObj) => void\r\n  ) {\r\n    if (!typeMap[type]) throw new Error(`不存在type为${type}的类型`);\r\n    const { fetchApi, defaultField, handleItem, reqNameKey = \"name\", resValKey = \"id\", extraParams } = typeMap[type];\r\n    const loading = ref<boolean>(false);\r\n    const resList = ref<CommonObj[]>([]);\r\n    const opts = computed<OptionItem[]>(() => {\r\n      const _opts: OptionItem[] = resList.value.map(handleItem);\r\n      return _opts;\r\n    });\r\n    name && fetchOpts(name);\r\n\r\n    //获取学校的下拉项，可输入搜索\r\n    function fetchOpts(val = \"\", isFocus = false) {\r\n      if (!val && !isFocus) return; //为了规避当确定选择项后，会再次触发remoteMethod方法，导致opts的选项发生变化，影响其他逻辑\r\n      loading.value = !!val;\r\n      fetchApi({ [reqNameKey]: val, ...extraParams })\r\n        .then((res: CommonObj) => {\r\n          resList.value = res || [];\r\n        })\r\n        .finally(() => {\r\n          loading.value = false;\r\n        });\r\n    }\r\n\r\n    //处理change回调函数\r\n    function handleChange(val: StrNum) {\r\n      const target = resList.value.find((it: CommonObj) => it[resValKey] === val) as CommonObj;\r\n      //为了处理回调之后，再重新选择下拉项，change事件已触发，但选中的项渲染列未更新的bug（此时需要点击两次）\r\n      nextTick(() => {\r\n        cb!(val, target);\r\n      });\r\n    }\r\n\r\n    return {\r\n      ...{ ...defaultField, ...field },\r\n      options: opts,\r\n      attrs: {\r\n        filterable: true,\r\n        remote: true,\r\n        remoteShowSuffix: true,\r\n        defaultFirstOption: true,\r\n        onFocus: () => fetchOpts(\"\", true),\r\n        remoteMethod: fetchOpts,\r\n        onChange: cb ? handleChange : undefined,\r\n        loading,\r\n      },\r\n    };\r\n  }\r\n\r\n  return {\r\n    getSearchOpts,\r\n  };\r\n};\r\n","import http from \"@/services/http\";\r\nimport { CommonObj } from \"@/vite-env\";\r\n\r\n/************ select 下拉项 *************/\r\n//获取学校列表数据\r\nexport const GetOptionsSchool = (data?: CommonObj) => http(\"get\", \"/options/school\", data);\r\n//获取公司列表数据\r\nexport const GetOptionsCompany = (data?: CommonObj) => http(\"get\", \"/options/company\", data);\r\n\r\n/************ cascader 下拉项 *************/\r\n// 获取mock 地区省市区县\r\nexport const GetCascaderRegion = (data?: CommonObj) => http(\"get\", \"/cascader/region\", data);\r\n"],"names":["typeMap","school","reqNameKey","resValKey","fetchApi","data","http","defaultField","prop","label","type","handleItem","item","name","id","value","company","fullName","shortName","customOption","h","CompanyOption","useSelectOpts","getSearchOpts","field","cb","Error","extraParams","loading","ref","resList","opts","computed","map","fetchOpts","val","isFocus","then","res","finally","options","attrs","filterable","remote","remoteShowSuffix","defaultFirstOption","onFocus","remoteMethod","onChange","target","find","it","nextTick"],"mappings":"8aASMA,EAAqB,CACzBC,OAAQ,CACNC,WAAY,OACZC,UAAW,KACXC,SCR6BC,GAAqBC,EAAK,MAAO,kBAAmBD,GDSjFE,aAAc,CAAEC,KAAM,KAAMC,MAAO,KAAMC,KAAM,UAC/C,UAAAC,CAAWC,GACH,MAAAC,KAAEA,EAAMC,GAAAA,GAAOF,EACrB,MAAO,CAAEH,MAAOI,EAAME,MAAOD,EAC/B,GAEFE,QAAS,CACPd,WAAY,OACZC,UAAW,KACXC,SChB8BC,GAAqBC,EAAK,MAAO,mBAAoBD,GDiBnFE,aAAc,CAAEC,KAAM,KAAMC,MAAO,KAAMC,KAAM,UAC/C,UAAAC,CAAWC,GACT,MAAMK,SAAEA,EAAAC,UAAUA,EAAWJ,GAAAA,GAAOF,EAC7B,MAAA,CACLH,MAAOQ,EACPE,aAAcC,EAAEC,EAAe,CAAEJ,WAAUC,cAC3CH,MAAOD,EAEX,IAIJQ,EAAe,KA2DN,CACLC,cAvDF,SACEb,EACAc,EACAX,EACAY,GAEI,IAACzB,EAAQU,GAAO,MAAM,IAAIgB,MAAM,WAAWhB,QACzC,MAAAN,SAAEA,EAAUG,aAAAA,EAAAI,WAAcA,EAAYT,WAAAA,EAAa,OAAQC,UAAAA,EAAY,KAAMwB,YAAAA,GAAgB3B,EAAQU,GACrGkB,EAAUC,GAAa,GACvBC,EAAUD,EAAiB,IAC3BE,EAAOC,GAAuB,IACNF,EAAQf,MAAMkB,IAAItB,KAMhD,SAASuB,EAAUC,EAAM,GAAIC,GAAU,IAChCD,GAAQC,KACLR,EAAAb,QAAUoB,EACT/B,EAAA,CAAEF,CAACA,GAAaiC,KAAQR,IAC9BU,MAAMC,IACGR,EAAAf,MAAQuB,GAAO,MAExBC,SAAQ,KACPX,EAAQb,OAAQ,CAAA,IAEtB,CAWO,OAxBPF,GAAQqB,EAAUrB,GAwBX,IACF,IAAKN,KAAiBiB,GACzBgB,QAAST,EACTU,MAAO,CACLC,YAAY,EACZC,QAAQ,EACRC,kBAAkB,EAClBC,oBAAoB,EACpBC,QAAS,IAAMZ,EAAU,IAAI,GAC7Ba,aAAcb,EACdc,SAAUvB,EAlBd,SAAsBU,GACd,MAAAc,EAASnB,EAAQf,MAAMmC,MAAMC,GAAkBA,EAAGhD,KAAegC,IAEvEiB,GAAS,KACP3B,EAAIU,EAAKc,EAAM,GAEnB,OAYkC,EAC9BrB,WAGN"}