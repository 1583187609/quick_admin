{"version":3,"file":"SectionForm-ddf0e998.js","sources":["../../../src/components/form/SectionForm.vue"],"sourcesContent":["<!-- 分块（组）表单 -->\r\n<template>\r\n  <el-form class=\"section-form f-fs-s-c\" :model=\"formData\" v-bind=\"defaultFormAttrs\" @keyup.enter=\"handleEnter\" ref=\"formRef\">\r\n    <div class=\"all-hide-scroll f-fs-s-w\" :class=\"{ 'auto-fixed-foot': autoFixedFoot }\">\r\n      <template v-if=\"newSections.length\">\r\n        <section\r\n          class=\"section\"\r\n          :class=\"{\r\n            [`f-span-${sItem.span ?? 24}`]: true,\r\n          }\"\r\n          v-for=\"(sItem, sInd) in newSections\"\r\n          :key=\"sInd\"\r\n        >\r\n          <!-- @click=\"toggleFold($event, sInd)\" -->\r\n          <div class=\"head f-sb-c\">\r\n            <div class=\"title f-fs-c\">\r\n              <span class=\"line-1\">{{ sItem.title }}</span>\r\n              <el-popover v-bind=\"getPopoverAttrs(sItem.popover)\" v-if=\"sItem.popover\">\r\n                <template #reference>\r\n                  <BaseIcon :color=\"cssVars.colorInfo\" class=\"ml-q\" name=\"QuestionFilled\" v-if=\"sItem.popover\"></BaseIcon>\r\n                </template>\r\n              </el-popover>\r\n            </div>\r\n            <slot :name=\"'right-' + (sItem.prop ?? sInd)\"></slot>\r\n            <BaseIcon\r\n              @click=\"folds[sInd] = !folds[sInd]\"\r\n              class=\"fold-btn f-0\"\r\n              :class=\"folds[sInd] ? 'rotate-180' : ''\"\r\n              size=\"1.5em\"\r\n              name=\"CaretTop\"\r\n              v-if=\"foldable\"\r\n            />\r\n          </div>\r\n          <div class=\"body f-fs-fs-w\" :style=\"{ 'max-height': folds[sInd] ? '0' : '100vh' }\">\r\n            <slot :name=\"sItem.prop\" :form=\"formData\" v-if=\"sItem.type === 'custom'\"></slot>\r\n            <template v-else>\r\n              <template v-for=\"(field, ind) in sItem.fields\" :key=\"field?.key ?? ind\">\r\n                <BaseFormItem\r\n                  :className=\"`f-span-${field.extra?.span || span}`\"\r\n                  :field=\"field\"\r\n                  :pureText=\"field?.extra?.pureText || sItem.pureText || pureText\"\r\n                  v-model=\"formData[sItem.prop][field.prop as string]\"\r\n                  @change=\"(prop:any,val:any)=>emits('change',prop,val)\"\r\n                  :formRef=\"formRef\"\r\n                  v-if=\"sItem.prop\"\r\n                >\r\n                  <template #custom=\"{ field: currField }\">\r\n                    <slot :name=\"currField.prop\" :field=\"currField\" :form=\"formData\"></slot>\r\n                  </template>\r\n                </BaseFormItem>\r\n                <BaseFormItem\r\n                  :className=\"`f-span-${field?.extra?.span || span}`\"\r\n                  :field=\"field\"\r\n                  :pureText=\"field?.extra?.pureText || sItem?.extra?.pureText || pureText\"\r\n                  v-model=\"formData[field.prop as string]\"\r\n                  @change=\"(prop:any,val:any)=>emits('change',prop,val)\"\r\n                  :formRef=\"formRef\"\r\n                  v-else\r\n                >\r\n                  <template #custom=\"{ field: currField }\">\r\n                    <slot :name=\"currField.prop\" :field=\"currField\" :form=\"formData\"></slot>\r\n                  </template>\r\n                </BaseFormItem>\r\n              </template>\r\n            </template>\r\n          </div>\r\n        </section>\r\n      </template>\r\n      <div class=\"f-c-c pb-o\" v-else>空空如也~</div>\r\n    </div>\r\n    <FooterBtns\r\n      :loading=\"loading\"\r\n      :moreBtns=\"moreBtns\"\r\n      :submitText=\"submitText\"\r\n      :resetText=\"resetText\"\r\n      :formRef=\"formRef\"\r\n      :isOmit=\"isOmit\"\r\n      :log=\"log\"\r\n      :debug=\"debug\"\r\n      :params=\"params\"\r\n      :fetch=\"fetch\"\r\n      :fetchSuccess=\"fetchSuccess\"\r\n      :fetchFail=\"fetchFail\"\r\n      :noSubmitProps=\"noSubmitProps\"\r\n      :handleRequest=\"handleRequest\"\r\n      :disabled=\"!newSections.length\"\r\n      @moreBtns=\"(name:string, args?:CommonObj, cb?:FinallyNext) => emits('moreBtns', name, args, cb)\"\r\n      @submit=\"(args:CommonObj)=>emits('submit', args)\"\r\n      ref=\"footerBtnsRef\"\r\n      v-if=\"!pureText && footer\"\r\n    />\r\n  </el-form>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, computed, watch, watchEffect } from \"vue\";\r\nimport { FormInstance } from \"element-plus\";\r\nimport { getMaxLength, typeOf, getPopoverAttrs, isProd } from \"@/components/_utils\";\r\nimport { FormField, FormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport { merge } from \"lodash\";\r\nimport { handleFields } from \"./_utils\";\r\nimport FooterBtns from \"./_components/FooterBtns.vue\";\r\nimport { BaseBtnType } from \"@/components/BaseBtn\";\r\nimport { SectionFormItemAttrs, SectionFormItem, defaultFormAttrs } from \"@/components/form\";\r\nimport { CommonObj, FinallyNext, UniteFetchType, StrNum } from \"@/vite-env\";\r\nimport cssVars from \"@/assets/styles/_var.module.scss\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"SectionForm\" }); \n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    modelValue?: CommonObj; //表单数据\r\n    sections?: SectionFormItem[];\r\n    pureText?: boolean; //是否纯文本展示\r\n    foldable?: boolean; //是否允许折叠\r\n    fetch?: UniteFetchType; //接口请求\r\n    fetchSuccess?: FinallyNext; //fetch请求成功之后的回调方法\r\n    fetchFail?: () => void; //fetch请求失败之后的回调方法\r\n    footer?: boolean; //是否显示底部按钮\r\n    span?: number | string; // 同ElementPlus的span，1~24\r\n    submitText?: string; //提交按钮的文字\r\n    resetText?: string; //提交按钮的文字\r\n    extraParams?: CommonObj; //额外的参数\r\n    moreBtns?: BaseBtnType[]; //底部的额外更多按钮\r\n    loading?: boolean; //提交按钮是否显示加载图标\r\n    isOmit?: boolean; //是否剔除掉 undefined，'' 参数\r\n    log?: boolean; //是否通过 console.log 打印输出请求参数和响应参数\r\n    debug?: boolean; //是否终止提交，并打印传参\r\n    autoFixedFoot?: boolean; //是否自动固定底部下方按钮（设为false时，盒子阴影才不会被遮挡）\r\n    noSubmitProps?: string[]; //提交表单时，不要提交的prop属性\r\n    labelWidthBySection?: boolean; //表单项的labelWidth根据各部分的label文字自动确定宽度\r\n    handleRequest?: (args: CommonObj) => CommonObj; //处理参数\r\n  }>(),\r\n  {\r\n    modelValue: () => reactive({}),\r\n    log: !isProd,\r\n    span: 24,\r\n    footer: true,\r\n    isOmit: true,\r\n    foldable: true,\r\n    autoFixedFoot: true,\r\n    labelWidthBySection: true,\r\n    sections: () => [],\r\n  }\r\n);\r\nconst emits = defineEmits([\"update:modelValue\", \"submit\", \"change\", \"moreBtns\"]);\r\nconst footerBtnsRef = ref<any>(null);\r\nconst folds = ref<boolean[]>([]);\r\nconst formRef = ref<FormInstance>();\r\nconst newSections = ref<SectionFormItemAttrs[]>([]);\r\nconst formData = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(val: CommonObj) {\r\n    emits(\"update:modelValue\", val);\r\n  },\r\n});\r\nconst params = computed(() => merge({}, formData.value, props.extraParams));\r\nwatch(\r\n  () => props.sections,\r\n  newVals => {\r\n    const { modelValue, labelWidthBySection } = props;\r\n    newSections.value = newVals.filter((secItem: SectionFormItem) => {\r\n      if (typeOf(secItem) !== \"Object\") return false;\r\n      const { type, prop, fields, fieldAttrs } = secItem as SectionFormItemAttrs;\r\n      if (typeOf(prop) !== \"Undefined\") {\r\n        const defVal = modelValue?.[prop as string];\r\n        formData.value[prop as string] = type === \"custom\" ? defVal : handleFields(fields, emits, defVal).data;\r\n      } else {\r\n        const result = handleFields(fields, emits, modelValue, fieldAttrs);\r\n        let { fields: _fields } = result;\r\n        const { data } = result;\r\n        merge(formData.value, data);\r\n        if (labelWidthBySection) {\r\n          const labelLen = getMaxLength(fields);\r\n          _fields = _fields.map((field: FormFieldAttrs, ind: number) => {\r\n            field.labelWidth = labelLen + \"em\";\r\n            return field;\r\n          });\r\n        }\r\n        (secItem as SectionFormItemAttrs).fields = _fields;\r\n      }\r\n      return true;\r\n    }) as SectionFormItemAttrs[];\r\n  },\r\n  { immediate: true, deep: true }\r\n);\r\n// function toggleFold(e: any, ind: number) {\r\n//   if (e.target?.classList?.contains(\"head\")) {\r\n//     folds.value[ind] = !folds.value[ind];\r\n//   }\r\n// }\r\n//处理表单的enter时间\r\nfunction handleEnter() {\r\n  if (props.fetch) {\r\n    footerBtnsRef.value.submit();\r\n  } else {\r\n    emits(\"submit\", params.value);\r\n  }\r\n}\r\ndefineExpose({\r\n  formRef,\r\n  formValidate() {\r\n    return footerBtnsRef.value.formValidate();\r\n  },\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.section-form {\r\n  height: 100%;\r\n}\r\n.section {\r\n  width: 100%;\r\n  margin-bottom: $gap;\r\n  .head {\r\n    padding: $gap-qtr;\r\n    border-bottom: $border-main;\r\n    .title {\r\n      margin-right: auto;\r\n      font-size: $font-size-heavy;\r\n      &::before {\r\n        content: \"\";\r\n        display: block;\r\n        width: 6px;\r\n        height: 1em;\r\n        border-radius: 3px;\r\n        background: $color-primary;\r\n        margin-right: $gap-half;\r\n      }\r\n    }\r\n    .fold-btn {\r\n      margin-left: $gap-qtr;\r\n      cursor: pointer;\r\n      transition: all $transition-time-main;\r\n      &:hover {\r\n        color: $color-primary;\r\n      }\r\n    }\r\n  }\r\n  .body {\r\n    padding: $gap 0 0;\r\n    width: 100%;\r\n    transition: max-height $transition-time-main;\r\n    overflow: hidden;\r\n  }\r\n}\r\n.auto-fixed-foot {\r\n  overflow: auto;\r\n  overscroll-behavior: auto;\r\n}\r\n</style>\r\n"],"names":["props","__props","emits","__emit","footerBtnsRef","ref","folds","formRef","newSections","formData","computed","get","modelValue","set","val","params","merge","value","extraParams","handleEnter","fetch","submit","watch","sections","newVals","labelWidthBySection","filter","secItem","typeOf","type","prop","fields","fieldAttrs","defVal","handleFields","data","result","_fields","labelLen","getMaxLength","map","field","ind","labelWidth","immediate","deep","__expose","formValidate"],"mappings":"g3EA6GA,MAAMA,EAAQC,EAoCRC,EAAQC,EACRC,EAAgBC,EAAS,MACzBC,EAAQD,EAAe,IACvBE,EAAUF,IACVG,EAAcH,EAA4B,IAC1CI,EAAWC,EAAS,CACxBC,IAAM,IACGX,EAAMY,WAEf,GAAAC,CAAIC,GACFZ,EAAM,oBAAqBY,EAC7B,IAEIC,EAASL,GAAS,IAAMM,QAAM,CAAA,EAAIP,EAASQ,MAAOjB,EAAMkB,eAoC9D,SAASC,IACHnB,EAAMoB,MACRhB,EAAca,MAAMI,SAEdnB,EAAA,SAAUa,EAAOE,MAE3B,QAzCAK,GACE,IAAMtB,EAAMuB,WACDC,IACH,MAAAZ,WAAEA,EAAYa,oBAAAA,GAAwBzB,EAC5CQ,EAAYS,MAAQO,EAAQE,QAAQC,IAC9B,GAAoB,WAApBC,EAAOD,GAA8B,OAAA,EACzC,MAAME,KAAEA,EAAAC,KAAMA,EAAMC,OAAAA,EAAAC,WAAQA,GAAeL,EACvC,GAAiB,cAAjBC,EAAOE,GAAuB,CAC1B,MAAAG,EAAsB,MAAbrB,OAAa,EAAAA,EAAAkB,GACnBrB,EAAAQ,MAAMa,GAA2B,WAATD,EAAoBI,EAASC,EAAaH,EAAQ7B,EAAO+B,GAAQE,IAAA,KAC7F,CACL,MAAMC,EAASF,EAAaH,EAAQ7B,EAAOU,EAAYoB,GACnD,IAAED,OAAQM,GAAYD,EACpB,MAAAD,KAAEA,GAASC,EAEjB,GADMpB,EAAAA,MAAAP,EAASQ,MAAOkB,GAClBV,EAAqB,CACjB,MAAAa,EAAWC,EAAaR,GAC9BM,EAAUA,EAAQG,KAAI,CAACC,EAAuBC,KAC5CD,EAAME,WAAaL,EAAW,KACvBG,IAEX,CACCd,EAAiCI,OAASM,CAC7C,CACO,OAAA,CAAA,GACR,GAEH,CAAEO,WAAW,EAAMC,MAAM,IAedC,EAAA,CACXvC,UACAwC,aAAe,IACN3C,EAAca,MAAM8B"}