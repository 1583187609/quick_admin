{"version":3,"file":"AddDelList.vue_vue_type_script_setup_true_lang-9a34d6f0.js","sources":["../../../src/components/BaseFormItem/_components/AddDelList.vue"],"sourcesContent":["<!-- 页面-简介 -->\r\n<template>\r\n  <el-form-item style=\"margin-bottom: 18px; width: 100%\" v-for=\"(item, ind) in newList\" :key=\"ind\">\r\n    <!-- <el-space> -->\r\n    <BaseFormItem\r\n      :prefixProp=\"`${parentProp}[${ind}]`\"\r\n      :field=\"field\"\r\n      :pureText=\"field.extra?.pureText || pureText\"\r\n      v-model=\"newList[ind][field.prop as string]\"\r\n      className=\"mr-o\"\r\n      v-bind=\"field\"\r\n      :ref=\"el => initRefsList(el, ind)\"\r\n      v-for=\"(field, fInd) in newFields\"\r\n      :key=\"fInd\"\r\n    />\r\n    <AddDelBtn @click=\"(type:AddDelBtnType)=>handleAddDel(type,ind)\" :type=\"ind < newList.length - 1 ? 'del' : 'add'\" />\r\n    <!-- </el-space> -->\r\n  </el-form-item>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, watch, computed } from \"vue\";\r\nimport { FormField, FormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport AddDelBtn, { AddDelBtnType } from \"@/components/AddDelBtn.vue\";\r\nimport { merge } from \"lodash\";\r\nimport { handleFields, getAddDelItem } from \"@/components/form/_utils\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { showMessage } from \"@/components/_utils\";\r\nimport { typeOf } from \"#/mock/utils\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"AddDelList\" }); \n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    modelValue?: any;\r\n    parentProp: string;\r\n    fields: FormField[];\r\n    pureText?: boolean;\r\n    formRef?: any;\r\n  }>(),\r\n  {\r\n    parentProp: \"\",\r\n    fields: () => [],\r\n  }\r\n);\r\nconst emits = defineEmits([\"update:modelValue\", \"change\"]);\r\n\r\nconst refsList = ref<HTMLElement[]>([]);\r\nconst initRefsList = (el, ind) => {\r\n  if (el) refsList.value[ind] = el;\r\n};\r\nconst listItem = getAddDelItem(props.fields);\r\nconst newList = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(val: any) {\r\n    emits(\"update:modelValue\", val);\r\n  },\r\n});\r\nconst newFields = ref<FormFieldAttrs[]>([]);\r\nconst formData = reactive<CommonObj>({});\r\nwatch(\r\n  () => props.fields,\r\n  newVal => {\r\n    const { modelValue } = props;\r\n    const result = handleFields(newVal, emits, modelValue);\r\n    const { data, fields } = result;\r\n    merge(formData, data);\r\n    newFields.value = fields;\r\n  },\r\n  {\r\n    immediate: true,\r\n  }\r\n);\r\nwatch(\r\n  () => props.modelValue,\r\n  newVal => {\r\n    // 用 isDel 标记是为了处理点击删除时，删除不掉的bug\r\n    const isDel = newVal.length < Object.keys(formData).length;\r\n    if (isDel) {\r\n      Object.keys(formData).forEach(key => delete formData[key]); //是为了清空对象属性，然后重新赋值\r\n      merge(formData, newVal);\r\n    } else {\r\n      merge(formData, newVal);\r\n    }\r\n  },\r\n  { immediate: false, deep: true }\r\n);\r\nwatch(\r\n  formData,\r\n  newVal => {\r\n    merge(props.modelValue, newVal);\r\n  },\r\n  { immediate: false, deep: true }\r\n);\r\n\r\n//处理新增/删除按钮的逻辑\r\nfunction handleAddDel(type: AddDelBtnType, ind: number) {\r\n  if (type === \"add\") {\r\n    const { formRef } = props;\r\n    function handle() {\r\n      newList.value.push(JSON.parse(JSON.stringify(listItem)));\r\n      // //让第一个元素聚焦\r\n      // setTimeout(() => {\r\n      //   console.log(refsList.value.at(-1), \"让第一个元素聚焦暂未处理-------------\");\r\n      // }, 500);\r\n    }\r\n    if (formRef) {\r\n      const propsArr = Object.keys(newList.value[0]).map((key: string) => `${props.parentProp}[${ind}].${key}`);\r\n      formRef.validateField(propsArr, (isValid, inValidFields: CommonObj) => {\r\n        if (isValid) {\r\n          handle();\r\n        } else {\r\n          const target = Object.values(inValidFields)[0][0];\r\n          showMessage(target.message, \"error\");\r\n        }\r\n      });\r\n    } else {\r\n      handle();\r\n    }\r\n  } else if (type === \"del\") {\r\n    newList.value.splice(ind, 1);\r\n  } else {\r\n    throw new Error(`暂不支持${type}类型`);\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n"],"names":["props","__props","emits","__emit","refsList","ref","listItem","getAddDelItem","fields","newList","computed","get","modelValue","set","val","newFields","formData","reactive","watch","newVal","result","handleFields","data","value","immediate","length","Object","keys","forEach","key","deep","merge","el","ind","type","handle","push","JSON","parse","stringify","formRef","propsArr","map","parentProp","validateField","isValid","inValidFields","target","values","showMessage","message","Error","splice"],"mappings":"yhBA+BA,MAAMA,EAAQC,EAaRC,EAAQC,EAERC,EAAWC,EAAmB,IAI9BC,EAAWC,EAAcP,EAAMQ,QAC/BC,EAAUC,EAAS,CACvBC,IAAM,IACGX,EAAMY,WAEf,GAAAC,CAAIC,GACFZ,EAAM,oBAAqBY,EAC7B,IAEIC,EAAYV,EAAsB,IAClCW,EAAWC,EAAoB,CAAA,UACrCC,GACE,IAAMlB,EAAMQ,SACFW,IACF,MAAAP,WAAEA,GAAeZ,EACjBoB,EAASC,EAAaF,EAAQjB,EAAOU,IACrCU,KAAEA,EAAMd,OAAAA,GAAWY,UACnBJ,EAAUM,GAChBP,EAAUQ,MAAQf,CAAA,GAEpB,CACEgB,WAAW,IAGfN,GACE,IAAMlB,EAAMY,aACFO,IAEMA,EAAOM,OAASC,OAAOC,KAAKX,GAAUS,QAE3CC,OAAAC,KAAKX,GAAUY,mBAAsBZ,EAASa,aAC/Cb,EAAUG,YAEVH,EAAUG,EAClB,GAEF,CAAEK,WAAW,EAAOM,MAAM,IAE5BZ,EACEF,GACUG,IACFY,EAAAA,MAAA/B,EAAMY,WAAYO,EAAM,GAEhC,CAAEK,WAAW,EAAOM,MAAM,+cA9CP,EAACE,EAAIC,KACpBD,IAAa5B,EAAAmB,MAAMU,GAAOD,EAAA,uHAiDvB,SAAaE,EAAqBD,GACzC,GAAa,QAATC,EAAgB,CAElB,IAASC,EAAT,WACU1B,EAAAc,MAAMa,KAAKC,KAAKC,MAAMD,KAAKE,UAAUjC,IAAU,EAFnD,MAAAkC,QAAEA,GAAYxC,EAQpB,GAAIwC,EAAS,CACX,MAAMC,EAAWf,OAAOC,KAAKlB,EAAQc,MAAM,IAAImB,KAAKb,GAAgB,GAAG7B,EAAM2C,cAAcV,MAAQJ,MACnGW,EAAQI,cAAcH,GAAU,CAACI,EAASC,KACxC,GAAID,UAEG,CACL,MAAME,EAASrB,OAAOsB,OAAOF,GAAe,GAAG,GACnCG,EAAAF,EAAOG,QAAS,QAC9B,IACD,SAGH,KAAA,IACkB,QAAThB,EAGT,MAAM,IAAIiB,MAAM,OAAOjB,OAFfzB,EAAAc,MAAM6B,OAAOnB,EAAK,EAG5B,CACF"}