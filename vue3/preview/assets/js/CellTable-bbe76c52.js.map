{"version":3,"file":"CellTable-bbe76c52.js","sources":["../../../src/components/table/CellTable.vue"],"sourcesContent":["<!-- 单元格表格 -->\r\n<template>\r\n  <el-row class=\"cell-table f-fs-s-w\">\r\n    <el-col class=\"cell\" v-bind=\"newColAttrs(field)\" v-for=\"(field, ind) in newFields\" :key=\"ind\">\r\n      <div class=\"custom-all-box\" v-if=\"field.type === 'custom-all'\">\r\n        <slot :name=\"field.prop\" :field=\"field\"></slot>\r\n      </div>\r\n      <BaseKeyVal :colon=\"false\" :labelWidth=\"getMaxLength(props.fields as FormField[]) + 'em'\" v-bind=\"field\" v-else>\r\n        <slot :name=\"field.prop\" :field=\"field\" :data=\"data\" v-if=\"field.type === 'custom'\"></slot>\r\n      </BaseKeyVal>\r\n    </el-col>\r\n    <div class=\"cell f-1\" v-if=\"spaceCell\"></div>\r\n  </el-row>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, watch, computed } from \"vue\";\r\nimport { getMaxLength, getScreenSizeType } from \"@/components/_utils\";\r\nimport { useEvent } from \"@/hooks\";\r\nimport { CommonObj, OptionItem } from \"@/vite-env\";\r\nimport { FormField, FormItemType, ValidType } from \"@/components/BaseFormItem\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"CellTable\" }); \n\r\nexport interface ColSpanAttrs {\r\n  xs?: number; // <768\r\n  sm?: number; // >=768\r\n  md?: number; // >=992\r\n  lg?: number; // >=1200\r\n  xl?: number; // >=1920\r\n  //其他\r\n  span?: number;\r\n}\r\nexport type CellTableFieldType = \"text\" | \"custom\" | \"custom-all\" | \"none\" | FormItemType;\r\nexport interface CellTableFieldItem {\r\n  prop: string;\r\n  label: string;\r\n  type?: CellTableFieldType;\r\n  required?: boolean;\r\n  attrs?: CommonObj;\r\n  colAttrs?: ColSpanAttrs;\r\n  vertical?: boolean;\r\n  options?: OptionItem[];\r\n  direction?: \"vertical\" | \"horizontal\";\r\n  extra?: {\r\n    popover?: string | CommonObj;\r\n    valid?: ValidType;\r\n  };\r\n}\r\nconst defaultColSpanAttrs: CommonObj = {\r\n  // xs: 24, // <768\r\n  // sm: 12, // >=768\r\n  // md: 8, // >=992\r\n  // lg: 6, // >=1200\r\n  // xl: 4, // >=1920\r\n  span: 6,\r\n};\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    data?: CommonObj;\r\n    fields?: CellTableFieldItem[];\r\n    colSpanAttrs?: ColSpanAttrs;\r\n  }>(),\r\n  {\r\n    data: () => ({}),\r\n    fields: () => [],\r\n  }\r\n);\r\nconst spaceCell = ref(true);\r\nconst newColAttrs = computed(() => {\r\n  return (field: CellTableFieldItem) => {\r\n    return field.colAttrs || Object.assign({}, defaultColSpanAttrs, props.colSpanAttrs);\r\n  };\r\n});\r\nconst newFields = computed(() => {\r\n  const { fields, data } = props;\r\n  return fields.map((item: CellTableFieldItem, ind: number) => {\r\n    const { prop, value } = item;\r\n    const val = data[prop];\r\n    if (val !== undefined) {\r\n      item.value = val;\r\n    }\r\n    return item;\r\n  });\r\n});\r\nuseEvent(\r\n  \"resize\",\r\n  () => {\r\n    let total = 0;\r\n    const size = getScreenSizeType();\r\n    props.fields.map(({ colAttrs }, ind) => {\r\n      const cAttrs = Object.assign({}, defaultColSpanAttrs, props.colSpanAttrs, colAttrs);\r\n      total += cAttrs?.[size] || cAttrs.span || 0;\r\n    });\r\n    spaceCell.value = total % 24 !== 0;\r\n  },\r\n  true\r\n);\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.cell-table {\r\n  width: 100%;\r\n  border-right: $border-main;\r\n  border-bottom: $border-main;\r\n  .cell {\r\n    border-top: $border-main;\r\n    border-left: $border-main;\r\n  }\r\n  .base-key-val {\r\n  }\r\n}\r\n.custom-all-box {\r\n  padding: $gap-qtr $gap-half;\r\n}\r\n:deep(.base-key-val) {\r\n  height: 100%;\r\n  .key {\r\n    padding: $gap-qtr;\r\n    border-right: $border-main;\r\n    background: $color-bg-lighter;\r\n  }\r\n  .val {\r\n    padding: $gap-qtr;\r\n  }\r\n}\r\n</style>\r\n"],"names":["defaultColSpanAttrs","span","props","__props","spaceCell","ref","newColAttrs","computed","field","colAttrs","Object","assign","colSpanAttrs","newFields","fields","data","map","item","ind","prop","value","val","useEvent","total","size","getScreenSizeType","cAttrs"],"mappings":"mnDAgDA,MAAMA,EAAiC,CAMrCC,KAAM,GAEFC,EAAQC,EAWRC,EAAYC,GAAI,GAChBC,EAAcC,GAAS,IACnBC,GACCA,EAAMC,UAAYC,OAAOC,OAAO,CAAA,EAAIX,EAAqBE,EAAMU,gBAGpEC,EAAYN,GAAS,KACnB,MAAAO,OAAEA,EAAQC,KAAAA,GAASb,EACzB,OAAOY,EAAOE,KAAI,CAACC,EAA0BC,KACrC,MAAAC,KAAEA,EAAMC,MAAAA,GAAUH,EAClBI,EAAMN,EAAKI,GAIV,YAHK,IAARE,IACFJ,EAAKG,MAAQC,GAERJ,CAAA,GACR,WAEHK,EACE,UACA,KACE,IAAIC,EAAQ,EACZ,MAAMC,EAAOC,IACbvB,EAAMY,OAAOE,KAAI,EAAGP,YAAYS,KACxB,MAAAQ,EAAShB,OAAOC,OAAO,CAAA,EAAIX,EAAqBE,EAAMU,aAAcH,GACjEc,IAAA,MAAAG,OAAA,EAAAA,EAASF,KAASE,EAAOzB,MAAQ,CAAA,IAElCG,EAAAgB,MAAQG,EAAQ,IAAO,CAAA,IAEnC"}