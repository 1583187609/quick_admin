{"version":3,"file":"QueryTable-a24c1e36.js","sources":["../../../src/hooks/cache-scroll.ts","../../../src/components/BaseCrud/_components/QueryTable.vue"],"sourcesContent":["import { onActivated } from \"vue\";\r\nexport default () => {\r\n  //处理滚动事件\r\n  let scrollEle: any = null;\r\n  let top = 0; //记录滚动条滚动的高度\r\n  /**\r\n   * 监听滚动事件\r\n   * @param e Event 对象\r\n   * @param subSeltor 子级元素的选择器\r\n   * @tips 绑定滚动事件时记得加上 capture 修饰符，启用捕获模式\r\n   */\r\n  function handleScroll(e: any, subSeltor?: string) {\r\n    let target = e.target;\r\n    if (subSeltor) {\r\n      target = target.querySelector(subSeltor);\r\n    }\r\n    if (!target) return;\r\n    const { scrollTop } = target;\r\n    !scrollEle && (scrollEle = target);\r\n    top = scrollTop;\r\n  }\r\n  //每次进入时，滚动条滚动到之前缓存的位置\r\n  onActivated(() => {\r\n    scrollEle?.scrollTo(0, top);\r\n  });\r\n  return {\r\n    handleScroll,\r\n  };\r\n};\r\n","<!-- header-row-class-name=\"header-bg\" -->\r\n<!-- :header-row-style=\"{ background: 'green !important' }\" -->\r\n<template>\r\n  <el-table\r\n    class=\"query-table\"\r\n    :data=\"rows\"\r\n    v-loading=\"loading\"\r\n    @selection-change=\"handleSelectionChange\"\r\n    @scroll.capture=\"handleScroll\"\r\n    v-bind=\"newAttrs\"\r\n    ref=\"tableRef\"\r\n    v-if=\"newCols.length\"\r\n  >\r\n    <Column\r\n      :col=\"col\"\r\n      :selection=\"selection\"\r\n      :refreshList=\"refreshList\"\r\n      :groupBtnsAttrs=\"groupBtnsAttrs\"\r\n      :getGroupBtnsOfRow=\"getGroupBtnsOfRow\"\r\n      @groupBtn=\"onGroupBtn\"\r\n      :disabled=\"disabled\"\r\n      v-for=\"(col, cInd) in newCols\"\r\n      :key=\"cInd\"\r\n    >\r\n      <template #custom=\"{ row, col: c, ind }\">\r\n        <slot name=\"custom\" v-bind=\"{ row, col: c, $index: ind }\"></slot>\r\n      </template>\r\n    </Column>\r\n    <template #empty v-if=\"!loading\">\r\n      <BaseEmpty />\r\n    </template>\r\n  </el-table>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, computed, watchEffect, useAttrs, reactive } from \"vue\";\r\nimport { GroupBtnsAttrs } from \"./GroupBtns.vue\";\r\nimport { BaseBtnType, BtnItem, getBtnObj } from \"@/components/BaseBtn\";\r\nimport { typeOf, handleTableSummary, defaultGroupBtnsMaxNum, getChinaCharLength } from \"@/components/_utils\";\r\nimport { useCacheScroll } from \"@/hooks\";\r\nimport { GroupBtnsType } from \"@/components/BaseCrud/_components/GroupBtns.vue\";\r\nimport { CommonObj, FinallyNext, StrNum } from \"@/vite-env\";\r\nimport Column, { RefreshListFn, RowBtnInfo } from \"@/components/BaseCrud/_components/Column.vue\";\r\nimport { needPushSpecialCol } from \"@/components/BaseCrud\";\r\nimport { getTempGroupBtnsOfRow } from \"@/components/BaseCrud\";\r\nimport { TableColAttrs, TableField, defaultTableAttrs, getColLevel, getSpecialColMap } from \"@/components/table\";\r\nimport config from \"@/config\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"QueryTable\" }); \n\r\n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    tableAttrs?: CommonObj; //ElementPlus 表格的属性\r\n    groupBtnsAttrs?: GroupBtnsAttrs;\r\n    loading?: boolean;\r\n    cols: TableField[]; //表头\r\n    rows: CommonObj[]; //表格行数据\r\n    groupBtns?: GroupBtnsType;\r\n    sort?: boolean; //是否显示排序列\r\n    index?: boolean; //是否展示序号列\r\n    disabled?: boolean;\r\n    selection?: boolean; //是否显示选择框\r\n    showSummary?: boolean; //是否显示汇总行\r\n    currPage: number; //当前分页页码\r\n    pageSize: number; //每页多少条\r\n    refreshList?: RefreshListFn;\r\n    summaryMethod?: (arg: any) => string[]; //计算汇总的方法\r\n    filterBtnsByAuth: (btns: BtnItem[]) => BtnItem[];\r\n  }>(),\r\n  Object.assign(\r\n    {\r\n      cols: () => [],\r\n      rows: () => [],\r\n      summaryMethod: handleTableSummary,\r\n    },\r\n    config?.BaseCrud?._components?.QueryTable\r\n  )\r\n);\r\nconst emits = defineEmits([\"update:cols\", \"selectionChange\", \"groupBtn\", \"change\"]);\r\nconst $attrs = useAttrs();\r\nconst { handleScroll } = useCacheScroll();\r\nlet operateWidth = 0; //操作栏的宽度\r\nlet rowNum = props.showSummary ? 2 : 1;\r\nconst tableRef = ref<any>(null);\r\nconst seledRows = ref<CommonObj[]>([]);\r\n/**\r\n * 弹窗标题高度 +  分页组件高度 + 分页组件margin-top + el-dialog__body上下padding + el-table头部高度\r\n * 55+32+8+16*2+40+3 = 55+40+32+40+3 = 95+75 = 170\r\n * 216px 170px\r\n */\r\nconst newCols = reactive<TableColAttrs[]>([]);\r\n//调用stopWatch（），确保下面的方法只执行一次\r\nconst stopWatch = watchEffect(() => {\r\n  const { cols, currPage, pageSize } = props;\r\n  const specialColMap = getSpecialColMap(currPage, pageSize);\r\n  const { index, sort, selection, operate } = specialColMap;\r\n  needPushSpecialCol(\"index\", props) && cols.unshift(index);\r\n  needPushSpecialCol(\"sort\", props) && cols.unshift(sort);\r\n  needPushSpecialCol(\"selection\", props) && cols.unshift(selection);\r\n  needPushSpecialCol(\"operate\", props) && cols.push(operate);\r\n  const levels = cols.map(col => {\r\n    if (typeOf(col) !== \"Object\") return 1;\r\n    const { col: newCol, level } = getColLevel(col as TableColAttrs, 1, specialColMap, $attrs.size === \"small\");\r\n    newCols.push(newCol);\r\n    return level;\r\n  });\r\n  const maxLev = Math.max(...levels);\r\n  rowNum += maxLev - 1;\r\n  emits(\"update:cols\", newCols);\r\n});\r\nstopWatch();\r\nconst newAttrs = computed(() => {\r\n  const { showSummary, summaryMethod } = props;\r\n  return Object.assign(\r\n    {\r\n      maxHeight: `calc(100% + ${rowNum * 40}px)`,\r\n      cellClassName(res: CommonObj) {\r\n        if (res.column.property === \"$sort\") return \"sort-cell\";\r\n      },\r\n    },\r\n    defaultTableAttrs,\r\n    { showSummary, summaryMethod }\r\n  );\r\n});\r\n// 处理列设置的逻辑\r\n// watch(\r\n//   () => props.cols,\r\n//   (newVal: any) => {\r\n//     newCols.value = newVal;\r\n//   },\r\n//   { immediate: false }\r\n// );\r\nfunction onGroupBtn(btnObj: BtnItem, { row, col, $index }: RowBtnInfo, next: FinallyNext) {\r\n  emits(\"groupBtn\", btnObj, { $index, ...row }, next);\r\n}\r\n//当选择项发生变化时会触发该事件\r\nfunction handleSelectionChange(rows: CommonObj[]) {\r\n  seledRows.value = rows;\r\n  const keys = rows.map(it => it[newAttrs.value.rowKey]);\r\n  emits(\"selectionChange\", rows, keys);\r\n}\r\n// 获取每一行的分组按钮\r\nfunction getGroupBtnsOfRow(row: CommonObj, ind: number) {\r\n  const { groupBtns = [], rows, filterBtnsByAuth } = props;\r\n  const tempBtns = getTempGroupBtnsOfRow(row, ind, groupBtns);\r\n  const filterBtns = filterBtnsByAuth(tempBtns);\r\n  const width = getOperateColWidth(filterBtns);\r\n  if (ind < rows.length - 1) {\r\n    if (operateWidth < width) {\r\n      operateWidth = width;\r\n      newCols.slice(-1)[0].minWidth = operateWidth;\r\n    }\r\n  } else {\r\n    //如果操作栏没有按钮，则按照最小宽度展示操作栏，例如新增按钮\r\n    if (operateWidth < 30) {\r\n      operateWidth = getOperateColWidth();\r\n      newCols.slice(-1)[0].minWidth = operateWidth;\r\n    }\r\n  }\r\n  return filterBtns;\r\n}\r\n//获取操作栏的宽度\r\nfunction getOperateColWidth(btns?: BtnItem[]): number {\r\n  //按钮size为default时\r\n  // const fontSize = 12;\r\n  // const btnPadding = 11;\r\n  // const btnMargin = 12;\r\n  // const cellPadding = 12;\r\n  //按钮size为small时\r\n  const fontSize = 12;\r\n  const btnPadding = 3;\r\n  const btnMargin = 12;\r\n  const cellPadding = 12;\r\n  //最小宽度\r\n  if (!btns) return 3 * fontSize + 1 * btnPadding * 2 + cellPadding * 2;\r\n  let em = 0; //按钮文字字符数量\r\n  let width = 0;\r\n  const { groupBtnsAttrs = {} } = props;\r\n  const { vertical, maxNum = defaultGroupBtnsMaxNum } = groupBtnsAttrs as GroupBtnsAttrs;\r\n  if (btns.length > maxNum) {\r\n    btns = btns.slice(0, maxNum - 1).concat([{ text: \"更多\" } as BtnItem]);\r\n  }\r\n  if (vertical) {\r\n    btns.forEach((item: BtnItem) => {\r\n      // if (!item) return; //已经过滤过了，所以注释掉\r\n      em = getChinaCharLength(item.text) + 1; //文字加图标 (全角符算1个，半角符算0.5个字符)\r\n      const currWidth = em * fontSize + btnPadding * 2 + cellPadding * 2; //字符的宽度 + 按钮左右padding值 + 各个按钮之间的margin值 + 单元格的左右padding值\r\n      if (currWidth > width) {\r\n        width = currWidth;\r\n      }\r\n    });\r\n  } else {\r\n    btns.forEach((item: BtnItem) => {\r\n      // if (!item) return; //已经过滤过了，所以注释掉\r\n      em += getChinaCharLength(item.text) + 1; //文字加图标 (全角符算1个，半角符算0.5个字符)\r\n    });\r\n    width = em * fontSize + btns.length * btnPadding * 2 + (btns.length - 1) * btnMargin + cellPadding * 2; //字符的宽度 + 按钮左右padding值 + 各个按钮之间的margin值 + 单元格的左右padding值\r\n  }\r\n  return width;\r\n}\r\n//暴露的方法\r\n//参考：https://juejin.cn/post/6844903864039145485\r\n//参考：https://blog.csdn.net/qq_26018335/article/details/127348107\r\ndefineExpose({\r\n  tableRef,\r\n  //全不选\r\n  clearSelection() {\r\n    return tableRef?.value?.clearSelection();\r\n  },\r\n  //全选\r\n  allSelection() {\r\n    return tableRef?.value?.toggleAllSelection();\r\n  },\r\n  //反选\r\n  invertSelection() {\r\n    // console.log(\r\n    //   tableRef.value.getSelectionRows(),\r\n    //   \"点击反选按钮-暴露出来的-----------------\"\r\n    // );\r\n    seledRows?.value?.forEach((row, ind) => {\r\n      tableRef?.value?.toggleRowSelection(row, false);\r\n    });\r\n  },\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.query-table {\r\n  border-radius: $radius-heavy;\r\n  @include shadow-main();\r\n}\r\n.sort-icon {\r\n  cursor: move;\r\n  font-weight: 500;\r\n}\r\n</style>\r\n"],"names":["props","__props","emits","__emit","$attrs","useAttrs","handleScroll","scrollEle","top","onActivated","scrollTo","e","subSeltor","target","querySelector","scrollTop","useCacheScroll","operateWidth","rowNum","showSummary","tableRef","ref","seledRows","newCols","reactive","watchEffect","cols","currPage","pageSize","specialColMap","getSpecialColMap","index","sort","selection","operate","needPushSpecialCol","unshift","push","levels","map","col","typeOf","newCol","level","getColLevel","size","maxLev","Math","max","newAttrs","computed","summaryMethod","Object","assign","maxHeight","cellClassName","res","column","property","defaultTableAttrs","onGroupBtn","btnObj","row","$index","next","handleSelectionChange","rows","value","keys","it","rowKey","getGroupBtnsOfRow","ind","groupBtns","filterBtnsByAuth","filterBtns","getTempGroupBtnsOfRow","width","getOperateColWidth","length","slice","minWidth","btns","em","groupBtnsAttrs","vertical","maxNum","defaultGroupBtnsMaxNum","concat","text","forEach","item","getChinaCharLength","currWidth","btnPadding","cellPadding","__expose","clearSelection","_a","allSelection","toggleAllSelection","invertSelection","toggleRowSelection"],"mappings":"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"}