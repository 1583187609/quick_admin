{"version":3,"file":"Index.vue_vue_type_script_setup_true_lang-212a9335.js","sources":["../../../src/components/BaseCrud/_components/ExtraBtns/Index.vue"],"sourcesContent":["<template>\r\n  <div class=\"extra-btns f-fs-c-w\">\r\n    <BatchBtns\r\n      class=\"mr-12\"\r\n      :allSelection=\"allSelection\"\r\n      :clearSelection=\"clearSelection\"\r\n      :invertSelection=\"invertSelection\"\r\n      :size=\"size\"\r\n      :disabled=\"!total\"\r\n      v-if=\"batchBtn\"\r\n    />\r\n    <BaseBtn\r\n      @click=\"handleClick(btn)\"\r\n      :class=\"size === 'small' ? 'mb-q' : 'mb-h'\"\r\n      :name=\"btn\"\r\n      :size=\"size\"\r\n      v-for=\"(btn, ind) in newBtns\"\r\n      :key=\"ind\"\r\n    />\r\n    <el-tooltip :content=\"btn.title\" :show-after=\"500\" v-for=\"(btn, ind) in newToolBtns\" :key=\"ind\">\r\n      <el-button\r\n        :style=\"{ marginLeft: ind === 0 ? 'auto' : undefined }\"\r\n        :size=\"size\"\r\n        @click=\"onToolBtn(btn.name)\"\r\n        v-bind=\"btn.attrs\"\r\n      />\r\n    </el-tooltip>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { computed, h, inject, ref } from \"vue\";\r\nimport { Setting, Printer, CircleCheck } from \"@element-plus/icons-vue\";\r\nimport { sortObjArrByKey } from \"@/components/_utils\";\r\nimport { BaseBtnType, BtnItem, BtnName, getBtnObj } from \"@/components/BaseBtn\";\r\nimport { TableField } from \"@/components/table\";\r\nimport SetTable from \"../SetTable.vue\";\r\nimport SetPrint from \"../SetPrint.vue\";\r\nimport BatchBtns from \"./_components/BatchBtns.vue\";\r\nimport config from \"@/config\";\r\nimport { CommonObj, FinallyNext, CommonSize } from \"@/vite-env\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"ExtraBtns\" }); \n\r\nexport type ToolBtnName = \"colSet\" | \"print\";\r\nconst toolsMap: CommonObj = {\r\n  print: {\r\n    name: \"print\",\r\n    title: \"打印\",\r\n    attrs: {\r\n      type: \"primary\",\r\n      icon: Printer,\r\n      plain: true,\r\n      circle: true,\r\n    },\r\n  },\r\n  set: {\r\n    name: \"colSet\",\r\n    title: \"设置\",\r\n    attrs: {\r\n      type: \"primary\",\r\n      icon: Setting,\r\n      plain: true,\r\n      circle: true,\r\n    },\r\n  },\r\n};\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    columns?: TableField[];\r\n    allColumns?: TableField[];\r\n    btns?: BaseBtnType[];\r\n    toolBtns?: string[];\r\n    // checked?: boolean; //是否有选中的行\r\n    total?: number; //记录总条数\r\n    isEmpty?: boolean;\r\n    batchBtn?: boolean;\r\n    size?: CommonSize;\r\n    allSelection?: () => void;\r\n    clearSelection?: () => void;\r\n    invertSelection?: () => void;\r\n  }>(),\r\n  Object.assign(\r\n    {\r\n      columns: () => [],\r\n      allColumns: () => [],\r\n      btns: () => [],\r\n      toolBtns: () => [\"set\"], //\"print\",\r\n      // checked: false,\r\n    },\r\n    config?.BaseCrud?._components?.ExtraBtns\r\n  )\r\n);\r\nconst emits = defineEmits([\"click\", \"toolBtn\", \"update:cols\"]);\r\nconst openPopup: any = inject(\"openPopup\");\r\nconst newBtns = computed(() => {\r\n  const _newBtns = props.btns.map(btn => getBtnObj(btn));\r\n  sortObjArrByKey(_newBtns);\r\n  return _newBtns;\r\n});\r\nconst newToolBtns = computed(() => {\r\n  return props.toolBtns.map(btn => toolsMap[btn]);\r\n});\r\nfunction handleClick(btnObj: BtnItem) {\r\n  emits(\"click\", btnObj);\r\n}\r\nfunction onToolBtn(name: ToolBtnName) {\r\n  if (name === \"colSet\") {\r\n    openColSetDrawer();\r\n  } else if (name === \"print\") {\r\n    openPopup(\"打印设置\", SetPrint, \"dialog\");\r\n  }\r\n}\r\nfunction handleShowChange(name: string, isShow: boolean, allInd: number) {\r\n  const { columns, allColumns } = props;\r\n  if (isShow) {\r\n    let findInd = -1;\r\n    columns.findIndex((item, index) => {\r\n      const itemAtAllInd = allColumns.findIndex(it => it.prop === item.prop);\r\n      if (itemAtAllInd > allInd) {\r\n        findInd = index;\r\n        return true;\r\n      } else if (itemAtAllInd < allInd) {\r\n        if (index === columns.length - 1) {\r\n          findInd = columns.length;\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n    columns.splice(findInd, 0, allColumns[allInd]);\r\n  } else {\r\n    const nowInd = columns.findIndex(it => it.prop === name);\r\n    columns.splice(nowInd, 1);\r\n  }\r\n  emits(\"update:cols\", columns.slice()); //slice()只会深拷贝一层\r\n}\r\nfunction handleExportChange(name: string, isShow: boolean, allInd: number) {\r\n  console.log(name, isShow, allInd, \"ddddd--------------------\");\r\n}\r\nfunction handleOrderChange(name: string, isShow: boolean, allInd: number) {\r\n  console.log(name, isShow, allInd, \"ddddd--------------------\");\r\n}\r\n//打开列设置弹窗\r\nfunction openColSetDrawer() {\r\n  const { columns, allColumns } = props;\r\n  const rows = allColumns\r\n    .filter(it => {\r\n      return !it.prop?.startsWith(\"$\");\r\n    })\r\n    .map(item => {\r\n      const { prop, label, sortable = false } = item;\r\n      return {\r\n        colName: label,\r\n        colProp: prop,\r\n        isShow: !!columns.find(it => it.prop === prop),\r\n        isExport: true,\r\n        isOrder: sortable,\r\n      };\r\n    });\r\n  openPopup(\r\n    { title: \"列设置\", closeOnClickModal: true },\r\n    h(SetTable, {\r\n      rows,\r\n      size: props.size,\r\n      handleShowChange,\r\n      handleExportChange,\r\n      handleOrderChange,\r\n      handleResetColSet,\r\n    }),\r\n    \"drawer\"\r\n  );\r\n}\r\n//点击重置按钮\r\nfunction handleResetColSet() {\r\n  emits(\"update:cols\", props.allColumns.slice()); //slice()只会深拷贝一层\r\n  setTimeout(() => {\r\n    openColSetDrawer();\r\n  });\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n"],"names":["toolsMap","print","name","title","attrs","type","icon","Printer","plain","circle","set","Setting","props","__props","emits","__emit","openPopup","inject","newBtns","computed","_newBtns","btns","map","btn","getBtnObj","sortObjArrByKey","newToolBtns","toolBtns","handleShowChange","isShow","allInd","columns","allColumns","findInd","findIndex","item","index","itemAtAllInd","it","prop","length","splice","nowInd","slice","handleExportChange","handleOrderChange","openColSetDrawer","rows","filter","_a","startsWith","label","sortable","colName","colProp","find","isExport","isOrder","closeOnClickModal","h","SetTable","size","handleResetColSet","setTimeout","SetPrint"],"mappings":"mhCA4CA,MAAMA,EAAsB,CAC1BC,MAAO,CACLC,KAAM,QACNC,MAAO,KACPC,MAAO,CACLC,KAAM,UACNC,KAAMC,EACNC,OAAO,EACPC,QAAQ,IAGZC,IAAK,CACHR,KAAM,SACNC,MAAO,KACPC,MAAO,CACLC,KAAM,UACNC,KAAMK,EACNH,OAAO,EACPC,QAAQ,KAIRG,EAAQC,EA0BRC,EAAQC,EACRC,EAAiBC,EAAO,aACxBC,EAAUC,GAAS,KACjB,MAAAC,EAAWR,EAAMS,KAAKC,KAAWC,GAAAC,EAAUD,KAE1C,OADPE,EAAgBL,GACTA,CAAA,IAEHM,EAAcP,GAAS,IACpBP,EAAMe,SAASL,KAAWC,GAAAvB,EAASuB,OAYnC,SAAAK,EAAiB1B,EAAc2B,EAAiBC,GACjD,MAAAC,QAAEA,EAASC,WAAAA,GAAepB,EAChC,GAAIiB,EAAQ,CACV,IAAII,GAAU,EACNF,EAAAG,WAAU,CAACC,EAAMC,KACjB,MAAAC,EAAeL,EAAWE,cAAgBI,EAAGC,OAASJ,EAAKI,OACjE,OAAIF,EAAeP,GACPG,EAAAG,GACH,GACEC,EAAeP,EACpBM,IAAUL,EAAQS,OAAS,IAC7BP,EAAUF,EAAQS,QACX,QAJF,CAQT,IAEFT,EAAQU,OAAOR,EAAS,EAAGD,EAAWF,GAAO,KACxC,CACL,MAAMY,EAASX,EAAQG,WAAgBI,GAAAA,EAAGC,OAASrC,IAC3C6B,EAAAU,OAAOC,EAAQ,EACzB,CACM5B,EAAA,cAAeiB,EAAQY,QAC/B,CACS,SAAAC,EAAmB1C,EAAc2B,EAAiBC,GAE3D,CACS,SAAAe,EAAkB3C,EAAc2B,EAAiBC,GAE1D,CAEA,SAASgB,IACD,MAAAf,QAAEA,EAASC,WAAAA,GAAepB,EAC1BmC,EAAOf,EACVgB,QAAaV,UACZ,QAAQ,OAAAW,EAAAX,EAAGC,WAAH,EAAAU,EAASC,WAAW,KAAA,IAE7B5B,KAAYa,IACX,MAAMI,KAAEA,EAAAY,MAAMA,EAAOC,SAAAA,GAAW,GAAUjB,EACnC,MAAA,CACLkB,QAASF,EACTG,QAASf,EACTV,SAAUE,EAAQwB,MAAWjB,GAAAA,EAAGC,OAASA,IACzCiB,UAAU,EACVC,QAASL,EAAA,IAGfpC,EACE,CAAEb,MAAO,MAAOuD,mBAAmB,GACnCC,EAAEC,EAAU,CACVb,OACAc,KAAMjD,EAAMiD,KACZjC,mBACAgB,qBACAC,oBACAiB,sBAEF,SAEJ,CAEA,SAASA,IACPhD,EAAM,cAAeF,EAAMoB,WAAWW,SACtCoB,YAAW,WAGb,mZA5EEjD,EAAM,4SAER,IAAmBZ,EACJ,YADIA,cAGG,UAATA,GACCc,EAAA,OAAQgD,EAAU"}