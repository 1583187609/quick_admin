{"version":3,"file":"function-bind-afbcd6f2.js","sources":["../../../node_modules/function-bind/implementation.js","../../../node_modules/function-bind/index.js"],"sourcesContent":["'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar toStr = Object.prototype.toString;\nvar max = Math.max;\nvar funcType = '[object Function]';\n\nvar concatty = function concatty(a, b) {\n    var arr = [];\n\n    for (var i = 0; i < a.length; i += 1) {\n        arr[i] = a[i];\n    }\n    for (var j = 0; j < b.length; j += 1) {\n        arr[j + a.length] = b[j];\n    }\n\n    return arr;\n};\n\nvar slicy = function slicy(arrLike, offset) {\n    var arr = [];\n    for (var i = offset || 0, j = 0; i < arrLike.length; i += 1, j += 1) {\n        arr[j] = arrLike[i];\n    }\n    return arr;\n};\n\nvar joiny = function (arr, joiner) {\n    var str = '';\n    for (var i = 0; i < arr.length; i += 1) {\n        str += arr[i];\n        if (i + 1 < arr.length) {\n            str += joiner;\n        }\n    }\n    return str;\n};\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.apply(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slicy(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                concatty(args, arguments)\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        }\n        return target.apply(\n            that,\n            concatty(args, arguments)\n        );\n\n    };\n\n    var boundLength = max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs[i] = '$' + i;\n    }\n\n    bound = Function('binder', 'return function (' + joiny(boundArgs, ',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n"],"names":["toStr","Object","prototype","toString","max","Math","concatty","a","b","arr","i","length","j","implementation","that","target","this","apply","TypeError","bound","args","arrLike","offset","slicy","arguments","boundLength","boundArgs","Function","joiner","str","joiny","result","Empty","functionBind","bind"],"mappings":"AAIA,IACIA,EAAQC,OAAOC,UAAUC,SACzBC,EAAMC,KAAKD,IAGXE,EAAW,SAAkBC,EAAGC,GAGhC,IAFA,IAAIC,EAAM,GAEDC,EAAI,EAAGA,EAAIH,EAAEI,OAAQD,GAAK,EAC3BD,EAAAC,GAAKH,EAAEG,GAEf,IAAA,IAASE,EAAI,EAAGA,EAAIJ,EAAEG,OAAQC,GAAK,EAC/BH,EAAIG,EAAIL,EAAEI,QAAUH,EAAEI,GAGnB,OAAAH,CACX,EClBII,EDuCa,SAAcC,GAC3B,IAAIC,EAASC,KACb,GAAsB,mBAAXD,GApCA,sBAoCyBf,EAAMiB,MAAMF,GACtC,MAAA,IAAIG,UAxCE,kDAwCwBH,GAyBxC,IAvBI,IAEAI,EAFAC,EAxBI,SAAeC,EAASC,GAEvB,IADT,IAAIb,EAAM,GACDC,EAAIY,GAAU,EAAGV,EAAI,EAAGF,EAAIW,EAAQV,OAAQD,GAAK,EAAGE,GAAK,EAC1DH,EAAAG,GAAKS,EAAQX,GAEd,OAAAD,CACX,CAkBec,CAAMC,UAAW,GAqBxBC,EAAcrB,EAAI,EAAGW,EAAOJ,OAASS,EAAKT,QAC1Ce,EAAY,GACPhB,EAAI,EAAGA,EAAIe,EAAaf,IACnBgB,EAAAhB,GAAK,IAAMA,EAKzB,GAFQS,EAAAQ,SAAS,SAAU,oBA3CnB,SAAUlB,EAAKmB,GAEvB,IADA,IAAIC,EAAM,GACDnB,EAAI,EAAGA,EAAID,EAAIE,OAAQD,GAAK,EACjCmB,GAAOpB,EAAIC,GACPA,EAAI,EAAID,EAAIE,SACLkB,GAAAD,GAGR,OAAAC,CACX,CAkCqDC,CAAMJ,EAAW,KAAO,4CAAjEC,EAxBK,WACT,GAAIX,gBAAgBG,EAAO,CACvB,IAAIY,EAAShB,EAAOE,MAChBD,KACAV,EAASc,EAAMI,YAEf,OAAAvB,OAAO8B,KAAYA,EACZA,EAEJf,IACV,CACD,OAAOD,EAAOE,MACVH,EACAR,EAASc,EAAMI,WAG3B,IAUQT,EAAOb,UAAW,CACd,IAAA8B,EAAQ,aACZA,EAAM9B,UAAYa,EAAOb,UACnBiB,EAAAjB,UAAY,IAAI8B,EACtBA,EAAM9B,UAAY,IACrB,CAEM,OAAAiB,CACX,EC/EAc,EAAiBN,SAASzB,UAAUgC,MAAQrB","x_google_ignoreList":[0,1]}