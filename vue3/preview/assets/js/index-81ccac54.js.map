{"version":3,"mappings":"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","names":["storageMap","cookieStorage","setItem","key","val","hours","date","Date","setTime","getTime","document","cookie","toUTCString","getItem","arrCookie","split","i","length","arr","removeItem","clear","keys","match","localStorage","sessionStorage","storage","type","JSON","stringify","startsWith","parse","getKeys","Object","config","mergeStrategy","popup","defaultType","form","emptyTime","defaultFormItemType","table","customSpecialCol","create","prop","label","minWidth","update","switch","attrs","activeValue","inactiveValue","activeText","inactiveText","inlinePrompt","BaseTag","name","BaseImg","size","UserInfo","fixed","getAttrs","col","width","_a","simple","BaseCrud","Index","filterByAuth","auth","includes","getUserInfo","BaseBtn","btnsMap","add","code","disabled","edit","delete","pass","reject","repeal","import","export","upload","download","enable","forbid","audit","view","submit","reset","log","BaseUpload","headers","action","handleSuccessResponse","res","upFile","Promise","resolve","message","data","fullUrl","regexp","getExportData","onlyNum","lowerChar","phone","identity","identity_1","identity_2","email","password","creditCard","homePath","widgetSize","defaultHomePath","defaultWidgetSize","defaultIconName","defaultGroupBtnsMaxNum","defaultReqMap","curr_page","page_size","defaultResMap","total_num","has_more","records","defaultColSpanAttrs","xs","sm","md","lg","xl","propsJoinChar","rangeJoinChar","emptyVals","isProd","importExcel","fileBuffer","opts","defval","workbook","xlsx.read","firstSheetName","SheetNames","firstSheet","Sheets","xlsx.utils","sheet_to_json","exportExcel","fileName","dayjs","format","sheetName","callback","wb","book_new","ws","json_to_sheet","skipHeader","utils","book_append_sheet","writeFileSync","getTimeAgo","time","diff","unit","num","y","Math","floor","M","d","h","m","handleFormInitData","field","modelValue","propType","typeOf","forEach","getTextFromOpts","inds","text","cycle","ind","children","opts2","getTextFromTreeByKey","tree","keyMap","id","find","item","getLabelFromOptionsByLastValue","options","propsMap","value","emptyChar","labelKey","valueKey","childrenKey","target","getLabel","isFind","getLabelFromOptionsByAllValues","values","char","labels","level","push","join","getDevelopComponents","comps","allNames","unValidNames","valideNames","filter","ele","prototype","toString","call","slice","toCssVal","String","test","getChinaCharLength","str","replace","omitAttrs","obj","list","newObj","some","it","deleteAttrs","splitPropsParams","args","minProp","maxProp","minVal","maxVal","Error","getCompNameByRoute","route","path","meta","query","matched","tagIdKey","compName","_b","at","components","default","isBig","letter","toUpperCase","toCamelCase","sysData","customData","mergeType","merge","assign","getIsUpdated","e_1","e_2","t1","handleBtnNext","map","showMessage","sortObjArrByKey","sort","a","b","random","copyText","input","createElement","setAttribute","body","appendChild","select","execCommand","removeChild","getIsOver","scrollHeight","clientHeight","hint","speed","duration","ElMessage","grouping","showClose","printLog","req","bgColor","cssVars","colorPrimary","colorSuccess","err","colorDanger","devErrorTips","renderValue","handleTableSummary","param","exceptKeys","columns","sums","column","index","Number","property","every","isNaN","reduce","prev","curr","getScreenSizeType","w","offsetWidth","getPopoverAttrs","popover","t","content","isVNode","render","component","defaultSlot","getMaxLength","fields","max","extra","popNum","_max","info","props","__props","maskDiv","reactive","init","canvas","height","ctx","getContext","font","fillStyle","rotate","PI","fillText","src","toDataURL","style","position","zIndex","top","left","pointerEvents","backgroundImage","remove","onMounted","nextTick","allowUpdate","getElementsByTagName","MutationObserver","mutations","_observer","attributeName","removedNodes","observe","childList","attributes","characterData","subtree","attributeOldValue","characterDataOldValue","onUnmounted","destroy","useEvent","eventName","handleFn","immediate","window","addEventListener","onBeforeUnmount","removeEventListener","lastMsg","tostTimer","showLoadTimer","loading","loadingCount","showLoading","setTimeout","ElLoading","service","lock","background","hideLoading","clearTimeout","close","showToast","msg","source","axios","CancelToken","cancelHttp","token","_listeners","cancel","defaultCustomCfg","isStringify","loadEnable","toastEnable","maxCount","statusMap","http","method","url","customCfg","othersCfg","fetch","cfg","toLowerCase","customConfig","cancelToken","params","isObj","qs","catch","isCancel","interceptors","request","use","response","resData","status","GetUserCaptcha","PostUserRegister","PostUserLogin","GetUserLoginAccounts","GetUserInfo","GetUserList","DeleteUserList","PostUserListExport","PostUserAdd","PostUserUpdate","useBaseStore","defineStore","cascaderMap","Region","dict","EnableStatus","Gender","YesNoStatus","AuthCase","color","EducationType","GetRewardWay","TaskRewards","TestFetchAsync","MenuType","RoleType","useDictStore","dictMap","cascader","useKeepAliveStore","ref","Array","isArray","clean","useMenuStore","router","useRouter","activeIndex","isCollapse","allMenus","sideMenus","computed","changeActiveIndex","toFirst","allNavs","subNavs","toFirstPath","menu","link_type","title","initMenus","menus","initMenusActive","pathname","subMenus","activeInd","currPath","sItem","sInd","gItem","gInd","VITE_APP_NAME","modules","useRouteStore","menuStore","isCreatedRoute","createRoutes","_menus","flatMenus","menus2","auth_codes","getFlatMenus","icon","is_cache","camelCase","cache","linkType","getRoute","addRoute","useUserStore","useRoute","userInfo","expired","now","getHandleNavs","navs","isLogin","handleLoginIn","async","expiration","remember","then","user","_navs","nickname","type_text","_title","redirect","ElNotification","dangerouslyUseHTMLString","handleLoginOut","isFetch","handleClear","fullPath","defaultSet","layout","language","uniqueOpened","pageTags","show","showIcon","breadcrumb","footer","theme","darkMode","useSetStore","setCfg","updateSet","resetDefault","tips","pinia","createPinia","defaultAttrs","closeOnClickModal","confirm","emits","__emit","$attrs","useAttrs","basicDialogRef","newAttrs","get","set","isShow","initBodyHeight","dialog","dialogContentRef","$el","crud","queryTable","getElementsByClassName","elScrollBar","hasVBar","getComputedStyle","maxHeight","showWaterMask","watch","newVal","dialogTimer","drawerTimer","dialogs","drawers","getNewAttrs","head","popupId","onClose","closePopup","openDialog","foot","shallowReactive","createAt","closeDialog","destroyed","findIndex","splice","openDrawer","closeDrawer","isDialog","isId","topPops","getTopPopupIds","provide","_c","isDiaId","routes","__vitePreload","NProgress","configure","easing","showSpinner","trickleSpeed","minimum","VITE_BASE_URL","BASE_URL","MODE","DEV","PROD","SSR","createRouter","history","createWebHashHistory","beforeEach","to","from","next","userStore","routeStore","start","afterEach","keepAliveStore","done","_d","_f","_e","onError","error","comps_1","comps_2","mixin","methods","directives","focus","mounted","el","binding","vnode","oldVnode","localName","inpDom","querySelector","copy","drag","cursor","onmousedown","e","downX","x","downY","onmousemove","eve","offsetTop","offsetLeft","onmouseup","debounce","fn","delay","arg","modifiers","timer","event","canExe","this","beforeUnmount","throttle","previous","lazy","beforeMount","IntersectionObserver","entries","realSrc","dataset","isIntersecting","removeAttribute","windowHeight","documentElement","elTop","getBoundingClientRect","elBtm","bottom","watermark","degree","textColor","display","pen","textAlign","textBaseline","number","oninput","zh","base","button","detail","search","fold","unfold","active","inactive","home","welcome","header","entryIcons","searchMenu","notification","showFullScreen","hideScreenShow","dropdown","myInfo","refreshSys","sysSet","aboutSys","logout","closeOther","closeToRight","closeToLeft","closeAll","copyPath","copyFullPath","refresh","appearance","layoutStyle","classics","vertical","horizontal","large","medium","small","mini","langType","en","pageTag","themeColor","accordion","I18n","createI18n","allowComposition","legacy","locale","lang","navigator","browserLanguage","getBrowserLang","messages","createProdMockServer","apis","app","createApp","App","errorHandler","ElementPlus","zhCn","lastIndexOf","defineAsyncComponent","mount"],"sources":["../../../src/components/_utils/common/storage.ts","../../../src/config/index.ts","../../../src/components/_utils/common/regexp.ts","../../../src/components/_utils/common/consts.ts","../../../src/components/_utils/common/system.ts","../../../src/components/_utils/common/debug.ts","../../../src/components/_utils/common/base.ts","../../../src/components/_utils/common/_init.ts","../../../src/components/_utils/platform.ts","../../../src/components/WaterMark.vue","../../../src/hooks/event.ts","../../../src/services/http/_utils.ts","../../../src/services/http/index.ts","../../../src/api-mock/user.ts","../../../src/store/modules/base.ts","../../../src/dict/cascader.ts","../../../src/dict/index.ts","../../../src/dict/modules/base.ts","../../../src/dict/modules/other.ts","../../../src/dict/modules/system.ts","../../../src/store/modules/dict.ts","../../../src/store/modules/keep-alive.ts","../../../src/store/modules/menu.ts","../../../src/store/modules/route.ts","../../../src/store/modules/user.ts","../../../src/store/modules/set.ts","../../../src/store/index.ts","../../../src/components/BasicDialog.vue","../../../src/components/BasicDrawer.vue","../../../src/App.vue","../../../src/router/routes.ts","../../../src/router/index.ts","../../../src/hooks/nprogress.ts","../../../src/components/index.ts","../../../src/services/mixin.ts","../../../src/languages/zh/base.ts","../../../src/languages/zh/index.ts","../../../src/layout/_langs/zh/index.ts","../../../src/layout/_langs/zh/layout.ts","../../../src/layout/_langs/zh/sys-set.ts","../../../src/languages/en/index.ts","../../../src/languages/en/base.ts","../../../src/layout/_langs/en/index.ts","../../../src/layout/_langs/en/layout.ts","../../../src/layout/_langs/en/sys-set.ts","../../../src/languages/index.ts","../../../src/mockProdServer.ts","../../../src/main.ts"],"sourcesContent":["/********************************************************************/\r\n/***** 构造cookie存储，让api跟localStorage、sessionStorage保持一致 *****/\r\n/********************************************************************/\r\n\r\nexport type StorageType = \"local\" | \"session\" | \"cookie\";\r\nconst cookieStorage = {\r\n  setItem(key: string, val: any, hours = 24) {\r\n    const date = new Date();\r\n    date.setTime(date.getTime() + hours * 3600 * 1000);\r\n    document.cookie = key + \"=\" + val + \";expires=\" + date.toUTCString();\r\n  },\r\n  getItem(key: string) {\r\n    const arrCookie = document.cookie.split(\";\");\r\n    let val = null;\r\n    for (let i = 0; i < arrCookie.length; i++) {\r\n      const arr = arrCookie[i].split(\"=\");\r\n      if (key == arr[0]) {\r\n        val = arr[1];\r\n        break;\r\n      }\r\n    }\r\n    return val;\r\n  },\r\n  removeItem(key: string) {\r\n    const date = new Date();\r\n    date.setTime(date.getTime() - 1000);\r\n    document.cookie = key + \"=0; expires =\" + date.toUTCString();\r\n  },\r\n  clear() {\r\n    const keys = document.cookie.match(/[^ =;]+(?=\\=)/g);\r\n    if (keys) {\r\n      for (let i = keys.length; i--; ) document.cookie = keys[i] + \"=0;expires=\" + new Date(0).toUTCString();\r\n    }\r\n  },\r\n};\r\ninterface StorageMap {\r\n  [key: string]: any;\r\n}\r\n//定义一个映射关系，方便下面直接动态赋予属性\r\nconst storageMap: StorageMap = {\r\n  cookieStorage,\r\n  localStorage,\r\n  sessionStorage,\r\n};\r\nexport default {\r\n  /**\r\n   * 存数据\r\n   * @param key {String} 要存储数据的键名\r\n   * @param val {*} 要存储的数据值\r\n   * @param type {String} 存储类型：local, session, cookie\r\n   * @param hours {Number} cookie的过期时间，只有当type为cookie时，才会用到这个参数\r\n   */\r\n  setItem(key: string, val: any, type: StorageType = \"local\", hours?: number) {\r\n    if (typeof val === \"object\") {\r\n      val = JSON.stringify(val);\r\n    }\r\n    return storageMap[type + \"Storage\"].setItem(key, val, hours);\r\n  },\r\n  /**\r\n   * 取数据\r\n   * @param key {String} 要取数据的键名\r\n   * @param type {String} 存储类型：local, session, cookie\r\n   */\r\n  getItem(key: string, type: StorageType = \"local\") {\r\n    let val = storageMap[type + \"Storage\"].getItem(key);\r\n    if (val === null) return null;\r\n    if (val === \"undefined\") return;\r\n    if (val === \"false\") return false;\r\n    if (val === \"true\") return true;\r\n    if (val.startsWith(\"{\") || val.startsWith(\"[\")) {\r\n      val = JSON.parse(val);\r\n    }\r\n    return val;\r\n  },\r\n  /**\r\n   * 删除指定键名对应的数据\r\n   * @param key {String} 要删除数据的键名\r\n   * @param type {String} 删除类型：local, session, cookie\r\n   */\r\n  removeItem(key: string, type: StorageType = \"local\") {\r\n    return storageMap[type + \"Storage\"].removeItem(key);\r\n  },\r\n  /**\r\n   * 删除所有存储数据\r\n   * @param type\r\n   */\r\n  clear(type: StorageType = \"local\") {\r\n    return storageMap[type + \"Storage\"].clear();\r\n  },\r\n  /**\r\n   * 删除所有存储的键名\r\n   * @param type\r\n   */\r\n  getKeys(type: StorageType = \"local\") {\r\n    return Object.keys(storageMap[type + \"Storage\"]);\r\n  },\r\n};\r\n","import { BaseComponentsConfig } from \"./_types\";\r\nimport { TableColAttrs } from \"@/components/table\";\r\nimport { getUserInfo, storage } from \"@/utils\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nexport * from \"./_types\";\r\n\r\nconst isSmall = true;\r\nconst isProd = import.meta.env.MODE === \"production\";\r\n// 首页地址（默认）\r\n\r\nconst config = {\r\n  // homePath: \"/home\",\r\n  mergeStrategy: \"assign\",\r\n  popup: {\r\n    defaultType: \"dialog\",\r\n  },\r\n  form: {\r\n    emptyTime: \"1000-01-01 00:00:00\",\r\n    defaultFormItemType: \"input\",\r\n    // defaultDateShortcuts: [],\r\n    // defaultDateRangeShortcuts: [],\r\n    // defaultFieldAttrs: {},\r\n    // defaultPopoverAttrs: {},\r\n    // defaultValidTypes: {},\r\n  },\r\n  table: {\r\n    // defaultGroupBtnsMaxNum: 3,\r\n    customSpecialCol: {\r\n      //创建列\r\n      create: {\r\n        prop: [\"adminName\", \"createdAt\"],\r\n        label: \"创建时间\",\r\n        minWidth: 170,\r\n      },\r\n      //修改列\r\n      update: {\r\n        prop: [\"adminName\", \"updatedAt\"],\r\n        label: \"修改时间\",\r\n        minWidth: 170,\r\n      },\r\n      //switch开关\r\n      switch: {\r\n        prop: \"status\",\r\n        label: \"启用状态\",\r\n        minWidth: 90,\r\n        attrs: {\r\n          activeValue: 0,\r\n          inactiveValue: 1,\r\n          activeText: \"启用\",\r\n          inactiveText: \"禁用\",\r\n          inlinePrompt: true,\r\n          // onChange() {\r\n          //   ElMessage.warning(\"暂未处理【启用/禁用】事件\");\r\n          // },\r\n        },\r\n      },\r\n      //是否启用 状态\r\n      BaseTag: {\r\n        prop: \"status\",\r\n        label: \"状态\",\r\n        minWidth: 100,\r\n        attrs: { name: \"EnableStatus\" },\r\n      },\r\n      //图片\r\n      BaseImg: {\r\n        prop: \"imgUrl\",\r\n        label: \"图片\",\r\n        minWidth: 146,\r\n        attrs: { size: \"120\" },\r\n      },\r\n      //文本复制\r\n      // BaseCopy: {},\r\n      //用户信息\r\n      UserInfo: {\r\n        prop: \"userData\",\r\n        label: \"用户信息\",\r\n        // minWidth: 280, // 450/280\r\n        fixed: \"left\",\r\n        getAttrs(col: TableColAttrs) {\r\n          return {\r\n            width: col?.attrs?.simple ? 232 : 450,\r\n          };\r\n        },\r\n      },\r\n    },\r\n  },\r\n  BaseCrud: {\r\n    Index: {\r\n      // immediate: true,\r\n      // changeFetch: true,\r\n      // batchBtn: false,\r\n      // log: false,\r\n      // isOmit: true,\r\n      // inputDebounce: true,\r\n      // exportLimit: 10000,\r\n      // pagination: () => ({ currPage: 1, pageSize: 20 }),\r\n      // reqMap: () => ({\r\n      //   curr_page: \"page\",\r\n      //   page_size: \"pageSize\",\r\n      // }),\r\n      // resMap: () => ({\r\n      //   curr_page: \"currentPage\",\r\n      //   page_size: \"pageSize\",\r\n      //   total_num: \"total\",\r\n      //   has_more: \"hasMore\",\r\n      //   records: \"list\",\r\n      // }),\r\n      filterByAuth: (auth: number[]) => auth.includes(getUserInfo().type),\r\n      // filterByAuth: (auth: number[]) => true,\r\n      //跟下面的size  small 搭配使用\r\n      // colSpanAttrs: () => ({\r\n      //   xs: 12,\r\n      //   sm: 12,\r\n      //   md: 8,\r\n      //   lg: 4,\r\n      //   xl: 3,\r\n      // }),\r\n      // size: isSmall ? \"small\" : undefined,\r\n      // compact: (_props: CommonObj) => _props.colSpanAttrs.xl < 6,\r\n    },\r\n    // _components: {\r\n    //   ExtraBtns: undefined,\r\n    //   BatchBtns: undefined,\r\n    //   GroupBtns: undefined,\r\n    //   Pagination: undefined,\r\n    //   QueryForm: undefined,\r\n    //   Column: undefined,\r\n    //   QueryTable: undefined,\r\n    //   SetPrint: undefined,\r\n    //   SetTable: undefined,\r\n    // },\r\n  },\r\n  BaseBtn: {\r\n    btnsMap: {\r\n      //auth 权限说明 0超级管理员 1普通管理员 2特殊用户 3普通用户 4游客用户 5开发者\r\n      add: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      edit: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      delete: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      pass: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      reject: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      repeal: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      import: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      export: { auth: [] },\r\n      upload: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      download: { auth: [] },\r\n      enable: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      forbid: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      audit: { auth: [0, 1, 2, { code: 4, disabled: true }, 5] },\r\n      view: { auth: undefined },\r\n      submit: { auth: null },\r\n      reset: { auth: [0, 5] },\r\n      log: { auth: null },\r\n      // empty: { auth: null },\r\n    },\r\n  },\r\n  BaseUpload: {\r\n    // size: 100,\r\n    // fit: \"cover\",\r\n    // showFileList: false,\r\n    // showTips: true,\r\n    // accept: \"image/png,image/jpg,image/jpeg\",\r\n    // limitSize: 1024 * 1024 * 10, //10M\r\n    headers: () => ({ \"X-Token\": storage.getItem(\"token\") }),\r\n    action: `${isProd ? \"\" : \"/proxy\"}/api/admin/upload/image`,\r\n    handleSuccessResponse: (res: CommonObj, upFile: CommonObj) => {\r\n      return new Promise((resolve, reject) => {\r\n        const { code, message, data } = res;\r\n        if (code === 2000) {\r\n          resolve(data.fullUrl);\r\n        } else {\r\n          reject(message);\r\n        }\r\n      });\r\n    },\r\n  },\r\n  // regexp: {},\r\n} as BaseComponentsConfig;\r\nexport default config;\r\n","/********************************************************************/\r\n/*************************** 正则表单式配置 ***************************/\r\n\r\nimport config from \"@/config\";\r\nimport { getExportData } from \"@/components/_utils\";\r\n\r\n/********************************************************************/\r\nexport default getExportData(\r\n  {\r\n    onlyNum: /^[0-9.]+$/, //只匹配数字，至少一位，123或\"123\"均可\r\n    lowerChar: /[a-z]+/, //小写字母\r\n    //移动电话(中国，宽松)：只要是13,14,15,16,17,18,19开头即可\r\n    phone: /^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/,\r\n    // 身份证号, 支持1/2代(15位/18位数字)\r\n    identity:\r\n      /^\\d{6}((((((19|20)\\d{2})(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|(((19|20)\\d{2})(0[13578]|1[02])31)|((19|20)\\d{2})02(0[1-9]|1\\d|2[0-8])|((((19|20)([13579][26]|[2468][048]|0[48]))|(2000))0229))\\d{3})|((((\\d{2})(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|((\\d{2})(0[13578]|1[02])31)|((\\d{2})02(0[1-9]|1\\d|2[0-8]))|(([13579][26]|[2468][048]|0[048])0229))\\d{2}))(\\d|X|x)$/,\r\n    // 身份证号(1代,15位数字)\r\n    identity_1: /^[1-9]\\d{7}(?:0\\d|10|11|12)(?:0[1-9]|[1-2][\\d]|30|31)\\d{3}$/,\r\n    // 身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X\r\n    identity_2: /^[1-9]\\d{5}(?:18|19|20)\\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2]\\d|30|31)\\d{3}[\\dXx]$/,\r\n    //邮箱\r\n    email:\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n    //密码： 6-16位字母和数字组合\r\n    password: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,16}$/,\r\n    //银行卡号\r\n    creditCard: /^[1-9]\\d{9,29}$/,\r\n  },\r\n  config.regexp\r\n);\r\n\r\n// 其他\r\n// this.phone.replace(/(\\d{3})\\d*(\\d{4})/, \"$1****$2\")  //隐藏电话号码的中间位置\r\n","/********************************************************************/\r\n/***************************** 系统常量 ******************************/\r\n/********************************************************************/\r\n\r\nimport { getExportData } from \"@/components/_utils\";\r\nimport { ReqMap, ResMap } from \"@/components/BaseCrud\";\r\nimport { ColSpanAttrs } from \"@/components/form\";\r\nimport config from \"@/config\";\r\n\r\nconst { table, form, homePath, widgetSize } = config;\r\n\r\nexport const defaultHomePath = getExportData(\"/\", homePath); //首页路径\r\n\r\nexport const defaultWidgetSize = getExportData(\"medium\", widgetSize); //控件大小\r\n\r\nexport const defaultIconName = \"ElemeFilled\"; //默认图标\r\n\r\nexport const defaultGroupBtnsMaxNum = getExportData(3, table?.defaultGroupBtnsMaxNum);\r\nexport const defaultFormItemType = getExportData(\"input\", form?.defaultFormItemType);\r\nexport const defaultReqMap: ReqMap = {\r\n  curr_page: \"curr_page\",\r\n  page_size: \"page_size\",\r\n};\r\nexport const defaultResMap: ResMap = {\r\n  curr_page: \"curr_page\",\r\n  page_size: \"page_size\",\r\n  total_num: \"total_num\",\r\n  has_more: \"has_more\",\r\n  records: \"records\",\r\n};\r\nexport const defaultColSpanAttrs: ColSpanAttrs = {\r\n  xs: 12,\r\n  sm: 12,\r\n  md: 8,\r\n  lg: 6,\r\n  xl: 4,\r\n};\r\nexport const popupCloseAnimationDuration = 300; // 弹出层dialog、drawer关闭时的动画持续时间，单位：毫秒\r\nexport const propsJoinChar = \",\"; //双props的连接符号\r\nexport const rangeJoinChar = \"~\"; //日期、数字范围区间的连接符号\r\nexport const emptyVals = [\"\", null, undefined]; //空值，凡遇此空值，则用“-”进行占位填充。看后期是否要考虑将 \"undefined\", \"null\" 这两个加入其中\r\nexport const emptyTime = getExportData(\"\", config?.form?.emptyTime, \"alert\"); //本应该为空的默认时间（当出现此值时，说明此时间应该为空）\r\n// export const isProd = import.meta.env.PROD; //是否是生产环境，此方式会有问题，故弃用\r\nexport const isProd = import.meta.env.MODE === \"prod\"; //是否是生产环境，因为import.meta.env.PROD在生产环境中不为true，所以暂时这样处理。本来应该是'production'，但是package.json中指定了 --mode prod\r\nexport const isDev = import.meta.env.MODE === \"dev\"; //是否是开发环境，本来应该是'development'，但是package.json中指定了 --mode dev\r\n","/********************************************************************/\r\n/**************** 系统级别的方法，可能因工程改变而改变 ****************/\r\n/********************************************************************/\r\n\r\nimport { typeOf } from \"@/components/_utils\";\r\nimport { FormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport { CommonObj, OptionItem, StrNum } from \"@/vite-env\";\r\nimport { emptyVals, emptyTime } from \"./consts\";\r\nimport dayjs from \"dayjs\";\r\nimport * as xlsx from \"xlsx\";\r\n\r\n/**\r\n * 导入excel中的数据\r\n * @param fileBuffer\r\n * @returns {unknown[]}\r\n */\r\nexport function importExcel(\r\n  fileBuffer: any,\r\n  opts = {\r\n    defval: \"\", //默认值配置\r\n  }\r\n): CommonObj[] {\r\n  const workbook = xlsx.read(fileBuffer, { type: \"buffer\" }); // 获取 workbook\r\n  const firstSheetName = workbook.SheetNames[0]; // 获取第一张表名\r\n  const firstSheet = workbook.Sheets[firstSheetName]; // 获取第一张表\r\n  return xlsx.utils.sheet_to_json(firstSheet, opts); // 获取数据\r\n}\r\n\r\n/**\r\n * 导出（下载）Excel数据表\r\n * @param data array 要下载的数据  例：[[\"A1\", \"B1\", \"C1\"], [\"A2\", \"B2\", \"C2\"],[\"A3\", \"B3\", \"C3\"]]   通常第一行是表头，可以单独拼接\r\n * @param {string} fileName 文件名称\r\n * @param {string} sheetName 表名称\r\n * @param {Function} callback 回调函数\r\n * @link 参考链接 https://www.jianshu.com/p/f9ba3dd3cd4f\r\n */\r\nexport function exportExcel(\r\n  data: string[][] = [],\r\n  fileName = dayjs().format(\"YYYYMMDD\"),\r\n  sheetName = \"表1\",\r\n  callback?: () => void\r\n) {\r\n  const wb = xlsx.utils.book_new(); // 创建workbook\r\n  // const ws = xlsx.utils.aoa_to_sheet(data); // 创建sheet\r\n  const ws = xlsx.utils.json_to_sheet(data, {\r\n    // header: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"],\r\n    skipHeader: true,\r\n  }); // 创建sheet\r\n  xlsx.utils.book_append_sheet(wb, ws, sheetName); // 把sheet放入workbook\r\n  xlsx.writeFile(wb, fileName + \".xls\"); // 写入文件(通过文件名控制导出的类型)\r\n  callback?.();\r\n}\r\n\r\n/**\r\n * 获取时间（几年/月/天/小时/分钟前）\r\n */\r\nexport function getTimeAgo(time: any) {\r\n  if (!time) return \"\";\r\n  time = dayjs().diff(time) / 1000;\r\n  let unit = \"\";\r\n  let num = 0;\r\n  const y = Math.floor(time / (60 * 60 * 24 * 365));\r\n  if (y > 0) {\r\n    unit = \"年\";\r\n    num = y;\r\n    return `${num}${unit}前`;\r\n  } else {\r\n    const M = Math.floor(time / (60 * 60 * 24 * 30));\r\n    if (M > 0) {\r\n      unit = \"月\";\r\n      num = M;\r\n      return `${num}${unit}前`;\r\n    } else {\r\n      const d = Math.floor(time / (60 * 60 * 24));\r\n      if (d > 0) {\r\n        unit = \"天\";\r\n        num = d;\r\n      } else {\r\n        const h = Math.floor(time / (60 * 60));\r\n        if (h > 0) {\r\n          unit = \"小时\";\r\n          num = h;\r\n        } else {\r\n          const m = Math.floor(time / 60);\r\n          if (m > 0) {\r\n            unit = \"分钟\";\r\n            num = m;\r\n          } else {\r\n            return \"刚刚\";\r\n          }\r\n        }\r\n      }\r\n      return `${num}${unit}前`;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 获取过去时间距离现在的文本字符\r\n * @param time 能被new Date()解析的时间格式\r\n * @return string  //刚刚  XX分钟前 XX小时前 XX天前\r\n */\r\nexport function getLastTimeStr(time: any) {\r\n  const lastTime = new Date(time).getTime();\r\n  const diffTime = (Date.now() - lastTime) / 1000;\r\n  if (diffTime < 0) {\r\n    console.error(\"传入时间不能大于当前时间值\");\r\n    return \"-\";\r\n  } else {\r\n    // const M = Math.trunc(diffTime / (30 * 24 * 60 * 60));\r\n    // if (M > 0) {\r\n    //   return `${M}月前`;\r\n    // } else {\r\n    const d = Math.trunc(diffTime / (24 * 60 * 60));\r\n    if (d > 0) {\r\n      return `${d}天前`;\r\n    } else {\r\n      const h = Math.trunc(diffTime / (60 * 60));\r\n      if (h > 0) {\r\n        return `${h}小时前`;\r\n      } else {\r\n        const m = Math.trunc(diffTime / 60);\r\n        return m > 0 ? `${m}分钟前` : \"刚刚\";\r\n      }\r\n    }\r\n    // }\r\n  }\r\n}\r\n\r\n/**\r\n * 处理平台默认值问题 Form echo data\r\n * @description 后端的数据库日期必须有一个默认值，回显的时候会显示这个默认值，因为数据量较多，改动较大，所以由前端统一处理\r\n */\r\nexport function handleFormInitData(field: FormFieldAttrs, modelValue?: CommonObj) {\r\n  if (!modelValue || emptyVals.includes(emptyTime)) return;\r\n  const { type, prop } = field;\r\n  const propType = typeOf(prop);\r\n  if (type?.includes(\"date\")) {\r\n    if (propType === \"String\") {\r\n      if (modelValue[prop as string] === emptyTime) {\r\n        modelValue[prop as string] = \"\";\r\n      }\r\n    } else if (propType === \"Array\") {\r\n      (prop as string[]).forEach((key: string) => {\r\n        if (modelValue[key] === emptyTime) {\r\n          modelValue[key] = \"\";\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 计算弹性布局时，末尾需要的空盒子个数\r\n * @param {number} total  总共多少个元素\r\n * @param {number} cols   多少列布局\r\n * @returns\r\n */\r\nexport function getEmptyNum(total: number, cols: number) {\r\n  return cols - (total % cols);\r\n}\r\n\r\n/**\r\n * 对象数组排序（默认order）\r\n * @param opts {}[] 要排序的数组\r\n * @param inds number[] 排序依据的对象属性键名\r\n */\r\nexport function getTextFromOpts(opts: OptionItem[] = [], inds: number[] = []) {\r\n  let text = \"\";\r\n  function cycle(opts: OptionItem[], ind: number = 0) {\r\n    const { label = \"\", children = [] } = opts?.[inds[ind]] || {};\r\n    text += label;\r\n    if (children?.length) {\r\n      cycle(children, ind + 1);\r\n    }\r\n  }\r\n  cycle(opts);\r\n  return text;\r\n}\r\n\r\n/**\r\n * 获取图片的http请求路径\r\n * @param path {string} 图片路径\r\n * @returns\r\n */\r\nexport const getImgUrl = (path: string) => {\r\n  return new URL(path, import.meta.url).href;\r\n};\r\n\r\n/**\r\n * 从树形数组中根据id获取菜单文本\r\n * @param tree {}[] 树形数据\r\n * @param {string | number} id  id\r\n * @param key 要获取的文本的键名\r\n * @param keyMap 键名映射\r\n */\r\nexport function getTextFromTreeByKey(\r\n  tree: CommonObj[] = [],\r\n  val: StrNum,\r\n  key: string,\r\n  keyMap: CommonObj = { id: \"id\", children: \"children\" }\r\n) {\r\n  if (!val) return \"\";\r\n  let text = \"\";\r\n  tree?.find(item => {\r\n    if (item[keyMap.id] == val) {\r\n      text = item[key];\r\n      return !!text;\r\n    } else {\r\n      text = getTextFromTreeByKey(item[keyMap.children], val, key);\r\n      return !!text;\r\n    }\r\n  });\r\n  return text;\r\n}\r\n\r\n/**\r\n * 根据值(非数组)从options获取label文本\r\n */\r\nexport function getLabelFromOptionsByLastValue(\r\n  options: CommonObj[],\r\n  val: StrNum,\r\n  propsMap: CommonObj = {\r\n    label: \"label\",\r\n    value: \"value\",\r\n    children: \"children\",\r\n  },\r\n  emptyChar = \"-\"\r\n) {\r\n  const { label: labelKey, value: valueKey, children: childrenKey } = propsMap;\r\n  let target: CommonObj | undefined;\r\n  function getLabel(opts: CommonObj[]): boolean {\r\n    return !!opts.find(item => {\r\n      const children = item[childrenKey];\r\n      const value = item[valueKey];\r\n      const isFind = value === val;\r\n      if (isFind) {\r\n        target = item;\r\n      } else {\r\n        if (children?.length) {\r\n          return getLabel(children);\r\n        }\r\n      }\r\n      return isFind;\r\n    });\r\n  }\r\n  getLabel(options);\r\n  return target?.[labelKey] ?? emptyChar;\r\n}\r\n\r\n/**\r\n * 根据值（数组）从options获取label文本\r\n */\r\nexport function getLabelFromOptionsByAllValues(\r\n  options: CommonObj[],\r\n  values: StrNum[],\r\n  propsMap: CommonObj = {\r\n    label: \"label\",\r\n    value: \"value\",\r\n    children: \"children\",\r\n  },\r\n  char = \"\"\r\n) {\r\n  const { label: labelKey, value: valueKey, children: childrenKey } = propsMap;\r\n  const labels: string[] = [];\r\n  function getLabel(opts: CommonObj[], level = 0) {\r\n    opts.find(item => {\r\n      const children = item[childrenKey];\r\n      const value = item[valueKey];\r\n      const label = item[labelKey];\r\n      const isFind = value === values[level];\r\n      if (isFind) {\r\n        labels.push(label);\r\n        if (children) {\r\n          getLabel(children, ++level);\r\n        }\r\n      }\r\n      return isFind;\r\n    });\r\n  }\r\n  getLabel(options);\r\n  return labels.join(char);\r\n}\r\n\r\n/**\r\n * 根据url地址下载文件\r\n * @param {string} url  下载地址\r\n * @param {string} name  文件名称\r\n */\r\nexport function downloadByUrl(url: string, name: string = dayjs().format(\"YYYY-MM-DD\")) {\r\n  const a = document.createElement(\"a\");\r\n  a.download = name;\r\n  a.href = url;\r\n  a.style.display = \"none\";\r\n  a.click();\r\n  a.remove();\r\n}\r\n\r\n/**\r\n * 根据 bufferData 下载文件\r\n * @param {string} buffer  Buffer数据\r\n * @param {string} name  文件名称\r\n */\r\nexport function downloadByBuffer(buffer, name?: string) {\r\n  const blob = new Blob([buffer], { type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" });\r\n  const url = window.URL.createObjectURL(blob);\r\n  downloadByUrl(url, name);\r\n}\r\n\r\n/**\r\n * @description 获取浏览器默认语言\r\n * @returns {String}\r\n */\r\nexport function getBrowserLang() {\r\n  const lang = (navigator.language ?? navigator.browserLanguage).toLowerCase();\r\n  return [\"cn\", \"zh\", \"zh-cn\"].includes(lang) ? \"zh\" : \"en\";\r\n}\r\n","/********************************************************************/\r\n/********************** 开发调试相关的系统级方法 **********************/\r\n/********************************************************************/\r\n\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { isDev } from \"./consts\";\r\n// import { ElNotification } from \"element-plus\";\r\n\r\n/**\r\n * 函数未传必填参数时的校验\r\n * @param name string 参数名称\r\n */\r\nexport function needParam(name: string = \"\") {\r\n  throw new Error(\"请传入参数：\" + name);\r\n}\r\n\r\n/**\r\n * 检查对象2的属性在对象1上是否存在，即以对象1的属性为准\r\n */\r\nexport function checkObjKeyError(obj_1: CommonObj = {}, obj_2: CommonObj = {}) {\r\n  if (!isDev) return;\r\n  for (const key in obj_2) {\r\n    if (obj_1[key] === undefined) {\r\n      throw new Error(`不存在属性名：${key}，请检查`);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * 计算src/components下开发的有效页面\r\n * @return\r\n */\r\nexport function getDevelopComponents() {\r\n  const comps = import.meta.glob(\"@/components/**/**/*.vue\");\r\n  const allNames = Object.keys(comps);\r\n  const unValidNames: string[] = []; //无效页面\r\n  //有效页面\r\n  const valideNames = allNames.filter((key: string) => {\r\n    if (key.includes(\" \")) unValidNames.push(key);\r\n    return !key.includes(\" \");\r\n  });\r\n  return {\r\n    valideNames,\r\n    unValidNames,\r\n  };\r\n}\r\n\r\n/**\r\n * @description 全局代码错误捕捉\r\n * */\r\nexport function handleError(error: any) {\r\n  // 过滤 HTTP 请求错误\r\n  if (error.status || error.status === 0) return false;\r\n  const errorMap: CommonObj = {\r\n    InternalError: \"Javascript引擎内部错误\",\r\n    ReferenceError: \"未找到对象\",\r\n    TypeError: \"使用了错误的类型或对象\",\r\n    RangeError: \"使用内置对象时，参数超范围\",\r\n    SyntaxError: \"语法错误\",\r\n    EvalError: \"错误的使用了Eval\",\r\n    URIError: \"URI错误\",\r\n  };\r\n  // ElNotification({\r\n  //   title: errorMap[error.name] ?? \"未知错误\",\r\n  //   message: error,\r\n  //   type: \"error\",\r\n  //   duration: 3000,\r\n  // });\r\n  console.error(errorMap[error.name] ?? \"未知错误\", error);\r\n}\r\n","/********************************************************************/\r\n/*************** 为Base*.vue正常执行逻辑提供的常用的方法 ***************/\r\n/********************************************************************/\r\n\r\nimport { regexp, showMessage, toCamelCase } from \"@/components/_utils\";\r\nimport { merge } from \"lodash\";\r\nimport config, { ConfigMergeStrategy } from \"@/config\";\r\nimport { CommonObj, StrNum } from \"@/vite-env\";\r\nimport { BtnName } from \"@/components/BaseBtn\";\r\nimport { FormField, FormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport { propsJoinChar, emptyVals } from \"./consts\";\r\n\r\n/**\r\n * 检测元素所属类型\r\n * Object.prototype.toString.call(*)的可能结果如下所示：\r\n * @example null             [object Null]\r\n * @example undefined        [object Undefined]\r\n * @example Symbol());       [object Symbol]\r\n * @example true             [object Boolean]\r\n * @example ''               [object String]\r\n * @example 1                [object Number]\r\n * @example []               [object Array]\r\n * @example {}               [object Object]\r\n * @example new Date()       [object Date]\r\n * @example new Function()   [object Function]\r\n * @example new RegExp()     [object RegExp]\r\n * @example new Error()      [object Error]\r\n * @example document         [object HTMLDocument]\r\n * @example window           [object global] window 是全局对象 global 的引用\r\n * @param {*} ele 待检测的对象、字符串、数组等\r\n * @returns {String} 元素类型（string、number、boolean、symbol、undefined、null、function、date、array、object、regexp、error、htmldocument、global）\r\n */\r\nexport type TypeOfReturn =\r\n  | \"Null\"\r\n  | \"Undefined\"\r\n  | \"Symbol\"\r\n  | \"Boolean\"\r\n  | \"String\"\r\n  | \"Number\"\r\n  | \"Array\"\r\n  | \"Object\"\r\n  | \"Date\"\r\n  | \"Function\"\r\n  | \"RegExp\"\r\n  | \"Error\"\r\n  | \"HTMLDocument\"\r\n  | \"global\";\r\nexport const typeOf = (ele: any): TypeOfReturn => {\r\n  const endStr = Object.prototype.toString.call(ele);\r\n  const type = endStr.split(\" \")[1].slice(0, -1) as TypeOfReturn;\r\n  return type;\r\n};\r\n\r\n/**\r\n * 把css的值转换下，如果已经带有单位，则返回原值，如果没有带单位，则加上px\r\n * @param  val {string,number,undefined}  数值\r\n * @param  unit {string} 单位\r\n * @returns\r\n */\r\nexport const toCssVal = (val: number | string | undefined, unit = \"px\") => {\r\n  val = String(val);\r\n  const isOnlyNum = regexp.onlyNum.test(val);\r\n  return isOnlyNum ? val + unit : val;\r\n};\r\n\r\n/**\r\n * 获取css值的单位\r\n * @param  val {string} 数值\r\n * @returns {string}\r\n */\r\nexport const getCssValUnit = (val: string) => {\r\n  const res = val.match(regexp.lowerChar);\r\n  const unit = res ? res[0] : \"\";\r\n  return unit;\r\n};\r\n\r\n/**\r\n * 把css的值转换下，如果已经带有单位，则返回原值，如果没有带单位，则加上px\r\n * @param  val {string,number,undefined} 数值\r\n * @param  operator {string} 运算符号，可选值：+, -, *, /\r\n * @param  num {string}  操作数\r\n * @returns {string}\r\n */\r\nexport const calCssVal = (val: number | string | undefined, operator: string, num: number) => {\r\n  val = String(val);\r\n  const unit = getCssValUnit(val);\r\n  const newVal = parseFloat(val);\r\n  let end; //运算结果\r\n  switch (operator) {\r\n    case \"+\":\r\n      end = newVal + num;\r\n      break;\r\n    case \"-\":\r\n      end = newVal - num;\r\n      break;\r\n    case \"*\":\r\n      end = newVal * num;\r\n      break;\r\n    case \"/\":\r\n      end = newVal / num;\r\n      break;\r\n    default:\r\n      throw new Error(\"暂不支持此运算符进行运算：\" + operator);\r\n  }\r\n  return end + unit;\r\n};\r\n\r\n/**\r\n * 获取中文字符长度\r\n * @param 全角符算1个，半角符算0.5个字符\r\n */\r\nexport function getChinaCharLength(str?: string): number {\r\n  if (!str) return 0;\r\n  return str.replace(/[^\\x00-\\xff]/g, \"**\").length / 2;\r\n}\r\n\r\n/**\r\n * 获取字符串的字节长度（全角符算2个，半角符算1个字符）\r\n * @param str string 字符串\r\n */\r\nexport function getBytes(str = \"\") {\r\n  const len = str.length;\r\n  let bytes = len;\r\n  for (let i = 0; i < len; i++) {\r\n    if (str.charCodeAt(i) > 255) bytes++;\r\n  }\r\n  return bytes;\r\n}\r\n\r\n/**\r\n * 剔除对象值为指定类型的对象属性\r\n * @param obj 要剔除属性的对象\r\n * @param list 要剔除的属性数组\r\n */\r\nexport function omitAttrs(obj: CommonObj, list = emptyVals) {\r\n  const newObj: CommonObj = {};\r\n  for (const key in obj) {\r\n    const val = obj[key];\r\n    const type = typeOf(val);\r\n    if (type === \"Object\") {\r\n      newObj[key] = omitAttrs(val);\r\n      // if (!Object.keys(newObj[key]).length) {\r\n      //   newObj[key] = undefined;\r\n      // }\r\n    } else if (type === \"Array\") {\r\n      // 如果range类字段，每个值都为空字符串，则剔除掉这个属性\r\n      if (val.some((it: StrNum) => it !== \"\")) {\r\n        newObj[key] = val;\r\n      }\r\n      // newObj[key] = val.filter((it: any) => {\r\n      //   const t = typeOf(it);\r\n      //   if (t === \"Object\") {\r\n      //     return JSON.stringify(it) !== \"{}\";\r\n      //   } else if (t === \"Array\") {\r\n      //     return true;\r\n      //   } else {\r\n      //     return !list.includes(it);\r\n      //   }\r\n      // });\r\n    } else if (!list.includes(val)) {\r\n      newObj[key] = val;\r\n    }\r\n  }\r\n  return newObj;\r\n}\r\n\r\n/**\r\n * 剔除对象属性（不会改变原数组）\r\n * @param obj 要剔除属性的对象\r\n * @param keys 剔除的属性数组\r\n */\r\nexport function deleteAttrs(obj: CommonObj = {}, keys: string | string[]) {\r\n  const newObj = JSON.parse(JSON.stringify(obj));\r\n  if (!keys?.length) return newObj;\r\n  if (typeof keys === \"string\") return delete newObj[keys];\r\n  keys.forEach(key => delete newObj[key]);\r\n  return newObj;\r\n}\r\n\r\n/**\r\n * 将联合prop拆成两个字段\r\n * @param obj 要拆解的对象\r\n * @param isRange 是否是区间数组\r\n * @reture args 不会修改原对象\r\n */\r\nexport function splitPropsParams(args: CommonObj) {\r\n  const obj = JSON.parse(JSON.stringify(args));\r\n  const entrs = Object.keys(obj).filter(it => it.includes(propsJoinChar));\r\n  entrs.forEach((prop: string, ind: number) => {\r\n    if (!obj[prop]) return;\r\n    const type = typeOf(obj[prop]);\r\n    //区间数组 [min,max] = [最小值，最大值]\r\n    if (type === \"Array\") {\r\n      const [minProp, maxProp] = prop.split(propsJoinChar);\r\n      const [minVal, maxVal] = obj[prop];\r\n      obj[minProp] = minVal;\r\n      obj[maxProp] = maxVal;\r\n    } else if (type === \"Object\") {\r\n      //表单字段中无prop，但是有children属性\r\n      const keys = prop.split(propsJoinChar);\r\n      keys.forEach((key: string) => {\r\n        obj[key] = obj[prop][key];\r\n      });\r\n    } else {\r\n      throw new Error(`暂未处理type为${type}的类型`);\r\n    }\r\n    delete obj[prop];\r\n  });\r\n  return obj;\r\n}\r\n\r\n/**\r\n * 根据路由信息生成组件名称\r\n * @param route object 路由信息\r\n * @returns name string 组件名称\r\n */\r\nexport function getCompNameByRoute(route: CommonObj): string {\r\n  const { path, meta, query, name, matched } = route;\r\n  const { tagIdKey = \"id\" } = meta;\r\n  const defName = matched.at(-1)?.components?.default.name;\r\n  let compName = defName ?? toCamelCase(path, true);\r\n  if (query[tagIdKey]) {\r\n    compName += \"Of\" + query[tagIdKey];\r\n  }\r\n  return compName;\r\n}\r\n\r\n/**\r\n * 处理暴露的数据对象\r\n *@param sysData object 系统数据\r\n *@param customData object 自定义数据\r\n */\r\nexport function getExportData(\r\n  sysData: any,\r\n  customData?: any,\r\n  mergeType: ConfigMergeStrategy = config?.mergeStrategy ?? \"assign\"\r\n) {\r\n  if ([null, undefined].includes(customData)) return sysData;\r\n  if (!mergeType) return customData;\r\n  const isBaseData = [\"string\", \"number\", \"boolean\"].includes(typeof sysData); //如果是基础数据类型\r\n  if (isBaseData) mergeType = \"alert\";\r\n  if (mergeType === \"merge\") return merge(sysData, customData);\r\n  if (mergeType === \"assign\") return Object.assign(sysData, customData);\r\n  if (mergeType === \"alert\") return customData ?? sysData;\r\n  if (mergeType === \"auto\") return sysData;\r\n  throw new Error(`暂不支持${mergeType}合并策略`);\r\n}\r\n\r\n/**\r\n * 判断两个元素是否一致（是否修改过）\r\n * @tips 是否已经修改过\r\n */\r\nexport function getIsUpdated(e_1: any, e_2: any) {\r\n  const t1 = typeOf(e_1);\r\n  const t2 = typeOf(e_2);\r\n  if (t1 !== t2) return true;\r\n  if (t1 === \"Array\") {\r\n    if (e_1.length !== e_2.length) return true;\r\n    const updated = !!e_1.find((it: any, i: number) => getIsUpdated(e_1[i], e_2[i]));\r\n    if (updated) return true;\r\n  } else if (t1 === \"Object\") {\r\n    if (Object.keys(e_1).length !== Object.keys(e_2).length) return true;\r\n    for (const key in e_1) {\r\n      const updated = getIsUpdated(e_1[key], e_2[key]);\r\n      if (updated) return true;\r\n    }\r\n  } else {\r\n    if (e_1 !== e_2) return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * 处理分组（操作）按钮（表格中操作列的按钮）\r\n * @param map 事件方法映射\r\n * @param name 触发的按钮名称\r\n */\r\nexport function handleBtnNext(map: CommonObj, name: BtnName) {\r\n  map[name] ? map[name]() : showMessage(`点击了${name}按钮`, \"info\");\r\n}\r\n\r\n/**\r\n * 对象数组排序（默认order）\r\n * @param arr {}[] 要排序的数组\r\n * @param key string 排序依据的对象属性键名\r\n * @param type string 排序方式 asc 升序 desc 降序\r\n */\r\nexport function sortObjArrByKey(arr: CommonObj[] = [], key = \"order\", type = \"asc\"): CommonObj[] {\r\n  arr.sort((a: CommonObj, b: CommonObj) => {\r\n    if (type === \"asc\") {\r\n      return a[key] - b[key];\r\n    } else if (type === \"desc\") {\r\n      return b[key] - a[key];\r\n    } else if (type === \"random\") {\r\n      return Math.random() - 0.5;\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n\r\n/**\r\n * 复制文本\r\n * @param text 要复制到剪切板的内容\r\n */\r\nexport function copyText(text = \"\") {\r\n  const input = document.createElement(\"input\");\r\n  input.setAttribute(\"value\", text);\r\n  document.body.appendChild(input);\r\n  input.select();\r\n  const copyText = document.execCommand(\"copy\");\r\n  if (copyText) {\r\n    showMessage(\"复制成功！\");\r\n  }\r\n  document.body.removeChild(input);\r\n}\r\n\r\n/**\r\n * 文本是否已超出（出现了省略号）\r\n */\r\nexport function getIsOver(target: any) {\r\n  if (!target) return false;\r\n  const { scrollHeight, clientHeight } = target;\r\n  return scrollHeight > clientHeight;\r\n}\r\n\r\n/**\r\n * 是否是数组元素的删除\r\n */\r\n// export function isArrDel(fObj: CommonObj, tObj: CommonObj) {\r\n//   for (const key in fObj) {\r\n//     const type = typeOf(fObj[key]);\r\n//     if (type === \"Array\") {\r\n//       const isDel = fObj[key].length > tObj[key]?.length;\r\n//       if (isDel) return true;\r\n//     } else if (type === \"Object\") {\r\n//       const isDel = isArrDel(fObj[key], tObj[key]);\r\n//       if (isDel) return true;\r\n//     }\r\n//   }\r\n//   return false;\r\n// }\r\n","/********************************************************************/\r\n/******** vite.config.ts初始化时会用到的方法，同时给其他地方使用 *******/\r\n/********************************************************************/\r\n\r\n/**\r\n * 将字符串转为驼峰\r\n * @param {string} str 要转换的字符串\r\n * @param {boolean} isBig 是否转成大驼峰，否则转成小驼峰\r\n */\r\nexport function toCamelCase(str: string, isBig = false) {\r\n  str = str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (letter, ind) => {\r\n    if (ind === 0) return letter[isBig ? \"toUpperCase\" : \"toLowerCase\"]();\r\n    return letter.toUpperCase();\r\n  });\r\n  str = str.replace(/\\s+|\\/|-|}/g, \"\");\r\n  return str;\r\n}\r\n","/********************************************************************/\r\n/*************** 为Vue或React或各UI平台差异化单独写的方法 *************/\r\n/********************************************************************/\r\n\r\nimport cssVars from \"@/assets/styles/_var.module.scss\";\r\nimport { RendererElement, RendererNode, VNode, h, isVNode } from \"vue\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { emptyVals, getChinaCharLength, isDev, storage, typeOf } from \"@/components/_utils\";\r\nimport { FormField, FormFieldAttrs, PopoverAttrs } from \"@/components/BaseFormItem\";\r\nimport type { MessageParams, TableColumnCtx } from \"element-plus\";\r\nimport { CommonObj, TostMessageType } from \"@/vite-env\";\r\n\r\nexport const themeMap = {\r\n  primary: cssVars.colorPrimary,\r\n  success: cssVars.colorSuccess,\r\n  danger: cssVars.colorDanger,\r\n  warning: cssVars.colorWarning,\r\n  info: cssVars.colorInfo,\r\n};\r\n\r\n/**\r\n * 展示message提示信息\r\n * @param hint string, MessageParams 提示内容\r\n * @description 默认展示成功通知\r\n */\r\nexport function showMessage(hint: string | MessageParams, type: TostMessageType = \"success\") {\r\n  if (!hint) return;\r\n  if (typeof hint === \"string\") {\r\n    const speed = 7; //速度：7字/秒\r\n    let duration = (hint.length / speed) * 1000;\r\n    if (duration < 1500) {\r\n      duration = 1500;\r\n    }\r\n    ElMessage({\r\n      message: hint,\r\n      type,\r\n      duration,\r\n      grouping: true,\r\n      showClose: duration > 2000,\r\n    });\r\n  } else {\r\n    ElMessage(hint);\r\n  }\r\n}\r\n\r\n/**\r\n * 输出请求参数与响应数据的log信息\r\n * @param data any 要打印的数据\r\n * @param type PrintLogType 要打印的日志类型 或要输出的文本内容\r\n */\r\nexport type PrintLogType = \"req\" | \"res\" | \"err\";\r\nexport type ThemeColorType = \"primary\" | \"success\" | \"danger\" | \"warning\" | \"info\";\r\nexport function printLog(data: any, type: PrintLogType | ThemeColorType = \"req\", text: string = \"\") {\r\n  if ([\"req\", \"res\", \"err\"].includes(type)) {\r\n    const map: CommonObj = {\r\n      req: {\r\n        text: \"请求参数\",\r\n        bgColor: cssVars.colorPrimary,\r\n      },\r\n      res: {\r\n        text: \"响应数据\",\r\n        bgColor: cssVars.colorSuccess,\r\n      },\r\n      err: {\r\n        text: \"错误数据\",\r\n        bgColor: cssVars.colorDanger,\r\n      },\r\n    };\r\n    const { text, bgColor } = map[type];\r\n    console.log(`%c ${text}：`, `background:${bgColor};color:#fff;`, data);\r\n  } else {\r\n    const bgColor = themeMap[type as ThemeColorType];\r\n    console.log(`%c ${text}：`, `background:${bgColor};color:#fff;`, data);\r\n  }\r\n}\r\n\r\n/**\r\n * 处理时间：后端的时间为 1000-01-01 00:00:00 时，实际上是空值\r\n * @param text 要显示的文本内容\r\n * @param color 文本颜色\r\n */\r\nexport function devErrorTips(\r\n  text: string = \"\",\r\n  type: ThemeColorType | \"\" = \"danger\"\r\n): string | VNode<RendererNode, RendererElement, { [key: string]: any }> {\r\n  if (isDev) return type ? h(\"span\", { style: `color: ${themeMap[type]};` }, `${text}`) : text;\r\n  return text;\r\n}\r\n\r\n/**\r\n * 处理时间：后端的时间为 1000-01-01 00:00:00 时，实际上是空值\r\n * @param text 要显示的文本内容\r\n * @param color 文本颜色\r\n */\r\nexport function renderValue(val?: string): string {\r\n  return emptyVals.includes(val) ? \"-\" : (val as string);\r\n}\r\n\r\n/**\r\n * 防抖：指触发事件后在 n 秒内函数只能执行一次，如果在 n 秒内又触发了事件，则会重新计算函数执行时间\r\n * @param {(that:any,event:Event,args:CommonObj) => void} fn 回调函数\r\n * @param {Boolean} immediate 是否立即执行\r\n * @param {Number} delay 延迟时间\r\n * @example methods: {onSubmit: debounce((that, event, ...args) => {console.log(\"防抖测试\");})}\r\n */\r\nexport function debounce(fn: (that: any, event: Event, ...args: any) => void, immediate = true, delay = 1000) {\r\n  let timer: any = null;\r\n  return function (event: Event, ...args: any) {\r\n    if (timer) clearTimeout(timer);\r\n    if (immediate) {\r\n      const canExe = !timer;\r\n      timer = setTimeout(() => {\r\n        timer = null;\r\n      }, delay);\r\n      if (canExe) {\r\n        fn(this, event, ...args);\r\n      } else {\r\n        showMessage(\"您的操作太频繁了\", \"warning\");\r\n      }\r\n    } else {\r\n      timer = setTimeout(() => {\r\n        fn(this, event, ...args);\r\n        timer = null;\r\n      }, delay);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * 节流：指连续触发事件，但是在 n 秒内只执行一次函数\r\n * @param {(that:any,event:Event,args:CommonObj) => void} fn 回调函数\r\n * @param {Boolean} immediate 是否立即执行\r\n * @param {Number} delay 延迟时间\r\n * @example methods: {onSubmit: throttle((that, event, ...args) => {console.log(\"节流测试\");})}\r\n */\r\nexport function throttle(fn: (that: any, event: Event, ...args: any) => void, immediate = true, delay = 1000) {\r\n  if (immediate) {\r\n    let previous = 0;\r\n    return function (e: Event, ...args: any) {\r\n      const now = Date.now();\r\n      if (now - previous > delay) {\r\n        fn(this, e, ...args);\r\n        previous = now;\r\n      }\r\n    };\r\n  } else {\r\n    let timer: any = null;\r\n    return function (e: Event, ...args: any) {\r\n      if (!timer) {\r\n        timer = setTimeout(() => {\r\n          fn(this, e, ...args);\r\n          timer = null;\r\n        }, delay);\r\n      }\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * 处理ElementPlus表格的汇总\r\n * @param exceptKeys 要排除掉的不进行汇总的列prop\r\n */\r\nexport interface SummaryMethodProps<T = CommonObj> {\r\n  columns: TableColumnCtx<T>[];\r\n  data: T[];\r\n}\r\nexport function handleTableSummary(param: SummaryMethodProps, exceptKeys?: string[]) {\r\n  const { columns, data } = param;\r\n  const sums: string[] = [];\r\n  columns.forEach((column, index) => {\r\n    if (index === 0) return (sums[index] = \"合计\");\r\n    const values = data.map(item => Number(item[column.property]));\r\n    if (values.every(value => Number.isNaN(value))) {\r\n      sums[index] = \"-\"; //N/A\r\n    } else {\r\n      if (exceptKeys?.includes(column.property)) {\r\n        sums[index] = \"-\";\r\n      } else {\r\n        sums[index] = `${values.reduce((prev, curr) => {\r\n          const value = Number(curr);\r\n          return Number.isNaN(value) ? prev : prev + curr;\r\n        }, 0)}`;\r\n      }\r\n    }\r\n  });\r\n  return sums;\r\n}\r\n\r\n/**\r\n * 获取屏幕大小的类型，对应着element-plus定义的屏幕类型\r\n * @return string 屏幕类型\r\n */\r\nexport type ScreenSizeType = \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\r\nexport function getScreenSizeType(w = document.body.offsetWidth): ScreenSizeType {\r\n  if (w < 768) return \"xs\";\r\n  if (w >= 768 && w < 992) return \"sm\";\r\n  if (w >= 992 && w < 1200) return \"md\";\r\n  if (w >= 1200 && w < 1920) return \"lg\";\r\n  if (w >= 1920) return \"xl\";\r\n  return \"xl\";\r\n}\r\n\r\n/**\r\n * 获取popover的属性值\r\n * @param popover\r\n * @returns\r\n */\r\nexport function getPopoverAttrs(popover?: string | PopoverAttrs): PopoverAttrs | undefined {\r\n  if (!popover) return;\r\n  const t = typeof popover;\r\n  if (t === \"string\") return { content: popover as string };\r\n  if (t === \"object\") {\r\n    if (isVNode(popover) || popover.render || popover.component) return { defaultSlot: popover };\r\n    return popover as PopoverAttrs;\r\n  }\r\n  throw new Error(`暂不支持此popover类型：${t}`);\r\n}\r\n\r\n/**\r\n * 获取label的最大字符长度\r\n * @param fields 表单域\r\n * @param num 额外的空白宽度，默认2 // 2是因为：一个是间距宽度，一个是*宽度\r\n */\r\nexport function getMaxLength(fields: FormField[] = [], num = 2): number {\r\n  let max = 1;\r\n  fields.forEach(item => {\r\n    if (typeOf(item) !== \"Object\") return;\r\n    const { label, children, extra } = item as FormFieldAttrs;\r\n    const popNum = extra?.popover ? 1 : 0;\r\n    if (label?.length + popNum > max) {\r\n      max = getChinaCharLength(label) + popNum; //全角符算1个，半角符算0.5个字符\r\n    }\r\n    if (children) {\r\n      const _max = getMaxLength(children, 0);\r\n      if (_max > max) max = _max;\r\n    }\r\n  });\r\n  return max + num;\r\n}\r\n\r\n/**\r\n * 获取用户信息\r\n */\r\nexport function getUserInfo(): CommonObj | null {\r\n  const info = storage.getItem(\"userInfo\");\r\n  if (!info) showMessage(\"检测到未登录异常\", \"error\");\r\n  return info;\r\n}\r\n","<template>\r\n  <div class=\"water-mark\"></div>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { onMounted, nextTick, onUnmounted, reactive } from \"vue\";\r\nimport dayjs from \"dayjs\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"WaterMark\" }); \n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    text?: string; //显示的水印文本\r\n    rotate?: number; //旋转角度\r\n    allowUpdate?: boolean; //是否允许通过js或者开发者工具等途径修改水印DOM节点（水印的id，attribute属性，节点的删除），true为允许\r\n    destroy?: boolean; //是否在销毁组件时去除水印节点（前提是允许用户修改DOM，否则去除后会再次自动生成）,true会\r\n  }>(),\r\n  {\r\n    text: `姓名 00001 ${dayjs(new Date()).format(\"YYYY-MM-DD\")}`,\r\n    allowUpdate: false,\r\n    destroy: true,\r\n    rotate: 30,\r\n  }\r\n);\r\nlet maskDiv = reactive<any>({}); // 当前显示的水印div节点DOM对象\r\nfunction init() {\r\n  const canvas: any = document.createElement(\"canvas\");\r\n  canvas.id = \"canvas\";\r\n  canvas.width = \"380\"; //单个水印的宽高\r\n  canvas.height = \"180\";\r\n  maskDiv = document.createElement(\"div\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n  ctx.font = \"normal 14px Microsoft Yahei\"; //设置样式\r\n  ctx.fillStyle = \"rgb(112, 113, 114, 0.1)\"; //水印字体颜色\r\n  ctx.rotate((props.rotate * Math.PI) / 180); //水印偏转角度\r\n  ctx.fillText(props.text, 30, 20);\r\n  const src = canvas.toDataURL(\"image/png\");\r\n  maskDiv.style.position = \"fixed\";\r\n  maskDiv.style.zIndex = \"9999\";\r\n  maskDiv.id = \"_waterMark\";\r\n  maskDiv.style.top = \"30px\";\r\n  maskDiv.style.left = \"0\";\r\n  maskDiv.style.width = \"100%\";\r\n  maskDiv.style.height = \"100%\";\r\n  maskDiv.style.pointerEvents = \"none\";\r\n  maskDiv.style.backgroundImage = \"URL(\" + src + \")\";\r\n  document.body.appendChild(maskDiv); // 水印节点插到body下\r\n}\r\n\r\n/* public */\r\n//手动销毁水印DOM\r\nfunction remove() {\r\n  document.body.removeChild(maskDiv);\r\n}\r\n\r\n//监听body节点\r\nfunction monitor() {\r\n  const body = document.getElementsByTagName(\"body\")[0];\r\n  const options = {\r\n    childList: true,\r\n    attributes: true,\r\n    characterData: true,\r\n    subtree: true,\r\n    attributeOldValue: true,\r\n    characterDataOldValue: true,\r\n  };\r\n  const observer = new MutationObserver((mutations: any, _observer: any) => {\r\n    const { target, attributeName, removedNodes } = mutations[0];\r\n    //当attribute属性被修改或id被改变时\r\n    if (target.id === \"_waterMark\" || attributeName === \"id\") remove();\r\n    //当节点被删除或id被改变时\r\n    if (removedNodes[0]?.id === \"_waterMark\" || attributeName === \"id\") init();\r\n  });\r\n  observer.observe(body, options);\r\n}\r\n\r\nonMounted(() => {\r\n  init();\r\n  nextTick(() => {\r\n    if (!props.allowUpdate) {\r\n      // 设置水印节点修改的DOM事件\r\n      monitor();\r\n    }\r\n  });\r\n});\r\nonUnmounted(() => {\r\n  //组件销毁时去除生成在body节点下的水印节点\r\n  if (props.destroy) {\r\n    remove();\r\n  }\r\n});\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import { onMounted, onBeforeUnmount } from \"vue\";\r\nexport default (eventName: string, handleFn: () => void, immediate = false) => {\r\n  onMounted(() => {\r\n    immediate && handleFn();\r\n    window.addEventListener(eventName, handleFn);\r\n  });\r\n  onBeforeUnmount(() => {\r\n    window.removeEventListener(eventName, handleFn);\r\n  });\r\n};\r\n","import { ElLoading, ElMessage } from \"element-plus\";\r\nimport { CommonObj, SetTimeout } from \"@/vite-env\";\r\nexport interface Response<T = any> {\r\n  code: number;\r\n  msg: string;\r\n  data: T;\r\n}\r\n\r\ntype ToastType = \"warning\" | \"info\" | \"success\" | \"error\";\r\n\r\nlet lastMsg = \"\"; // 上次提示过了，下次不提示重复的\r\nlet tostTimer: SetTimeout = null;\r\nlet showLoadTimer: SetTimeout = null;\r\nlet loading: null | CommonObj = null;\r\nlet loadingCount = 0;\r\n\r\nexport function startLoading() {\r\n  loading = ElLoading.service({\r\n    lock: true,\r\n    text: \"玩命加载中……\",\r\n    background: \"rgba(0, 0, 0, 0.5)\",\r\n  });\r\n}\r\n\r\nexport function endLoading() {\r\n  loading?.close();\r\n  loading = null;\r\n}\r\n\r\nexport function showLoading() {\r\n  if (loadingCount === 0) {\r\n    showLoadTimer = setTimeout(() => {\r\n      startLoading();\r\n      showLoadTimer = null;\r\n    }, 500);\r\n  }\r\n  loadingCount += 1;\r\n}\r\n\r\nexport function hideLoading() {\r\n  if (loadingCount > 0) {\r\n    loadingCount -= 1;\r\n    if (loadingCount === 0) {\r\n      if (showLoadTimer) {\r\n        clearTimeout(showLoadTimer);\r\n        showLoadTimer = null;\r\n      } else {\r\n        endLoading();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function showToast(msg: string, type: ToastType = \"warning\") {\r\n  if (lastMsg === msg) return;\r\n  ElMessage[type](msg);\r\n  lastMsg = msg;\r\n  tostTimer && clearTimeout(tostTimer);\r\n  tostTimer = setTimeout(() => {\r\n    lastMsg = \"\";\r\n    tostTimer = null;\r\n  }, 300);\r\n  return msg;\r\n}\r\n","/**\r\n * @link 取消请求参考链接：https://blog.csdn.net/lu2925028830/article/details/126296846\r\n */\r\n\r\nimport qs from \"qs\";\r\nimport axios, {\r\n  AxiosInstance,\r\n  AxiosError,\r\n  AxiosRequestConfig,\r\n  InternalAxiosRequestConfig,\r\n  AxiosResponse,\r\n  CancelTokenSource,\r\n} from \"axios\";\r\nimport { typeOf, isDev } from \"@/utils\";\r\nimport { showLoading, hideLoading, showToast } from \"./_utils\";\r\nimport { GetRequired } from \"@/vite-env\";\r\nlet source: CancelTokenSource = axios.CancelToken.source();\r\n\r\n// 可选的自定义请求配置\r\nexport interface CustomRequestConfig {\r\n  isStringify?: boolean; // 是否字符串序列化\r\n  loadEnable?: boolean; // 是否启用loading\r\n  toastEnable?: boolean; // 当返回状态码不为成功时，是否进行弹窗提示\r\n  maxCount?: number; // 请求失败后的最大尝试重新请求次数\r\n}\r\n\r\nexport interface NewAxiosRequestConfig extends AxiosRequestConfig {\r\n  customConfig: GetRequired<CustomRequestConfig>;\r\n}\r\n\r\n/**\r\n * 取消请求\r\n * @returns\r\n */\r\nexport function cancelHttp() {\r\n  if (!source.token._listeners?.length) return;\r\n  // source.cancel(\"请求已被取消\"); // 会取消请求栈内的所有请求\r\n  source.cancel(); // 会取消请求栈内的所有请求\r\n  source = axios.CancelToken.source();\r\n  showToast(\"请求已被取消\");\r\n}\r\n\r\nconst defaultCustomCfg = {\r\n  isStringify: false, //对于post请求的参数是否字符串序列化\r\n  loadEnable: true, // 是否启用全局loading\r\n  toastEnable: true, // 对于code非成功值的提示信息是否要进行toast提示\r\n  maxCount: 1, //失败后重新请求的最大尝试次数\r\n};\r\n\r\nconst statusMap: Record<number, string> = {\r\n  400: \"请求失败！请您稍后重试\",\r\n  401: \"登录失效！请您重新登录\",\r\n  403: \"当前账号无权限访问！\",\r\n  404: \"你所访问的资源不存在！\",\r\n  405: \"请求方式错误！请您稍后重试\",\r\n  408: \"请求超时！请您稍后重试\",\r\n  500: \"服务异常！\",\r\n  502: \"网关错误！\",\r\n  503: \"服务不可用！\",\r\n  504: \"网关超时！\",\r\n};\r\n\r\nconst service: AxiosInstance = axios.create();\r\n\r\nservice.interceptors.request.use(\r\n  (config: InternalAxiosRequestConfig) => {\r\n    const { loadEnable } = config.customConfig as GetRequired<CustomRequestConfig>;\r\n    loadEnable && showLoading();\r\n    // config.headers[\"Content-Type\"] = \"application/json;charset=utf-8\";\r\n    return config;\r\n  },\r\n  (err: AxiosError) => {\r\n    console.error(\"请求错误：\", err);\r\n    return err;\r\n  }\r\n);\r\nservice.interceptors.response.use(\r\n  (res: AxiosResponse) => {\r\n    const { data: resData, status, config } = res;\r\n    const { loadEnable, toastEnable } = config.customConfig as GetRequired<CustomRequestConfig>;\r\n    const { code, data, msg } = resData;\r\n    loadEnable && hideLoading();\r\n    if (status !== 200) return Promise.reject(showToast(statusMap[status] || \"请求失败\"));\r\n    if (code === 0) return data;\r\n    toastEnable && showToast(msg);\r\n    console.error(\"请求错误：\", msg);\r\n    return Promise.reject(msg);\r\n  },\r\n  (err: AxiosError) => {\r\n    if (axios.isCancel(err)) return Promise.reject(err);\r\n    const { message, config } = err;\r\n    const { loadEnable, toastEnable } = config.customConfig as GetRequired<CustomRequestConfig>;\r\n    loadEnable && hideLoading();\r\n    if (message === \"Network Error\") {\r\n      showToast(isDev ? \"Mock服务端错误！\" : \"网络错误\", \"error\");\r\n    } else if (message === \"Request failed with status code 404\") {\r\n      console.error(\"接口不存在：\" + config?.url);\r\n      showToast(\"接口不存在\", \"error\");\r\n    } else {\r\n      console.error(\"响应错误：\", err);\r\n      showToast(\"网络错误\", \"error\");\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n/**\r\n * 发送http请求\r\n * @param {String} method 请求类型（区分大小写），可选值：get,post,put,patch,delete\r\n * get 获取数据。请求指定的页面信息，并返回实体主体。\r\n * post 提交数据。如：提交表单或上传文件。数据被包含在请求体中\r\n * put 更新全部数据（类似post）\r\n * patch 更新局部数据（类似post，只针对更改过的）。是对put的补充，patch意为修补。\r\n * delete 删除数据。\r\n * @param {String} url 请求地址\r\n * @param {Object} data 请求参数\r\n * @param {Object} customCfg 自定义的携带在axios config上的属性\r\n * @param {Object} othersCfg 除上述三个axios配置参数外，其余任意多个axios的标准参数\r\n * @returns\r\n */\r\nfunction fetch(\r\n  method = \"get\",\r\n  url = \"\",\r\n  data: any,\r\n  customCfg: GetRequired<CustomRequestConfig>,\r\n  othersCfg?: AxiosRequestConfig\r\n): Promise<any> {\r\n  method = method.toLowerCase();\r\n  const cfg: NewAxiosRequestConfig = { url, method, customConfig: customCfg, cancelToken: source.token, ...othersCfg };\r\n  if ([\"get\"].includes(method)) {\r\n    cfg.params = data;\r\n  } else if ([\"post\", \"put\", \"patch\", \"delete\"].includes(method)) {\r\n    const isObj = typeOf(data) === \"Object\";\r\n    const { isStringify } = customCfg;\r\n    cfg.data = isObj && isStringify ? qs.stringify(data) : data;\r\n  } else {\r\n    throw new Error(\"请传入正确的请求方法\");\r\n  }\r\n  return service(cfg);\r\n}\r\n\r\n/**\r\n * 发送http请求\r\n * @param {String} method 请求类型（区分大小写），可选值：get,post,put,patch,delete\r\n * get 获取数据。请求指定的页面信息，并返回实体主体。\r\n * post 提交数据。如：提交表单或上传文件。数据被包含在请求体中\r\n * put 更新全部数据（类似post）\r\n * patch 更新局部数据（类似post，只针对更改过的）。是对put的补充，patch意为修补。\r\n * delete 删除数据。\r\n * @param {String} url 请求地址\r\n * @param {Object} data 请求参数\r\n * @param {Object} customCfg 自定义的携带在axios config上的属性\r\n * @param {Object} othersCfg 除上述三个axios配置参数外，其余任意多个axios的标准参数\r\n * @param {number} max 请求失败后，最大重新请求次数\r\n * @returns\r\n */\r\nfunction http(\r\n  method: string,\r\n  url: string,\r\n  data: any,\r\n  customCfg?: CustomRequestConfig,\r\n  othersCfg?: AxiosRequestConfig,\r\n  max = customCfg?.maxCount ?? defaultCustomCfg.maxCount\r\n): Promise<any> {\r\n  customCfg = customCfg ? Object.assign({}, defaultCustomCfg, customCfg) : defaultCustomCfg;\r\n  const maxCount = customCfg.maxCount!;\r\n  // console.log(source.token._listeners, \"source--------------\");\r\n  return fetch(method, url, data, customCfg as GetRequired<CustomRequestConfig>, othersCfg).catch(err => {\r\n    if (axios.isCancel(err) || max <= 1) {\r\n      Promise.reject(err);\r\n    } else {\r\n      console.warn(`接口请求失败，尝试第${maxCount - max + 1}次重新请求`);\r\n      http(method, url, data, customCfg, othersCfg, max - 1);\r\n    }\r\n  });\r\n  // return fetch(method, url, data, customCfg as GetRequired<CustomRequestConfig>, othersCfg);\r\n}\r\n\r\nexport default http;\r\n","import http from \"@/services/http\";\r\nimport { CommonObj } from \"@/vite-env\";\r\n\r\n//获取验证码\r\nexport const GetUserCaptcha = (data?: CommonObj) => http(\"get\", \"/user/captcha\", data);\r\n//注册\r\nexport const PostUserRegister = (data?: CommonObj) => http(\"post\", \"/user/register\", data);\r\n//登录\r\nexport const PostUserLogin = (data?: CommonObj) => http(\"post\", \"/user/login\", data);\r\n//登出\r\nexport const PostUserLogout = (data?: CommonObj) => http(\"post\", \"/user/logout\", data);\r\n//获取可登录的用户账号\r\nexport const GetUserLoginAccounts = (data?: CommonObj) => http(\"get\", \"/user/login/accounts\", data);\r\n//获取用户列表\r\nexport const GetUserInfo = (data?: CommonObj) => http(\"get\", \"/user/info\", data);\r\n//获取导航数据\r\nexport const GetUserNavs = (data?: CommonObj) => http(\"get\", \"/user/navs\", data);\r\n//获取用户列表\r\nexport const GetUserList = (data?: CommonObj) => http(\"get\", \"/user/list\", data);\r\n//批量删除用户\r\nexport const DeleteUserList = (data?: CommonObj) => http(\"delete\", \"/user/list\", data);\r\n//导出用户列表\r\nexport const PostUserListExport = (data?: CommonObj) => http(\"post\", \"/user/list/export\", data);\r\n//新增用户\r\nexport const PostUserAdd = (data?: CommonObj) => http(\"post\", \"/user/add\", data);\r\n//编辑修改用户\r\nexport const PostUserUpdate = (data?: CommonObj) => http(\"post\", \"/user/update\", data);\r\n","import { computed, reactive, watch, ref } from \"vue\";\r\nimport { defineStore } from \"pinia\";\r\nimport { storage } from \"@/utils\";\r\n\r\nexport default defineStore(\"base\", () => {\r\n  // const isTest = ref(storage.getItem(\"isTest\", \"session\") ?? true);\r\n  /**\r\n   * 增加一层监听是为了手动刷新浏览器时（点击左上角的刷新按钮），能够保持和刷新前一样的状态\r\n   * 存储在sessionStorage中是为了避免localStorage中存储过多，影响阅读，且是否折叠这个状态不用一直存储在localStorage中\r\n   */\r\n  // watch(isTest, newVal => {\r\n  //   storage.setItem(\"isTest\", newVal, \"session\");\r\n  // });\r\n  // return {\r\n  //   isTest,\r\n  // };\r\n});\r\n","import { GetCascaderRegion } from \"@/api-mock\";\r\n\r\nexport type CascaderName = keyof typeof cascaderMap;\r\n\r\n/**\r\n * 级联的逻辑处理暂时放在这里，后续再改进放置位置\r\n */\r\n\r\nconst cascaderMap = {\r\n  // 地区（省市区）\r\n  Region: [], // await GetCascaderRegion().then((res: any) => res),\r\n};\r\n\r\nexport default cascaderMap;\r\n","import base from \"./modules/base\";\r\nimport other from \"./modules/other\";\r\nimport system from \"./modules/system\";\r\n\r\nexport * from \"./_config\";\r\nexport * from \"./cascader\";\r\nexport * from \"./_types\";\r\n\r\n/**\r\n * 字典映射集合\r\n */\r\n\r\nexport default {\r\n  ...base,\r\n  ...other,\r\n  ...system,\r\n};\r\n","export default {\r\n  //启用状态\r\n  EnableStatus: {\r\n    0: {\r\n      text: \"禁用\",\r\n      attrs: {\r\n        type: \"info\",\r\n      },\r\n    },\r\n    1: {\r\n      text: \"启用\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n  },\r\n  //性别：0未知 1男 2女\r\n  Gender: {\r\n    0: {\r\n      text: \"未知\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    1: {\r\n      text: \"男\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    2: {\r\n      text: \"女\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n  },\r\n  // 是否状态类型\r\n  YesNoStatus: {\r\n    0: {\r\n      text: \"否\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    1: {\r\n      text: \"是\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","import { GetMockCommonList } from \"@/api-mock\";\r\nimport { CommonObj } from \"@/vite-env\";\r\n\r\nexport default {\r\n  //身份认证情况：1=未认证,2=学历;3=公司,4=双认证\r\n  AuthCase: {\r\n    \"1\": {\r\n      text: \"未认证\",\r\n      attrs: {\r\n        type: \"info\",\r\n      },\r\n    },\r\n    \"2\": {\r\n      text: \"学历认证\",\r\n      attrs: {\r\n        color: \"#06D4E0\",\r\n        style: {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n    },\r\n    \"3\": {\r\n      text: \"公司认证\",\r\n      attrs: {\r\n        color: \"#1368F9\",\r\n        style: {\r\n          color: \"#fff\",\r\n        },\r\n      },\r\n    },\r\n    \"4\": {\r\n      text: \"双认证\",\r\n      attrs: {\r\n        type: \"success\",\r\n      },\r\n    },\r\n  },\r\n  //学历类型: 0未知 1大专 2本科 3研究生 4博士\r\n  EducationType: {\r\n    0: {\r\n      text: \"未知\",\r\n      attrs: {\r\n        type: \"info\",\r\n      },\r\n    },\r\n    1: {\r\n      text: \"专科\",\r\n      attrs: {\r\n        type: \"info\",\r\n      },\r\n    },\r\n    2: {\r\n      text: \"本科\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    3: {\r\n      text: \"硕士\",\r\n      attrs: {\r\n        type: \"warning\",\r\n      },\r\n    },\r\n    4: {\r\n      text: \"博士\",\r\n      attrs: {\r\n        type: \"success\",\r\n      },\r\n    },\r\n  },\r\n  //领取奖励方式：0手动 1自动\r\n  GetRewardWay: {\r\n    0: {\r\n      text: \"手动\",\r\n      attrs: {\r\n        type: \"info\",\r\n      },\r\n    },\r\n    1: {\r\n      text: \"自动\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n  },\r\n  // 任务奖励类型: 1 金币， 2 心动嘉宾\r\n  TaskRewards: {\r\n    1: {\r\n      text: \"金币\",\r\n      attrs: {\r\n        type: \"warning\",\r\n      },\r\n    },\r\n    2: {\r\n      text: \"心动嘉宾\",\r\n      attrs: {\r\n        type: \"danger\",\r\n      },\r\n    },\r\n  },\r\n  // 测试用的请求下拉项\r\n  TestFetchAsync: {},\r\n  // await GetMockCommonList().then((res: CommonObj) => {\r\n  //   const obj: CommonObj = {};\r\n  //   Array(3)\r\n  //     .fill(\"\")\r\n  //     .forEach((item: string, ind: number) => {\r\n  //       obj[ind] = {\r\n  //         text: `请求下拉项${ind}`,\r\n  //       };\r\n  //     });\r\n  //   return obj;\r\n  // }),\r\n};\r\n","export default {\r\n  // 菜单类型\r\n  MenuType: {\r\n    0: {\r\n      text: \"目录\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    1: {\r\n      text: \"菜单\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    2: {\r\n      text: \"按钮\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    // 3: {\r\n    //   text: \"外链\",\r\n    //   attrs: {\r\n    //     type: \"primary\",\r\n    //   },\r\n    // },\r\n  },\r\n  // 角色类型\r\n  RoleType: {\r\n    0: {\r\n      text: \"超级管理员\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    1: {\r\n      text: \"普通管理员\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    2: {\r\n      text: \"特殊用户\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    3: {\r\n      text: \"普通用户\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    4: {\r\n      text: \"游客用户\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n    5: {\r\n      text: \"开发人员\",\r\n      attrs: {\r\n        type: \"primary\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","import { merge } from \"lodash\";\r\nimport { reactive, ref, computed } from \"vue\";\r\nimport dict, { DictName } from \"@/dict\";\r\nimport cascader from \"@/dict/cascader\";\r\nimport { CommonObj, StrNum, OptionItem, FetchType } from \"@/vite-env\";\r\nimport { defineStore } from \"pinia\";\r\n\r\n/**\r\n * 将对象按属性排序（整理文件按属性排序的时候会用到）\r\n * @param map CommonObj\r\n */\r\nfunction sortMapByKey(map: CommonObj) {\r\n  const keys = Object.keys(map);\r\n  keys.sort();\r\n  const obj: CommonObj = {};\r\n  keys.forEach((key, ind) => {\r\n    obj[key] = map[key];\r\n  });\r\n  return obj;\r\n}\r\n\r\nexport default defineStore(\"dict\", () => {\r\n  const dictMap = reactive<CommonObj>(dict);\r\n  const cascaderMap = reactive<CommonObj>(cascader);\r\n\r\n  // 未来可能有如下方法\r\n  // function getDictMap() {}\r\n  // function setDictMap() {}\r\n  // function clearDictMap() {}\r\n\r\n  return {\r\n    dictMap,\r\n    cascaderMap,\r\n  };\r\n});\r\n","import { ref } from \"vue\";\r\nimport { defineStore } from \"pinia\";\r\nimport { typeOf } from \"#/mock/utils\";\r\n\r\nexport default defineStore(\"keep-alive\", () => {\r\n  const list = ref<string[]>([]);\r\n  //新增\r\n  function add(name: string | string[]) {\r\n    if (!name) return;\r\n    if (typeof name === \"string\") {\r\n      !list.value.includes(name) && list.value.push(name);\r\n    } else if (Array.isArray(name)) {\r\n      name.forEach(it => add(it));\r\n    } else {\r\n      throw new Error(`暂不支持${typeOf(name)}类型`);\r\n    }\r\n  }\r\n  //移除\r\n  function remove(name: string | string[]) {\r\n    if (!name) return;\r\n    if (typeof name === \"string\") {\r\n      list.value = list.value.filter(it => it !== name);\r\n    } else if (Array.isArray(name)) {\r\n      list.value = list.value.filter(it => !name.includes(it));\r\n    } else {\r\n      throw new Error(`暂不支持${typeOf(name)}类型`);\r\n    }\r\n  }\r\n  //清除\r\n  function clean() {\r\n    list.value = [];\r\n  }\r\n\r\n  return {\r\n    list,\r\n    add,\r\n    remove,\r\n    clean,\r\n  };\r\n});\r\n","import { computed, reactive, ref, watch } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { defineStore } from \"pinia\";\r\nimport { LinkType, ResponseMenuItem } from \"@/layout/_components/SideMenu/_types\";\r\nimport { defaultHomePath, storage } from \"@/utils\";\r\nexport interface RouteItem {\r\n  path: string;\r\n  name: string;\r\n  children?: string;\r\n  component?: () => Promise<unknown>;\r\n  meta: {\r\n    title: string;\r\n    icon?: string;\r\n    cache?: boolean;\r\n    tagIdKey?: string; //默认键名id。用keep-alive缓存同组件但不同id的页面组件时，需要依据唯一值来生成新的组件，这个唯一值的键名默认取的 id\r\n    linkType?: LinkType;\r\n  };\r\n}\r\n\r\nexport default defineStore(\"menu\", () => {\r\n  const router = useRouter();\r\n  const activeIndex = ref<number>(0);\r\n  const isCollapse = ref<boolean>(storage.getItem(\"isCollapse\", \"session\") ?? false); //是否折叠菜单\r\n  const allMenus = reactive<ResponseMenuItem[]>(storage.getItem(\"allMenus\") || []); // 完整导航数据\r\n  const sideMenus = computed<ResponseMenuItem[]>(() => allMenus[activeIndex.value]?.children ?? []);\r\n  /**\r\n   * 增加一层监听是为了手动刷新浏览器时（点击左上角的刷新按钮），能够保持和刷新前一样的状态\r\n   * 存储在sessionStorage中是为了避免localStorage中存储过多，影响阅读，且是否折叠这个状态不用一直存储在localStorage中\r\n   */\r\n  // watch(isCollapse, newVal => {\r\n  //   storage.setItem(\"isCollapse\", newVal, \"session\");\r\n  // });\r\n  function initMenus(menus: ResponseMenuItem[] = []) {\r\n    allMenus.length = 0;\r\n    allMenus.push(...menus);\r\n  }\r\n  //改变导航选中项时\r\n  function changeActiveIndex(ind: number, toFirst: boolean = true, allNavs = allMenus) {\r\n    activeIndex.value = ind;\r\n    if (ind === -1) isCollapse.value = true;\r\n    if (!toFirst) return;\r\n    const subNavs = allNavs[ind]?.children;\r\n    isCollapse.value = !subNavs?.length;\r\n    if (subNavs?.length) toFirstPath(allNavs[ind]);\r\n  }\r\n  //跳转到subMenus的第一个地址\r\n  function toFirstPath(menu: ResponseMenuItem) {\r\n    if (!menu.children?.length) return;\r\n    const { children = [], path, label, link_type } = menu?.children[0];\r\n    if (link_type) {\r\n      // router.push({ name: \"innerLink\", query: { url: path } });\r\n      // if (link_type === 1) {\r\n      //   return (document.title = label);\r\n      // }\r\n      // if (link_type === 2) {\r\n      //   return window.open(path, \"_blank\");\r\n      // }\r\n      // throw new Error(`暂不支持code为${link_type}的外链类型`);\r\n    } else {\r\n      if (children.length) {\r\n        if (children[0].children?.length) {\r\n          toFirstPath(children[0]);\r\n        } else {\r\n          const { path, label } = children[0];\r\n          router.push(path);\r\n          document.title = label;\r\n        }\r\n      } else {\r\n        router.push(path);\r\n        document.title = label;\r\n      }\r\n    }\r\n  }\r\n  // 获取sideMenus第一级的路径\r\n  function initMenusActive(pathname: string): string {\r\n    const subMenus = allMenus;\r\n    const activeInd = activeIndex.value;\r\n    let currPath = defaultHomePath;\r\n    if (subMenus[activeInd]?.children?.length) {\r\n      function isFind(children: ResponseMenuItem[]): boolean {\r\n        return !!children.find((sItem, sInd) => {\r\n          const { children = [], path, label } = sItem;\r\n          if (path === pathname) {\r\n            document.title = label;\r\n          }\r\n          return path === pathname || isFind(children);\r\n        });\r\n      }\r\n      const target = subMenus.find((gItem, gInd) => {\r\n        const { children = [] } = gItem;\r\n        const find = isFind(children);\r\n        if (find) changeActiveIndex(gInd, false);\r\n        return find;\r\n      });\r\n      if (target) currPath = target.path ?? defaultHomePath;\r\n    } else {\r\n      const { VITE_APP_NAME } = import.meta.env;\r\n      const { path = defaultHomePath, label = VITE_APP_NAME } = subMenus?.[activeInd] || {};\r\n      document.title = label;\r\n      currPath = path;\r\n    }\r\n    return currPath;\r\n  }\r\n  return {\r\n    allMenus,\r\n    sideMenus,\r\n    activeIndex,\r\n    isCollapse,\r\n    toFirstPath,\r\n    initMenus,\r\n    initMenusActive,\r\n    changeActiveIndex,\r\n  };\r\n});\r\n","import { defineStore } from \"pinia\";\r\nimport { ref } from \"vue\";\r\nimport { camelCase } from \"lodash\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { useMenuStore } from \"@/store\";\r\nimport { RouteItem } from \"./menu\";\r\nimport { ResponseMenuItem } from \"@/layout/_components/SideMenu/_types\";\r\n\r\nconst modules = import.meta.glob(\"../../views/**/*.vue\");\r\nexport default defineStore(\"route\", () => {\r\n  const menuStore = useMenuStore();\r\n  const router = useRouter();\r\n  // const currRoutes = ref<RouteItem[]>([]);\r\n  // const currentRoutes = ref<(() => void)[]>([]);\r\n  const isCreatedRoute = ref(false); //是否创建好了路由\r\n\r\n  /**\r\n   * 将菜单拉平成一级\r\n   * @param menus 菜单数据\r\n   * @notice type //0目录 1菜单（显示） 2菜单（不显示）3外链（暂未使用）\r\n   * @returns\r\n   */\r\n  function getFlatMenus(menus?: ResponseMenuItem[]): ResponseMenuItem[] {\r\n    const _menus: ResponseMenuItem[] = [];\r\n    function flatMenus(menus: ResponseMenuItem[] = []) {\r\n      menus.forEach((menu: ResponseMenuItem) => {\r\n        const { type, auth_codes, children } = menu;\r\n        if (type === 0) {\r\n          flatMenus(children);\r\n        } else {\r\n          _menus.push(menu);\r\n        }\r\n      });\r\n    }\r\n    flatMenus(menus);\r\n    return _menus;\r\n  }\r\n\r\n  /**\r\n   * 获取route信息\r\n   * @param menu 单个菜单数据\r\n   * @returns\r\n   */\r\n  function getRoute(menu: ResponseMenuItem): RouteItem {\r\n    const { label, path, auth_codes, link_type, component, icon, is_cache } = menu;\r\n    return {\r\n      path,\r\n      name: camelCase(path), //小驼峰路由名，大驼峰组件名\r\n      // component: () => import(`@/views${item.path}.vue`); //webpack用这种方式\r\n      component: modules[`../../views${component}`], //vite用这种方式\r\n      meta: {\r\n        title: label,\r\n        cache: !!is_cache,\r\n        icon,\r\n        linkType: link_type,\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * 创建路由\r\n   */\r\n  function createRoutes(menus = menuStore.allMenus) {\r\n    const routes = getFlatMenus(menus).map((it: ResponseMenuItem) => getRoute(it));\r\n    routes.forEach((item: any) => {\r\n      router.addRoute(\"layout\", item);\r\n    });\r\n    isCreatedRoute.value = true;\r\n  }\r\n\r\n  return {\r\n    isCreatedRoute,\r\n    createRoutes,\r\n    // currRoutes,\r\n    // currentRoutes,\r\n  };\r\n});\r\n","import { ref, computed, reactive } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { PostUserLogin, PostUserLogout } from \"@/api-mock\";\r\nimport { storage, isProd, defaultHomePath, defaultIconName } from \"@/utils\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { ElNotification, dayjs } from \"element-plus\";\r\nimport { defineStore } from \"pinia\";\r\nimport { useMenuStore, useRouteStore } from \"@/store\";\r\nimport { ResponseMenuItem } from \"@/layout/_components/SideMenu/_types\";\r\n// import md5 from \"@/services/md5\";\r\nimport md5 from \"md5\";\r\n\r\nexport default defineStore(\"user\", () => {\r\n  const router = useRouter();\r\n  const route = useRoute();\r\n  const userInfo = ref<CommonObj | null>(storage.getItem(\"userInfo\"));\r\n  const routeStore = useRouteStore();\r\n  const menuStore = useMenuStore();\r\n  //过期日期\r\n  const expired = ref(new Date(storage.getItem(\"expiredDate\")).getTime() || Date.now());\r\n  const isLogin = computed(() => {\r\n    if (!storage.getItem(\"token\")) return false;\r\n    return Date.now() < expired.value;\r\n  });\r\n\r\n  /**\r\n   * 登录\r\n   * @param data\r\n   * @param {number} expiration 过期时间，单位：秒，默认24小时不登录即会过期\r\n   * @returns\r\n   */\r\n  function getHandleNavs(navs: ResponseMenuItem[], level = 0): ResponseMenuItem[] {\r\n    if (!navs) return [];\r\n    return navs.map((item: ResponseMenuItem) => {\r\n      const { icon, children = [] } = item;\r\n      //为了保持统一及美观，对于嵌套两层以上的菜单项不展示图标\r\n      item.icon = level > 1 ? \"\" : icon || defaultIconName;\r\n      item.children = getHandleNavs(children, level + 1);\r\n      return item;\r\n    });\r\n  }\r\n  async function handleLoginIn(data: CommonObj, expiration = 24 * 60 * 60 * 1000) {\r\n    const { remember, ...params } = data;\r\n    if (remember) {\r\n      storage.setItem(\"rememberAccount\", params);\r\n    } else {\r\n      storage.removeItem(\"rememberAccount\");\r\n    }\r\n    // params.psd = md5(params.psd); // 启用 md5 进行加密\r\n    return PostUserLogin(params).then(async (res: CommonObj) => {\r\n      const { user, navs } = res;\r\n      const _navs = getHandleNavs(\r\n        navs.filter((it: ResponseMenuItem) => {\r\n          const { auth_codes } = it;\r\n          if (!auth_codes) return true;\r\n          return auth_codes.includes(user.type);\r\n        })\r\n      );\r\n      const { id = \"\", name = \"\", nickname = \"\", type_text = \"\" } = user;\r\n      user._title = name || nickname || type_text + id;\r\n      userInfo.value = user;\r\n      expired.value = Date.now() + expiration;\r\n      menuStore.initMenus(_navs);\r\n      storage.setItem(\"userInfo\", user);\r\n      storage.setItem(\"token\", user?.token ?? \"\");\r\n      storage.setItem(\"allMenus\", _navs);\r\n      storage.setItem(\"expiredDate\", dayjs(expired.value).format(\"YYYY-MM-DD HH:mm:ss\"));\r\n      router.push(route.query.redirect?.toString() ?? defaultHomePath);\r\n      ElNotification({\r\n        type: \"success\",\r\n        title: \"登录成功\",\r\n        duration: 2000,\r\n        dangerouslyUseHTMLString: true,\r\n        message: `欢迎回来，<b>${userInfo.value!._title}</b>`,\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 用户登出\r\n   * @returns\r\n   */\r\n  function handleLoginOut(isFetch = true) {\r\n    function handleClear() {\r\n      //等一秒后再清空，避免userInfo无值时，有些页面会报错\r\n      setTimeout(() => {\r\n        storage.getKeys().forEach((key: string) => {\r\n          if (![\"rememberAccount\", \"set\", \"hasGuide\"].includes(key)) storage.removeItem(key);\r\n        });\r\n        storage.clear(\"session\"); //清除sessionStorage的数据\r\n        expired.value = Date.now();\r\n        userInfo.value = null;\r\n        // menuStore.changeActiveIndex(0);\r\n      }, 1000);\r\n      const { path, fullPath, name } = route;\r\n      router.push({\r\n        name: \"login\",\r\n        query: name !== \"login\" && path !== defaultHomePath ? { redirect: fullPath } : undefined,\r\n      });\r\n    }\r\n    if (!isFetch) return handleClear();\r\n    PostUserLogout({ phone: userInfo.value!.phone }).then(() => handleClear());\r\n  }\r\n  return {\r\n    isLogin,\r\n    userInfo,\r\n    handleLoginIn,\r\n    handleLoginOut,\r\n  };\r\n});\r\n","import { computed, reactive, ref, watch } from \"vue\";\r\nimport { defineStore } from \"pinia\";\r\nimport { CommonObj, ShowCodes } from \"@/vite-env\";\r\nimport { checkObjKeyError, defaultWidgetSize, showMessage, storage } from \"@/utils\";\r\nimport cssVars from \"@/assets/styles/_var.module.scss\";\r\n\r\nexport type LayoutType = \"vertical\" | \"classics\" | \"horizontal\" | \"columns\";\r\nexport type LayoutSize = \"large\" | \"medium\" | \"small\" | \"mini\";\r\nexport type SetName = keyof typeof defaultSet;\r\nexport type LanguageTypes = \"zh\" | \"en\";\r\nexport interface LayoutAttrs {\r\n  type: LayoutType;\r\n  size: LayoutSize;\r\n}\r\ninterface DefaultSet {\r\n  layout: LayoutAttrs;\r\n  language: {\r\n    type: LanguageTypes;\r\n  };\r\n  menu: {\r\n    uniqueOpened: ShowCodes;\r\n  };\r\n  pageTags: {\r\n    show: ShowCodes;\r\n    showIcon: ShowCodes;\r\n  };\r\n  breadcrumb: {\r\n    show: ShowCodes;\r\n    showIcon: ShowCodes;\r\n  };\r\n  footer: {\r\n    show: ShowCodes;\r\n  };\r\n  theme: {\r\n    color: string;\r\n    darkMode: ShowCodes;\r\n  };\r\n}\r\n\r\nexport const defaultSet: DefaultSet = {\r\n  //布局\r\n  layout: {\r\n    type: \"columns\",\r\n    size: defaultWidgetSize,\r\n  },\r\n  //语言\r\n  language: {\r\n    type: \"zh\",\r\n  },\r\n  //菜单设置\r\n  menu: {\r\n    uniqueOpened: 0, //是否只保持一个子菜单的展开\r\n  },\r\n  //页签\r\n  pageTags: { show: 1, showIcon: 0 },\r\n  //面包屑\r\n  breadcrumb: { show: 1, showIcon: 1 },\r\n  //底部\r\n  footer: { show: 0 },\r\n  //主题\r\n  theme: {\r\n    color: cssVars.colorPrimary,\r\n    darkMode: 0,\r\n  },\r\n};\r\nexport default defineStore(\"set\", () => {\r\n  const setCfg = reactive(storage.getItem(\"set\") ?? JSON.parse(JSON.stringify(defaultSet)));\r\n  // 更改设置\r\n  function updateSet(name: SetName, obj: CommonObj) {\r\n    // checkObjKeyError(defaultSet[name], obj); // 是为了校验防止传参出错\r\n    Object.assign(setCfg[name], obj);\r\n    storage.setItem(\"set\", setCfg);\r\n  }\r\n  // 重设为默认值\r\n  function resetDefault(tips = \"已恢复为默认值\") {\r\n    Object.assign(setCfg, JSON.parse(JSON.stringify(defaultSet)));\r\n    storage.setItem(\"set\", setCfg);\r\n    showMessage(tips);\r\n  }\r\n  return {\r\n    ...setCfg,\r\n    updateSet,\r\n    resetDefault,\r\n  } as CommonObj;\r\n});\r\n","/**\r\n * @link 持久化存储参照：https://blog.csdn.net/m0_53808238/article/details/129751966\r\n */\r\n\r\nimport { createPinia } from \"pinia\";\r\nexport default createPinia();\r\n\r\nexport { default as useBaseStore } from \"./modules/base\";\r\nexport { default as useDictStore } from \"./modules/dict\";\r\nexport { default as useKeepAliveStore } from \"./modules/keep-alive\";\r\nexport { default as useMenuStore } from \"./modules/menu\";\r\nexport { default as useRouteStore } from \"./modules/route\";\r\nexport { default as useUserStore } from \"./modules/user\";\r\nexport { default as useSetStore } from \"./modules/set\";\r\n","<template>\r\n  <el-dialog\r\n    class=\"basic-dialog\"\r\n    :class=\"{ 'top-compact': !footer }\"\r\n    v-model=\"show\"\r\n    v-bind=\"newAttrs\"\r\n    append-to-body\r\n    destroy-on-close\r\n    draggable\r\n    ref=\"basicDialogRef\"\r\n  >\r\n    <!-- <template #header=\"{ close, titleId, titleClass }\" v-if=\"newAttrs.title\">\r\n      <div class=\"my-header\">\r\n        <h4 :id=\"titleId\" :class=\"titleClass\">This is a custom header!</h4>\r\n        <el-button type=\"danger\" @click=\"close\">\r\n          <el-icon class=\"el-icon--left\"><CircleCloseFilled /></el-icon>\r\n          Close\r\n        </el-button>\r\n      </div>\r\n    </template> -->\r\n    <slot>\r\n      <BaseRender :data=\"body\" />\r\n    </slot>\r\n    <template #footer v-if=\"footer\">\r\n      <slot name=\"footer\">\r\n        <div class=\"foot\" v-if=\"footer === true\">\r\n          <el-button @click=\"newAttrs.cancel\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"newAttrs.confirm\"> 确认 </el-button>\r\n        </div>\r\n        <template v-else>\r\n          {{ footer }}\r\n        </template>\r\n      </slot>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, watch, useAttrs, computed, onMounted } from \"vue\";\r\nimport { popupCloseAnimationDuration, showMessage } from \"@/components/_utils\";\r\nimport { useEvent } from \"@/hooks\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"BasicDialog\" }); \n\r\nconst defaultAttrs = {\r\n  title: \"温馨提示\",\r\n  width: \"fit-content\",\r\n  style: \"max-width: 94vw;min-width:200px;\", //background:#f2f3f5;\r\n  closeOnClickModal: false,\r\n  cancel() {\r\n    show.value = false;\r\n    // showMessage(\"点击了【取消按钮 - cancel】\", \"info\");\r\n  },\r\n  confirm() {\r\n    show.value = false;\r\n    showMessage(\"点击了【确认按钮 - confirm】\", \"info\");\r\n  },\r\n};\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    body?: any;\r\n    footer?: any;\r\n  }>(),\r\n  {\r\n    footer: true,\r\n    modelValue: false,\r\n  }\r\n);\r\nconst emits = defineEmits([\"update:modelValue\"]);\r\nconst $attrs = useAttrs();\r\nconst basicDialogRef = ref<any>(null);\r\nconst newAttrs = Object.assign({}, defaultAttrs, $attrs);\r\nconst show = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(isShow: boolean) {\r\n    emits(\"update:modelValue\", isShow);\r\n  },\r\n});\r\nfunction initBodyHeight() {\r\n  //必须要延迟一段时间，不然在过渡动画时间中时，获取到的高度会不足动画完成时的最终高度\r\n  setTimeout(() => {\r\n    const dialog = basicDialogRef.value.dialogContentRef?.$el;\r\n    if (!dialog) return;\r\n    const body = dialog.children[1];\r\n    const crud = body.children[0];\r\n    if (!crud) return;\r\n    const queryTable = crud.getElementsByClassName(\"query-table\")[0];\r\n    const elScrollBar = crud.getElementsByClassName(\"el-scrollbar__wrap\")[0];\r\n    if (!queryTable || !elScrollBar) return;\r\n    const hasVBar = elScrollBar.scrollHeight > queryTable.clientHeight;\r\n    // 当在dialog中，出现垂直滚动条时，设置height属性才能避免展示条数过多时（此时有额外按钮，筛选条件）时，最后几条条看不到的问题\r\n    // body.style.height = `calc(100vh - ${cssVars.dialogTop} - ${cssVars.dialogTop} - 58px)`;\r\n    body.style.height = hasVBar ? getComputedStyle(body).maxHeight : undefined;\r\n  }, popupCloseAnimationDuration);\r\n}\r\nonMounted(() => {\r\n  initBodyHeight();\r\n});\r\nuseEvent(\"resize\", initBodyHeight);\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.basic-dialog {\r\n  .foot {\r\n    padding: 0 $gap $gap;\r\n  }\r\n}\r\n</style>\r\n","<template>\r\n  <el-drawer class=\"basic-drawer\" v-model=\"show\" v-bind=\"newAttrs\" append-to-body destroy-on-close>\r\n    <slot>\r\n      <BaseRender :data=\"body\" />\r\n    </slot>\r\n  </el-drawer>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, watch, computed } from \"vue\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"BasicDrawer\" }); \n\r\nconst defaultAttrs = {\r\n  title: \"title 标题\",\r\n  size: \"none\",\r\n  closeOnClickModal: false,\r\n};\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    modelValue: boolean;\r\n    body?: any;\r\n  }>(),\r\n  {\r\n    modelValue: false,\r\n  }\r\n);\r\nconst emits = defineEmits([\"update:modelValue\"]);\r\nconst newAttrs = Object.assign({}, defaultAttrs);\r\nconst show = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(isShow: boolean) {\r\n    emits(\"update:modelValue\", isShow);\r\n  },\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n// :deep(.el-drawer__header) {\r\n//   font-weight: 700;\r\n//   font-size: 28px;\r\n//   margin-bottom: 0 !important;\r\n// }\r\n// ::v-deep {\r\n//   // .el-drawer {\r\n//   .el-drawer__header {\r\n//     margin-bottom: 0 !important;\r\n//   }\r\n//   // }\r\n// }\r\n// :deep(.el-drawer .el-drawer__header) {\r\n//   margin-bottom: 0 !important;\r\n// }\r\n// .el-drawer__header {\r\n//   margin-bottom: 0 !important;\r\n// }\r\n</style>\r\n","<template>\r\n  <RouterView />\r\n  <!-- 对话框 -->\r\n  <template v-for=\"(dialog, ind) in dialogs\" :key=\"ind\">\r\n    <BasicDialog v-model=\"dialog.show\" :footer=\"dialog.foot\" v-bind=\"dialog.attrs\">\r\n      <BaseRender :data=\"dialog.body\" />\r\n    </BasicDialog>\r\n  </template>\r\n  <!-- 抽屉 -->\r\n  <template v-for=\"(drawer, ind) in drawers\" :key=\"ind\">\r\n    <BasicDrawer v-model=\"drawer.show\" v-bind=\"drawer.attrs\">\r\n      <BaseRender :data=\"drawer.body\" />\r\n    </BasicDrawer>\r\n  </template>\r\n  <!-- 使用水印 -->\r\n  <WaterMark :text=\"VITE_APP_NAME\" v-if=\"showWaterMask\" />\r\n</template>\r\n<script lang=\"ts\" setup>\r\n//后续添加的\r\nimport { reactive, shallowReactive, provide, isVNode, ref, watch } from \"vue\";\r\nimport { showMessage, sortObjArrByKey } from \"@/utils\";\r\nimport { useInit } from \"@/hooks\";\r\nimport { SetTimeout } from \"@/vite-env\";\r\nimport WaterMark from \"@/components/WaterMark.vue\";\r\n//不取名为BaseDialog和BaseDrawer的原因是，这两个名字会被自动注册为全局组件，但是却用的很少，影响一定的性能，但又是极低频率会导入引用的组件，所以以Basic开头\r\nimport BasicDialog from \"@/components/BasicDialog.vue\";\r\nimport BasicDrawer from \"@/components/BasicDrawer.vue\";\r\nimport { BaseRenderData } from \"@/components/BaseRender.vue\";\r\nimport config from \"@/config\";\r\nimport { popupCloseAnimationDuration } from \"@/utils\";\r\nimport { useRoute } from \"vue-router\";\r\n\r\nexport type PopupType = \"drawer\" | \"dialog\"; //弹窗类型\r\nexport type DialogId = `dialog-${number}`; //id必须大于等于0，示例：\"dialog-1\"\r\nexport type DrawerId = `drawer-${number}`; //id必须大于等于0，示例：\"drawer-1\"\r\nexport type FootRenderData = false | BaseRenderData;\r\nexport interface DialogPopup {\r\n  id: number;\r\n  name: \"dialog\";\r\n  show: boolean;\r\n  attrs: {\r\n    title?: string;\r\n    [key: string]: any;\r\n  };\r\n  body: BaseRenderData;\r\n  foot?: FootRenderData; //底部按钮或自定义节点\r\n  createAt: number; //创建时间戳\r\n}\r\nexport type DirectionType = \"rtl\" | \"ltr\" | \"ttb\" | \"btt\";\r\nexport interface DrawerPopup {\r\n  id: number;\r\n  name: \"drawer\";\r\n  show: boolean;\r\n  attrs: {\r\n    title?: string;\r\n    direction?: DirectionType;\r\n    [key: string]: any;\r\n  };\r\n  body: BaseRenderData;\r\n  createAt: number; //创建时间戳\r\n}\r\nexport interface DrawerHeadAttrs {\r\n  title?: string;\r\n  [key: string]: any;\r\n}\r\nexport interface DialogHeadAttrs {\r\n  title?: string;\r\n  [key: string]: any;\r\n}\r\n//打开的弹窗类型\r\nexport type OpenPopupTypes = PopupType | DialogPopup | DrawerPopup | DialogId | DrawerId;\r\nexport type ClosePopupType = OpenPopupTypes | number | \"all\"; //关闭的弹窗类型：'all' 关闭所有dialog、drawer；number：关闭顶层的 n 个弹窗\r\nexport type CloseDialogType = DialogPopup | DialogId | \"all\";\r\nexport type CloseDrawerType = DrawerPopup | DrawerId | \"all\";\r\nexport type DialogHeadTypes = string | DialogHeadAttrs;\r\nexport type DrawerHeadTypes = string | DrawerHeadAttrs;\r\n\r\nconst route = useRoute();\r\nconst showWaterMask = ref(false);\r\nwatch(route, newVal => {\r\n  showWaterMask.value = newVal.name !== \"login\";\r\n});\r\nconst { VITE_APP_NAME } = import.meta.env;\r\nlet dialogTimer: SetTimeout = null;\r\nlet drawerTimer: SetTimeout = null;\r\n\r\n/***\r\n * 后续添加的\r\n */\r\n// useInit(); //初始化页面\r\nconst closeDelay = popupCloseAnimationDuration; //延迟一点置为空（为了配合动画效果）\r\nconst dialogs = reactive<DialogPopup[]>([]);\r\nconst drawers = reactive<DrawerPopup[]>([]);\r\n\r\n/**\r\n * 构造生成新的body对象\r\n */\r\nfunction getNewBody(body: any): BaseRenderData {\r\n  // if (typeof body === \"string\") return body; //字符串也是虚拟dom\r\n  // if (!isVNode(body) && !body.component) return { component: body };\r\n  // return body;\r\n  return body;\r\n}\r\n\r\n/**\r\n * 构造生成新的attrs对象\r\n */\r\nfunction getNewAttrs(head: any, popupId: DrawerId | DialogId): any {\r\n  if (typeof head === \"string\") {\r\n    return { title: head, onClose: () => closePopup(popupId) };\r\n  } else {\r\n    return head;\r\n  }\r\n}\r\n\r\n/**\r\n * 对话框 dialog\r\n */\r\nfunction openDialog(head: DialogHeadTypes | DialogId, body?: BaseRenderData, foot: FootRenderData = false) {\r\n  if (dialogTimer) return showMessage(\"您的操作太频繁了\", \"warning\");\r\n  if (typeof head === \"string\" && head.startsWith(\"dialog-\")) {\r\n    const id = Number(head.split(\"-\")[1]);\r\n    const target = dialogs.find(it => it.id === id);\r\n    if (target) return (target.show = true);\r\n    return showMessage(`不存在对话框【dialog-${id}】`, \"error\");\r\n  }\r\n  const id = (dialogs.at(-1)?.id ?? -1) + 1;\r\n  dialogs.push(\r\n    shallowReactive<DialogPopup>({\r\n      id,\r\n      name: \"dialog\",\r\n      show: true,\r\n      attrs: getNewAttrs(head, `dialog-${id}`),\r\n      body: getNewBody(body),\r\n      foot,\r\n      createAt: Date.now(),\r\n    })\r\n  );\r\n}\r\n\r\nfunction closeDialog(popup: CloseDialogType = `dialog-${dialogs.at(-1)?.id ?? 0}`, destroyed = true) {\r\n  if (popup === \"all\") {\r\n    dialogs.length = 0;\r\n  } else {\r\n    const ind = dialogs.findIndex(item => {\r\n      if (typeof popup !== \"string\") return item === popup;\r\n      return item.id === Number(popup.split(\"-\")[1]);\r\n    });\r\n    if (ind === -1) return;\r\n    dialogs[ind].show = false;\r\n    if (!destroyed) return;\r\n    dialogTimer = setTimeout(() => {\r\n      dialogs.splice(ind, 1);\r\n      dialogTimer = null;\r\n    }, closeDelay);\r\n  }\r\n}\r\n\r\n/**\r\n * 抽屉 drawer\r\n */\r\nfunction openDrawer(head: DrawerHeadTypes | DrawerId, body?: BaseRenderData) {\r\n  if (drawerTimer) return showMessage(\"您的操作太频繁了\", \"warning\");\r\n  if (typeof head === \"string\" && head.startsWith(\"drawer-\")) {\r\n    const id = Number(head.split(\"-\")[1]);\r\n    const target = drawers.find(it => it.id === id);\r\n    if (target) return (target.show = true);\r\n    return showMessage(`不存在抽屉【drawer-${id}】`, \"error\");\r\n  }\r\n  const id = (drawers.at(-1)?.id ?? -1) + 1;\r\n  drawers.push(\r\n    shallowReactive<DrawerPopup>({\r\n      id,\r\n      name: \"drawer\",\r\n      show: true,\r\n      attrs: getNewAttrs(head, `drawer-${id}`),\r\n      body: getNewBody(body),\r\n      createAt: Date.now(),\r\n    })\r\n  );\r\n}\r\n\r\nfunction closeDrawer(popup: CloseDrawerType = `drawer-${drawers.at(-1)?.id ?? 0}`, destroyed = true) {\r\n  if (popup === \"all\") {\r\n    drawers.length = 0;\r\n  } else {\r\n    const ind = drawers.findIndex(item => {\r\n      if (typeof popup !== \"string\") return item === popup;\r\n      return item.id === Number(popup.split(\"-\")[1]);\r\n    });\r\n    if (ind === -1) return;\r\n    drawers[ind].show = false;\r\n    if (!destroyed) return;\r\n    drawerTimer = setTimeout(() => {\r\n      drawers.splice(ind, 1);\r\n      drawerTimer = null;\r\n    }, closeDelay);\r\n  }\r\n}\r\n\r\n/**\r\n * 混合弹出层 popup\r\n */\r\nfunction openPopup(\r\n  head: DrawerHeadTypes | DialogHeadTypes | DialogId | DrawerId,\r\n  body?: BaseRenderData,\r\n  type: PopupType | FootRenderData = config?.popup?.defaultType ?? \"dialog\",\r\n  foot: FootRenderData = false\r\n) {\r\n  if (typeof head === \"string\") {\r\n    const isDiaId = head.startsWith(\"dialog-\");\r\n    if (isDiaId || head.startsWith(\"drawer-\")) return isDiaId ? openDialog(head) : openDrawer(head);\r\n  }\r\n  if (type === \"dialog\") {\r\n    openDialog(head, body, foot);\r\n  } else if (type === \"drawer\") {\r\n    openDrawer(head, body);\r\n  } else {\r\n    // 如果不是弹窗类型，则打开dialog，且type的值作为dialog的footer渲染\r\n    openDialog(head, body, type as FootRenderData);\r\n  }\r\n}\r\n\r\n/**\r\n * 获取顶层弹窗的id数组\r\n */\r\nfunction getTopPopupIds(num = 1): (DrawerId | DialogId)[] {\r\n  if (num <= 0) throw new Error(\"请传入一个正整数\");\r\n  const popups = sortObjArrByKey([...dialogs, ...drawers], \"createAt\", \"desc\");\r\n  const topPops = popups.slice(0, num);\r\n  return topPops?.map(it => `${it.name}-${it.id}` as DrawerId | DialogId);\r\n}\r\nfunction closePopup(popup: ClosePopupType = 1, destroyed = true): void {\r\n  if (popup === \"all\") {\r\n    closeDialog(popup);\r\n    closeDrawer(popup);\r\n  } else if (typeof popup === \"string\") {\r\n    const isDialog = popup.startsWith(\"dialog\");\r\n    const isId = popup.includes(\"-\");\r\n    if (isDialog) {\r\n      const isAll = popup === \"dialog\";\r\n      const dia = isId ? (popup as CloseDialogType) : isAll ? \"all\" : undefined;\r\n      closeDialog(dia, destroyed);\r\n    } else {\r\n      const isAll = popup === \"drawer\";\r\n      const dra = isId ? (popup as CloseDrawerType) : isAll ? \"all\" : undefined;\r\n      closeDrawer(dra, destroyed);\r\n    }\r\n  } else if (typeof popup === \"number\") {\r\n    const ids = getTopPopupIds(popup);\r\n    ids.forEach((id: DrawerId | DialogId) => closePopup(id));\r\n  } else {\r\n    const isDialog = popup.name === \"dialog\";\r\n    isDialog ? closeDialog(popup) : closeDrawer(popup);\r\n  }\r\n}\r\n\r\n/**\r\n * 获取弹出层栈\r\n */\r\nfunction getPopups(type: PopupType) {\r\n  if (type === \"dialog\") return JSON.parse(JSON.stringify(dialogs));\r\n  if (type === \"drawer\") return JSON.parse(JSON.stringify(drawers));\r\n  return JSON.parse(JSON.stringify({ dialogs, drawers }));\r\n}\r\n\r\n//provide提供给子组件使用\r\nprovide(\"openDrawer\", openDrawer);\r\nprovide(\"closeDrawer\", closeDrawer);\r\nprovide(\"openDialog\", openDialog);\r\nprovide(\"closeDialog\", closeDialog);\r\nprovide(\"openPopup\", openPopup);\r\nprovide(\"closePopup\", closePopup);\r\nprovide(\"getPopups\", getPopups);\r\n</script>\r\n<style lang=\"scss\">\r\n#app {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  overflow: auto;\r\n}\r\n//设置 nprogress 的背景色\r\n#nprogress {\r\n  .bar {\r\n    background: $color-primary !important;\r\n  }\r\n  .peg {\r\n    // box-shadow: 0 0 10px #00000000, 0 0 5px #00000000 !important;\r\n    box-shadow: 0 0 10px #dd181800, 0 0 5px #c2282800 !important;\r\n  }\r\n}\r\n// .driver-popover {}\r\n.guide-popover-card {\r\n  // .driver-popover-arrow {}\r\n  // .driver-popover-title {}\r\n  // .driver-popover-description {}\r\n  .driver-popover-close-btn {\r\n    font-size: 26px;\r\n    line-height: 1;\r\n  }\r\n  //.driver-popover-footer {\r\n  //}\r\n  //.driver-popover-progress-text {\r\n  //}\r\n  //.driver-popover-prev-btn {\r\n  //}\r\n  //.driver-popover-next-btn {\r\n  //  // background: $color-primary;\r\n  //}\r\n}\r\n</style>\r\n","import { RouteRecordRaw } from \"vue-router\";\r\n\r\nexport default [\r\n  {\r\n    path: \"/\",\r\n    name: \"layout\", //父路由不能写name，不然会触发vue警告\r\n    component: () => import(\"@/layout/Index.vue\"),\r\n    children: [\r\n      {\r\n        path: \"\",\r\n        name: \"home\",\r\n        component: () => import(\"@/views/home/index.vue\"),\r\n        meta: {\r\n          title: \"首页\",\r\n          cache: false,\r\n        },\r\n      },\r\n      {\r\n        path: \"inner_link\",\r\n        name: \"innerLink\",\r\n        component: () => import(\"@/views/iframe/index.vue\"),\r\n        meta: {\r\n          title: \"内链页面\",\r\n          cache: false,\r\n          linkType: 1,\r\n        },\r\n      },\r\n      {\r\n        path: \":pathMatch(.*)\",\r\n        name: \"viewNotFound\",\r\n        meta: {\r\n          title: \"404\",\r\n          cache: false,\r\n        },\r\n        component: () => import(\"@/views/error.vue\"),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"login\",\r\n    meta: {\r\n      title: \"登录\",\r\n      auth: false,\r\n    },\r\n    component: () => import(\"@/views/login/index.vue\"),\r\n    // component: () => import(\"@/views/login/index-new.vue\"),  //新版登录页面\r\n  },\r\n  {\r\n    path: \"/:pathMatch(.*)\",\r\n    name: \"pageNotFound\",\r\n    meta: {\r\n      title: \"404\",\r\n      auth: false,\r\n    },\r\n    component: () => import(\"@/views/error.vue\"),\r\n  },\r\n] as Array<RouteRecordRaw>;\r\n","import { createRouter, createWebHistory, createWebHashHistory } from \"vue-router\";\r\nimport { useBaseStore, useKeepAliveStore, useMenuStore, useRouteStore, useUserStore } from \"@/store\";\r\nimport { defaultHomePath, showMessage, storage } from \"@/utils\";\r\nimport routes from \"./routes\";\r\nimport { useNProgress } from \"@/hooks\";\r\n\r\nconst NProgress = useNProgress();\r\nconst { VITE_APP_NAME } = import.meta.env;\r\n\r\nconst router = createRouter({\r\n  // history: createWebHistory(),\r\n  history: createWebHashHistory(),\r\n  routes,\r\n});\r\n// 全局前置守卫\r\nrouter.beforeEach((to: any, from: any, next) => {\r\n  const menuStore = useMenuStore();\r\n  const userStore = useUserStore();\r\n  const routeStore = useRouteStore();\r\n  const baseStore = useBaseStore();\r\n  const { path, query, name, meta } = to;\r\n  const { title, auth = true, linkType } = meta;\r\n  document.title = title ?? VITE_APP_NAME;\r\n  NProgress.start();\r\n  if (!auth) return next();\r\n  if (storage.getItem(\"token\")) {\r\n    // if (userStore.isLogin) {\r\n    if (path === defaultHomePath) menuStore.changeActiveIndex(-1);\r\n    //如果创建好了路由，则直接跳转\r\n    if (routeStore.isCreatedRoute) {\r\n      // 如果已登录状态下，进入登录页会强制跳转到主页\r\n      name === \"login\" ? next({ name: \"home\", replace: true }) : next();\r\n    } else {\r\n      routeStore.createRoutes();\r\n      next({ path, query, replace: true });\r\n    }\r\n  } else {\r\n    userStore.handleLoginOut(false);\r\n    showMessage(`未登录，请先登录！`, \"warning\");\r\n    // 跳转时传递参数到登录页面，以便登录后可以跳转到对应页面\r\n    next({\r\n      path: \"/login?redirect=\" + path,\r\n      replace: true,\r\n    });\r\n  }\r\n});\r\n\r\nrouter.afterEach((to, from) => {\r\n  const keepAliveStore = useKeepAliveStore();\r\n  NProgress.done();\r\n  // 判断当前页面是否开启缓存，如果开启，则将当前页面的 name 信息存入 keep-alive 全局状态\r\n  if (to?.meta?.cache ?? true) {\r\n    const compName = to.matched.at(-1)?.components?.default.name;\r\n    if (compName) return keepAliveStore.add(compName);\r\n    console.warn(\"该页面组件未设置组件名，会导致缓存失效，请检查\");\r\n  }\r\n  // 判断离开页面是否开启缓存，如果开启，则根据缓存规则判断是否需要清空 keep-alive 全局状态里离开页面的 name 信息\r\n  if (from?.meta?.cache ?? true) {\r\n    const compName = from.matched.at(-1)?.components?.default.name;\r\n    if (compName) keepAliveStore.remove(compName);\r\n  }\r\n});\r\n\r\n/**\r\n * @description 路由跳转错误\r\n * */\r\nrouter.onError(error => {\r\n  console.error(\"路由错误\", error.message);\r\n  NProgress.done();\r\n});\r\n\r\nexport default router;\r\n","import { computed, ref, watch } from \"vue\";\r\nimport NProgress from \"nprogress\";\r\nimport \"nprogress/nprogress.css\";\r\n\r\nexport default () => {\r\n  return NProgress.configure({\r\n    easing: \"ease\", // 动画方式\r\n    speed: 500, // 递增进度条的速度\r\n    showSpinner: false, // 是否显示加载ico（位于右上角的加载图标）\r\n    trickleSpeed: 200, // 自动递增间隔\r\n    minimum: 0.3, // 初始化时的最小百分比\r\n  });\r\n};\r\n","/**\r\n * 全局注册基础组件\r\n * @link 参考博客https://blog.csdn.net/weixin_42211816/article/details/119671639\r\n */\r\nimport { defineAsyncComponent } from \"vue\";\r\n//示例 const modules = import.meta.glob(\"../views/**/**.vue\")\r\n// glob（动态导入），globEager（直接引入） \"./**/**/Base*.vue\"(src的根components下所有Base开头命名的文件)  \"./Base*.vue\"（src的根components的根Base开头的文件）\r\nconst comps_1 = import.meta.glob(\"./**/**/Base*/Index.vue\");\r\nconst comps_2 = import.meta.glob(\"./**/**/Base*.vue\");\r\nconst comps = Object.assign(comps_1, comps_2);\r\nexport default function install(app: any) {\r\n  for (const [key, value] of Object.entries(comps)) {\r\n    let name = key.slice(key.lastIndexOf(\"/\") + 1, key.lastIndexOf(\".\"));\r\n    if (name === \"Index\") {\r\n      name = key.slice(2, key.lastIndexOf(\"/\"));\r\n    }\r\n    app.component(name, defineAsyncComponent(value));\r\n  }\r\n}\r\n","/**\r\n * directiveName: {\r\n *   created(el, binding, vnode, prevVnode) {}, // 新增 在元素的 attribute 或事件监听器被应用之前调用。\r\n *   beforeMount() {},  //原vue2 中的 bind\r\n *   mounted() {},   //原vue2 中的  inserted\r\n *   beforeUpdate() {}, // 新增  在元素本身被更新之前调用，与组件的生命周期钩子十分相似。\r\n *   updated() {},  //原vue2 中的 componentUpdated\r\n *   beforeUnmount() {}, // 新增  与组件的生命周期钩子类似，它将在元素被卸载之前调用。\r\n *   unmounted() {}   //原vue2 中的 unbind\r\n * }\r\n */\r\n\r\n/**\r\n * 指令钩子函数会被传入以下参数：\r\n * el：指令所绑定的元素，可以用来直接操作 DOM。\r\n * 一个对象，包含以下 property：\r\n * binding：{\r\n *    name：指令名，不包括 v- 前缀。\r\n *    value：指令的绑定值，例如：v-my-directive=\"1 + 1\" 中，绑定值为 2。\r\n *    oldValue：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。\r\n *    expression：字符串形式的指令表达式。例如 v-my-directive=\"1 + 1\" 中，表达式为 \"1 + 1\"。\r\n *    arg：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 \"foo\"。\r\n *    modifiers：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。\r\n * }\r\n * vnode：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。\r\n * oldVnode：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。\r\n * 注意：除了 el 之外，其它参数都应该是只读的，切勿进行修改。如果需要在钩子之间共享数据，建议通过元素的 dataset 来进行。\r\n */\r\n\r\n/**\r\n * 自定义指令（v-copy、v-longpress、v-debounce、v-emoji、v-Lazy、v-permission、vue-waterMarker、v-draggable）\r\n * 8个常用自定义指令参考博客：https://segmentfault.com/a/1190000038475001\r\n */\r\n\r\nimport { debounce, throttle, copyText, typeOf } from \"@/utils\";\r\ninterface EleType extends HTMLElement {\r\n  parentNode: any;\r\n}\r\nexport default {\r\n  //created() {},\r\n  methods: {},\r\n  directives: {\r\n    /**\r\n     * 获取焦点\r\n     * @example v-focus\r\n     */\r\n    focus: {\r\n      mounted(el: HTMLElement, binding: any, vnode: any, oldVnode: any) {\r\n        const name = el.localName;\r\n        if ([\"input\", \"textarea\"].includes(name)) {\r\n          el.focus();\r\n        } else {\r\n          const inpDom = el.querySelector(\"input\") || el.querySelector(\"textarea\");\r\n          setTimeout(() => {\r\n            inpDom?.focus();\r\n          }, 0);\r\n        }\r\n      },\r\n    },\r\n    /**\r\n     * 一键复制文本\r\n     * @example v-copy=\"text\"\r\n     */\r\n    copy: {\r\n      mounted(el: HTMLElement, binding: any) {\r\n        el.addEventListener(\"click\", () => {\r\n          copyText(binding.value);\r\n        });\r\n      },\r\n    },\r\n    /**\r\n     * 拖拽\r\n     * @example v-drag\r\n     */\r\n    drag: {\r\n      mounted(ele: HTMLElement) {\r\n        ele.style.cursor = \"move\";\r\n        ele.style.position = \"fixed\";\r\n        document.onmousedown = e => {\r\n          let downX = e.x;\r\n          let downY = e.y;\r\n          // let wH = window.innerHeight;\r\n          // let wW = window.innerWidth;\r\n          document.onmousemove = eve => {\r\n            const top = ele.offsetTop + (eve.y - downY);\r\n            // top >= wH - 40 && (top = wH - 40);\r\n            // top <= -20 && (top = -20);\r\n            const left = ele.offsetLeft + (eve.x - downX);\r\n            // left <= -40 && (left = -40);\r\n            // left >= wW - 60 && (left = wW - 60);\r\n            ele.style.left = left + \"px\";\r\n            ele.style.top = top + \"px\";\r\n            downX = eve.x;\r\n            downY = eve.y;\r\n          };\r\n          document.onmouseup = () => {\r\n            document.onmouseup = document.onmousemove = null;\r\n          };\r\n        };\r\n      },\r\n    },\r\n    // drag: {\r\n    //   mounted: function (el: EleType) {\r\n    //     el.style.cursor = \"move\";\r\n    //     el.style.position = \"absolute\";\r\n    //     el.onmousedown = function (e) {\r\n    //       const disX = e.pageX - el.offsetLeft;\r\n    //       const disY = e.pageY - el.offsetTop;\r\n    //       document.onmousemove = function (e) {\r\n    //         let x = e.pageX - disX;\r\n    //         let y = e.pageY - disY;\r\n    //         let maxX = el.parentNode.offsetWidth - el.offsetWidth;\r\n    //         let maxY = el.parentNode.offsetHeight - el.offsetHeight;\r\n    //         if (x < 0) {\r\n    //           x = 0;\r\n    //         } else if (x > maxX) {\r\n    //           x = maxX;\r\n    //         }\r\n\r\n    //         if (y < 0) {\r\n    //           y = 0;\r\n    //         } else if (y > maxY) {\r\n    //           y = maxY;\r\n    //         }\r\n    //         el.style.left = x + \"px\";\r\n    //         el.style.top = y + \"px\";\r\n    //       };\r\n    //       document.onmouseup = function () {\r\n    //         document.onmousemove = document.onmouseup = null;\r\n    //       };\r\n    //     };\r\n    //   },\r\n    // },\r\n    /**\r\n     * 防抖\r\n     * @link 参考博客：https://www.cnblogs.com/coder--wang/p/15505323.html\r\n     * @example v-debounce:click.immediate=\"onSubmit\", 默认click，可省略不写 v-debounce=\"onSubmit\"；v-debounce:scroll.immediate=\"[handleScroll, 500]\"\r\n     */\r\n    debounce: {\r\n      mounted(el: HTMLElement, binding: any) {\r\n        let fn: any;\r\n        let delay = 1000;\r\n        const { value, arg: eventName = \"click\", modifiers = {} } = binding;\r\n        const { immediate = false } = modifiers;\r\n        const type = typeOf(value);\r\n        if (type === \"Function\") {\r\n          fn = value;\r\n        } else if (type === \"Array\") {\r\n          [fn, delay] = value;\r\n        } else {\r\n          throw new Error(\"value必须是Array或Function类型\");\r\n        }\r\n        el.addEventListener(eventName, debounce(fn, immediate, delay as number));\r\n      },\r\n      beforeUnmount(el: HTMLElement, binding: any) {\r\n        const { value: fn, arg: eventName } = binding;\r\n        el.removeEventListener(eventName, fn);\r\n      },\r\n    },\r\n    /**\r\n     * 节流\r\n     * @example v-throttle:click.immediate=\"onSubmit\", 默认click，可省略不写 v-debounce=\"onSubmit\"；v-throttle:scroll.immediate=\"[handleScroll, 500]\"\r\n     */\r\n    throttle: {\r\n      mounted(el: HTMLElement, binding: any) {\r\n        let fn: any;\r\n        let delay = 1000;\r\n        const { value, arg: eventName = \"click\", modifiers = {} } = binding;\r\n        const { immediate = true } = modifiers;\r\n        const type = typeOf(value);\r\n        if (type === \"Function\") {\r\n          fn = value;\r\n        } else if (type === \"Array\") {\r\n          [fn, delay] = value;\r\n        } else {\r\n          throw new Error(\"value必须是Array或Function类型\");\r\n        }\r\n        // const delay = 1000;\r\n        // if (typeof fn !== \"function\") {\r\n        //   throw new Error(\"v-throttle expects a function as its value\");\r\n        // }\r\n        el.addEventListener(eventName, throttle(fn, immediate, delay as number));\r\n      },\r\n      beforeUnmount(el: HTMLElement, binding: any) {\r\n        const { value: fn, arg: eventName } = binding;\r\n        el.removeEventListener(eventName, fn);\r\n      },\r\n    },\r\n    /**\r\n     * 懒加载\r\n     * @link 参考地址：https://segmentfault.com/a/1190000038475001\r\n     * @example v-lazy\r\n     */\r\n    lazy: {\r\n      // beforeMount(el, binding) {\r\n      //   const { value } = binding;\r\n      //   const isInVisiableArea = ele.getBoundingClientRect().top <= window.innerHeight;  //是否在可视区域内\r\n      // },\r\n      beforeMount(el: HTMLElement, binding: any) {\r\n        const { value } = binding;\r\n        el.setAttribute(\"data-src\", el.src);\r\n        el.setAttribute(\"src\", \"\");\r\n        // el.setAttribute('src', require(`@/mock/img/avatar/${item}.jpg`))\r\n      },\r\n      mounted(el: HTMLElement) {\r\n        function load() {\r\n          const windowHeight = document.documentElement.clientHeight;\r\n          const elTop = el.getBoundingClientRect().top;\r\n          const elBtm = el.getBoundingClientRect().bottom;\r\n          const realSrc = el.dataset.src;\r\n          if (elTop - windowHeight < 0 && elBtm > 0) {\r\n            if (realSrc) {\r\n              el.src = realSrc;\r\n              el.removeAttribute(\"data-src\");\r\n            }\r\n          }\r\n        }\r\n        if (IntersectionObserver) {\r\n          const io = new IntersectionObserver(entries => {\r\n            const realSrc = el.dataset.src;\r\n            if (entries[0].isIntersecting) {\r\n              if (realSrc) {\r\n                el.src = realSrc;\r\n                el.removeAttribute(\"data-src\");\r\n              }\r\n            }\r\n          });\r\n          io.observe(el);\r\n        } else {\r\n          load();\r\n          window.addEventListener(\"scroll\", () => {\r\n            throttle(load);\r\n          });\r\n        }\r\n      },\r\n\r\n      // install方法\r\n      // install(Vue, options) {\r\n      //   const defaultSrc = options.default\r\n      //   Vue.directive('lazy', {\r\n      //     beforeMount(el, binding) {\r\n      //       LazyLoad.init(el, binding.value, defaultSrc)\r\n      //     },\r\n      //     mounted(el) {\r\n      //       if (IntersectionObserver) {\r\n      //         LazyLoad.observe(el)\r\n      //       } else {\r\n      //         LazyLoad.listenerScroll(el)\r\n      //       }\r\n      //     },\r\n      //   })\r\n      // },\r\n      // // 初始化\r\n      // init(el, val, def) {\r\n      //   el.setAttribute('data-src', val)\r\n      //   el.setAttribute('src', def)\r\n      // },\r\n      // // 利用IntersectionObserver监听el\r\n      // observe(el) {\r\n      //   var io = new IntersectionObserver((entries) => {\r\n      //     const realSrc = el.dataset.src\r\n      //     if (entries[0].isIntersecting) {\r\n      //       if (realSrc) {\r\n      //         el.src = realSrc\r\n      //         el.removeAttribute('data-src')\r\n      //       }\r\n      //     }\r\n      //   })\r\n      //   io.observe(el)\r\n      // },\r\n      // // 监听scroll事件\r\n      // listenerScroll(el) {\r\n      //   const handler = LazyLoad.throttle(LazyLoad.load, 300)\r\n      //   LazyLoad.load(el)\r\n      //   window.addEventListener('scroll', () => {\r\n      //     handler(el)\r\n      //   })\r\n      // },\r\n      // // 加载真实图片\r\n      // load(el) {\r\n      //   const windowHeight = document.documentElement.clientHeight\r\n      //   const elTop = el.getBoundingClientRect().top\r\n      //   const elBtm = el.getBoundingClientRect().bottom\r\n      //   const realSrc = el.dataset.src\r\n      //   if (elTop - windowHeight < 0 && elBtm > 0) {\r\n      //     if (realSrc) {\r\n      //       el.src = realSrc\r\n      //       el.removeAttribute('data-src')\r\n      //     }\r\n      //   }\r\n      // },\r\n      // // 节流\r\n    },\r\n    /**\r\n     * 权限控制（是否显示该dom节点）\r\n     * @example v-auth=\"[0,1,2]\" 或 v-auth=\"0\"\r\n     * 所有权限类型：数字类型：0, 1, 2, 3 （以后可能用到：字符串类型：\"superAdmin\", \"commonAdmin\", \"editor\"）\r\n     */\r\n    auth: {\r\n      mounted(el: HTMLElement, binding: any) {\r\n        const { value, modifiers } = binding;\r\n        // const { every = false, some = false } = modifiers;\r\n        if (!value) return;\r\n        const valType = typeOf(value);\r\n        const vals = [\"Number\"].includes(valType) ? [value] : value;\r\n        const hasAuth = true;\r\n        // const hasAuth = vals.includes(user.type);\r\n        if (!hasAuth) {\r\n          el.parentNode?.removeChild(el);\r\n        }\r\n      },\r\n    },\r\n    /**\r\n     * 水印\r\n     * @example v-watermark=\"{text:'水印文字',font: '', textColor: '#ccc',width: 200, height: 150}\"\r\n     * @link 如果需要防伪功能（不允许用户在控制台删除元素或更改样式），则需要用到MutationObserver。参考地址：https://segmentfault.com/a/1190000041408450\r\n     */\r\n    watermark: {\r\n      beforeMount(el: HTMLElement, binding: any) {\r\n        const { value = {} } = binding;\r\n        const degree = Math.PI / 180;\r\n        const set: any = {\r\n          text: \"水印文字\",\r\n          font: \"16px Microsoft JhengHei\",\r\n          textColor: \"#ddd\",\r\n          width: 200,\r\n          height: 150,\r\n        };\r\n        for (const key in value) {\r\n          set[key] = value[key];\r\n        }\r\n        const { text, font, textColor } = set;\r\n        const canvas = document.createElement(\"canvas\");\r\n        canvas.width = set.width;\r\n        canvas.height = set.height;\r\n        canvas.style.display = \"none\";\r\n        el.appendChild(canvas);\r\n        const pen: any = canvas.getContext(\"2d\");\r\n        pen.rotate(-30 * degree);\r\n        pen.font = font;\r\n        pen.fillStyle = textColor;\r\n        pen.textAlign = \"left\";\r\n        pen.textBaseline = \"Middle\";\r\n        pen.fillText(text, set.width / 10, set.height / 2);\r\n        el.style.backgroundImage = \"url(\" + canvas.toDataURL(\"image/png\") + \")\";\r\n      },\r\n    },\r\n    /**\r\n     * 加载动效遮罩（element-ui自带）\r\n     * @example v-loading=\"true\"\r\n     */\r\n    // loading: {\r\n    //   beforeMount(el, binding) {\r\n    //     const { value: show } = binding;\r\n    //     const mask = document.createElement('div');\r\n    //     const load = document.createElement(\"div\");\r\n    //     el.style.position = 'relative';\r\n    //     mask.style.cssText = `\r\n    //       display: ${show ? 'flex' : 'none'};\r\n    //       justify-content: center;\r\n    //       align-items: center;\r\n    //       position: absolute;\r\n    //       left:0;\r\n    //       top:0;\r\n    //       height: 100%;\r\n    //       width: 100%;\r\n    //       background: rgba(0,0,0,.5);\r\n    //     `\r\n    //     load.classList = \"f-c-c-c color-theme\";\r\n    //     load.innerHTML = `\r\n    //       <i class=\"el-icon-loading\" style=\"font-size: 30px;margin-bottom: 8px;\"></i>\r\n    //       <span>玩命加载中……</span>\r\n    //     `\r\n    //     mask.appendChild(load);\r\n    //     el.appendChild(mask);\r\n    //   },\r\n    //   componentUpdated(el, { value: show }) {\r\n    //     el.lastChild.style.display = show ? 'flex' : \"none\";\r\n    //   },\r\n    // },\r\n    // 限制 input 只能输入数字或小数\r\n    number: {\r\n      mounted(el: HTMLElement) {\r\n        el.oninput = (event: any) => {\r\n          event.target.value = event.target.value.replace(/[^\\d.]/g, \"\");\r\n        };\r\n      },\r\n    },\r\n    // //只允许输入数字\r\n    // number: {\r\n    //   mounted(el: HTMLElement) {\r\n    //     el.addEventListener(\"keydown\", (event) => {\r\n    //       if (\r\n    //         ![8, 9, 37, 39, 46].includes(event.keyCode) &&\r\n    //         !/[0-9]/.test(event.key)\r\n    //       ) {\r\n    //         event.preventDefault();\r\n    //       }\r\n    //     });\r\n    //   },\r\n    // },\r\n  },\r\n};\r\n","export default {\r\n  button: {\r\n    add: \"新增\",\r\n    edit: \"编辑\",\r\n    delete: \"删除\",\r\n    pass: \"通过\",\r\n    repeal: \"撤销\",\r\n    import: \"导入\",\r\n    export: \"导出\",\r\n    upload: \"上传\",\r\n    download: \"下载\",\r\n    enable: \"启用\",\r\n    forbid: \"禁用\",\r\n    audit: \"审核\",\r\n    detail: \"详情\",\r\n    submit: \"提交\",\r\n    log: \"日志\",\r\n    reject: \"驳回\",\r\n    search: \"搜索\",\r\n    reset: \"重置\",\r\n    fold: \"折叠\",\r\n    unfold: \"展开\",\r\n  },\r\n  switch: {\r\n    show: {\r\n      active: \"显示\",\r\n      inactive: \"隐藏\",\r\n    },\r\n    enable: {\r\n      active: \"启用\",\r\n      inactive: \"禁用\",\r\n    },\r\n  },\r\n};\r\n","import base from \"./base\";\r\nimport layoutLangs from \"@/layout/_langs/zh\";\r\n\r\nexport default {\r\n  base,\r\n  ...layoutLangs,\r\n};\r\n","import layout from \"./layout\";\r\nimport sysSet from \"./sys-set\";\r\n\r\nexport default {\r\n  layout,\r\n  sysSet,\r\n};\r\n","export default {\r\n  // 首页\r\n  home: {\r\n    welcome: \"欢迎\",\r\n  },\r\n  // 头部\r\n  header: {\r\n    // 快捷入口的图标\r\n    entryIcons: {\r\n      searchMenu: \"搜索菜单\",\r\n      notification: \"消息通知\",\r\n      showFullScreen: \"全屏展示\",\r\n      hideScreenShow: \"取消全屏\",\r\n    },\r\n    // 用户头像处的下拉菜单\r\n    dropdown: {\r\n      myInfo: \"个人资料\",\r\n      refreshSys: \"刷新系统\",\r\n      sysSet: \"系统设置\",\r\n      aboutSys: \"关于系统\",\r\n      logout: \"退出登录\",\r\n    },\r\n  },\r\n  // 页签\r\n  pageTags: {\r\n    home: \"首页\",\r\n    close: \"关闭\",\r\n    closeOther: \"关闭其他\",\r\n    closeToRight: \"关闭到右侧\",\r\n    closeToLeft: \"关闭到左侧\",\r\n    closeAll: \"全部关闭\",\r\n    copyPath: \"复制路径\",\r\n    copyFullPath: \"复制完整路径\",\r\n    refresh: \"刷新\",\r\n  },\r\n};\r\n","export default {\r\n  title: \"系统设置\",\r\n  appearance: {\r\n    title: \"外观设置\",\r\n    layoutStyle: {\r\n      label: \"布局风格\",\r\n      options: {\r\n        columns: \"分栏\",\r\n        classics: \"经典\",\r\n        vertical: \"纵向\",\r\n        horizontal: \"横向\",\r\n      },\r\n    },\r\n    widgetSize: {\r\n      label: \"控件大小\",\r\n      options: {\r\n        large: \"大型\",\r\n        medium: \"中等\",\r\n        small: \"小型\",\r\n        mini: \"迷你\",\r\n      },\r\n    },\r\n    langType: {\r\n      label: \"语言类型\",\r\n      options: {\r\n        zh: \"简体中文\",\r\n        en: \"英文\",\r\n      },\r\n    },\r\n    breadcrumb: {\r\n      label: \"面包屑\",\r\n      icon: \"图标\",\r\n    },\r\n    pageTag: {\r\n      label: \"页签栏\",\r\n      icon: \"图标\",\r\n    },\r\n    footer: {\r\n      label: \"页脚\",\r\n      popover: \"页面底部的专利许可\",\r\n    },\r\n  },\r\n  theme: {\r\n    title: \"主题设置\",\r\n    themeColor: {\r\n      label: \"主题颜色\",\r\n    },\r\n    darkMode: {\r\n      label: \"暗黑模式\",\r\n    },\r\n  },\r\n  menu: {\r\n    title: \"菜单设置\",\r\n    accordion: {\r\n      label: \"手风琴\",\r\n      popover: \"启用后，只保持一个子菜单的展开\",\r\n    },\r\n  },\r\n  reset: \"恢复默认设置\",\r\n};\r\n","import base from \"./base\";\r\nimport layoutLangs from \"@/layout/_langs/en\";\r\n\r\nexport default {\r\n  base,\r\n  ...layoutLangs,\r\n};\r\n","export default {\r\n  button: {\r\n    add: \"Add\",\r\n    edit: \"Edit\",\r\n    delete: \"Delete\",\r\n    pass: \"Pass\",\r\n    repeal: \"Repeal\",\r\n    import: \"Import\",\r\n    export: \"Export\",\r\n    upload: \"Upload\",\r\n    download: \"Download\",\r\n    enable: \"Enable\",\r\n    forbid: \"Forbid\",\r\n    audit: \"Audit\",\r\n    detail: \"Detail\",\r\n    submit: \"Submit\",\r\n    log: \"Log\",\r\n    reject: \"Reject\",\r\n    search: \"Search\",\r\n    reset: \"Reset\",\r\n    fold: \"Fold\",\r\n    unfold: \"Expand\",\r\n  },\r\n  switch: {\r\n    show: {\r\n      active: \"Show\",\r\n      inactive: \"Hide\",\r\n    },\r\n    enable: {\r\n      active: \"Enable\",\r\n      inactive: \"Forbid\",\r\n    },\r\n  },\r\n};\r\n","import layout from \"./layout\";\r\nimport sysSet from \"./sys-set\";\r\n\r\nexport default {\r\n  layout,\r\n  sysSet,\r\n};\r\n","export default {\r\n  // 首页\r\n  home: {\r\n    welcome: \"Welcome\",\r\n  },\r\n  // 头部\r\n  header: {\r\n    // 快捷入口的图标\r\n    entryIcons: {\r\n      searchMenu: \"Search Menu\",\r\n      notification: \"Notification\",\r\n      showFullScreen: \"Show Full Screen\",\r\n      hideScreenShow: \"Hide Full Screen\",\r\n    },\r\n    // 用户头像处的下拉菜单\r\n    dropdown: {\r\n      myInfo: \"My Information\",\r\n      refreshSys: \"Refresh System\",\r\n      sysSet: \"System Setting\",\r\n      aboutSys: \"About System\",\r\n      logout: \"Logout\",\r\n    },\r\n  },\r\n  // 页签\r\n  pageTags: {\r\n    home: \"Home\",\r\n    close: \"Close\",\r\n    closeOther: \"Close Other\",\r\n    closeToRight: \"Close To Right\",\r\n    closeToLeft: \"Close To Left\",\r\n    closeAll: \"Close All\",\r\n    copyPath: \"Copy Path\",\r\n    copyFullPath: \"Copy Full Path\",\r\n    refresh: \"Refresh\",\r\n  },\r\n};\r\n","export default {\r\n  title: \"System Setting\",\r\n  appearance: {\r\n    title: \"Appearance Setting\",\r\n    layoutStyle: {\r\n      label: \"Layout Style\",\r\n      options: {\r\n        columns: \"Columns\",\r\n        classics: \"Classics\",\r\n        vertical: \"Vertical\",\r\n        horizontal: \"Horizontal\",\r\n      },\r\n    },\r\n    widgetSize: {\r\n      label: \"Widget Size\",\r\n      options: {\r\n        large: \"Large\",\r\n        medium: \"Medium\",\r\n        small: \"Small\",\r\n        mini: \"Mini\",\r\n      },\r\n    },\r\n    langType: {\r\n      label: \"Language Type\",\r\n      options: {\r\n        zh: \"Simple Chinese\",\r\n        en: \"English\",\r\n      },\r\n    },\r\n    breadcrumb: {\r\n      label: \"Breadcrumb\",\r\n      icon: \"Icon\",\r\n    },\r\n    pageTag: {\r\n      label: \"Page Tag\",\r\n      icon: \"Icon\",\r\n    },\r\n    footer: {\r\n      label: \"Footer\",\r\n      popover: \"The bottom footer\",\r\n    },\r\n  },\r\n  theme: {\r\n    title: \"Theme Setting\",\r\n    themeColor: {\r\n      label: \"Theme Color\",\r\n    },\r\n    darkMode: {\r\n      label: \"Dark Mode\",\r\n    },\r\n  },\r\n  menu: {\r\n    title: \"Menu Setting\",\r\n    accordion: {\r\n      label: \"Accordion\",\r\n      popover: \"After used, only keep one submenu is expand\",\r\n    },\r\n  },\r\n  reset: \"Restore default Settings\",\r\n};\r\n","import { createI18n } from \"vue-i18n\";\r\nimport { getBrowserLang } from \"@/utils\";\r\n\r\nimport zh from \"./zh\";\r\nimport en from \"./en\";\r\n\r\nexport default createI18n({\r\n  // Use Composition API, Set to false\r\n  allowComposition: true,\r\n  legacy: false,\r\n  locale: getBrowserLang(),\r\n  messages: {\r\n    zh,\r\n    en,\r\n  },\r\n});\r\n","//  mockProdServer.ts\r\nimport { createProdMockServer } from \"vite-plugin-mock/es/createProdMockServer\";\r\n\r\n// 逐一导入您的mock.js文件\r\n// 如果使用vite.mock.config.js，只需直接导入文件\r\n// 可以使用 import.meta.glob功能来进行全部导入\r\nimport apis from \"../mock/apis\";\r\nexport function setupProdMockServer() {\r\n  createProdMockServer(apis);\r\n}\r\n\r\n// import Mock from \"mockjs\";\r\n// const mockServer = (data: any) => {\r\n//   Object.keys(data).forEach((path) => {\r\n//     Mock.mock(\r\n//       new RegExp(`^${process.env.VITE_API_BASE_URL}${path}`),\r\n//       data[path]\r\n//     );\r\n//   });\r\n// };\r\n// mockServer(apis);\r\n","import { createApp } from \"vue\";\r\nimport App from \"./App.vue\";\r\nimport router from \"@/router\";\r\nimport ElementPlus from \"element-plus\";\r\nimport components from \"@/components\";\r\nimport pinia from \"./store\";\r\nimport zhCn from \"element-plus/dist/locale/zh-cn.mjs\";\r\nimport mixin from \"@/services/mixin\";\r\nimport { setupProdMockServer } from \"./mockProdServer\";\r\nimport I18n from \"@/languages\";\r\nimport { handleError } from \"@/utils\";\r\n\r\nimport \"@/assets/styles/font.scss\";\r\nimport \"@/assets/styles/base.scss\";\r\nimport \"@/assets/styles/element.scss\";\r\nimport \"@/assets/styles/rewrite.scss\";\r\n\r\n//为了少写字符，提升开发效率\r\n// window.log = console.log;\r\n// window.error = console.error;\r\n// window.dir = console.dir;\r\nsetupProdMockServer();\r\nconst app = createApp(App);\r\napp.config.errorHandler = handleError;\r\n// app.provide(\"global\", {\r\n//   userInfo: null,\r\n// });\r\napp.mixin(mixin);\r\napp.use(ElementPlus, {\r\n  locale: zhCn,\r\n});\r\napp.use(components); //全局注册基础组件\r\napp.use(I18n);\r\napp.use(pinia);\r\napp.use(router);\r\napp.mount(\"#app\");\r\n"],"file":"assets/js/index-81ccac54.js"}