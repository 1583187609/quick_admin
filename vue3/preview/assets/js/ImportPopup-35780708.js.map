{"version":3,"file":"ImportPopup-35780708.js","sources":["../../../src/components/BaseCrud/_components/ImportPopup.vue"],"sourcesContent":["<!-- 组件 - 导入弹出层 -->\r\n<template>\r\n  <div class=\"template-hint\">\r\n    <div class=\"tips\">{{ tips }}</div>\r\n    <div class=\"f-sa-c\">\r\n      <el-button @click=\"handleDownloadTpl\" type=\"primary\" plain>下载模板</el-button>\r\n      <el-upload :on-change=\"handleFileChange\" :auto-upload=\"false\" :show-file-list=\"false\" :accept=\"accept\">\r\n        <el-button type=\"primary\">直接导入</el-button>\r\n      </el-upload>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, watch, computed, inject } from \"vue\";\r\nimport { CommonObj, FinallyNext, StrNum } from \"@/vite-env\";\r\nimport { importExcel, exportExcel, showMessage } from \"@/components/_utils\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"ImportPopup\" }); \n\r\nexport interface ImportTplColsItem {\r\n  prop: string;\r\n  label: string;\r\n}\r\nexport interface TplCfgAttrs {\r\n  name?: string; //\"XXX模板示例\"\r\n  cols?: ImportTplColsItem[]; // [{ prop: \"userName\", label: \"用户姓名\" },{ prop: \"phone\", label: \"电话号码\" },{ prop: \"labelName\", label: \"标签名称\" }]\r\n}\r\nconst defaultTplCfg: TplCfgAttrs = {\r\n  name: \"XXX模板示例\", //用户权限导入模板\r\n  cols: [], // [{ prop: \"userName\", label: \"用户姓名\" },{ prop: \"phone\", label: \"电话号码\" },{ prop: \"labelName\", label: \"标签名称\" }]\r\n};\r\nconst closePopup = inject<any>(\"closePopup\");\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    tips?: string;\r\n    tplCfg?: TplCfgAttrs;\r\n    accept?: string;\r\n  }>(),\r\n  {\r\n    tips: \"如果没有模板，请先下载模板\",\r\n    accept: \".xls,.xlsx\",\r\n  }\r\n);\r\nconst emits = defineEmits([\"change\"]);\r\n//下载模板\r\nfunction handleDownloadTpl() {\r\n  const { name, cols = [] } = Object.assign({}, defaultTplCfg, props.tplCfg);\r\n  exportExcel([cols.map((it: ImportTplColsItem) => it.label)], name, undefined, () => {\r\n    showMessage(\"已下载，请查看！\");\r\n    closePopup();\r\n  });\r\n}\r\nfunction handleFileChange(file: any, files: any[]) {\r\n  const { cols } = Object.assign({}, defaultTplCfg, props.tplCfg);\r\n  const reader = new FileReader();\r\n  reader.readAsArrayBuffer(file.raw);\r\n  reader.onloadend = function (e) {\r\n    const buffer = e.target?.result; //此时是arraybuffer类型\r\n    const excelArr: CommonObj[] = importExcel(buffer);\r\n    const arr = excelArr.map((obj: CommonObj) => {\r\n      const newObj: CommonObj = {};\r\n      for (const key in obj) {\r\n        const k = cols?.find((it: ImportTplColsItem) => it.label === key)?.prop as string;\r\n        newObj[k] = obj[key];\r\n      }\r\n      return newObj;\r\n    });\r\n    emits(\"change\", arr);\r\n  };\r\n}\r\n</script>\r\n<style lang=\"scss\" name=\"\" scoped>\r\n.template-hint {\r\n  width: 250px;\r\n  text-align: center;\r\n  .tips {\r\n    margin-bottom: $gap;\r\n  }\r\n}\r\n</style>\r\n"],"names":["defaultTplCfg","name","cols","closePopup","inject","props","__props","emits","__emit","handleDownloadTpl","Object","assign","tplCfg","exportExcel","map","it","label","showMessage","handleFileChange","file","files","reader","FileReader","readAsArrayBuffer","raw","onloadend","e","buffer","_a","target","result","arr","importExcel","obj","newObj","key","find","prop"],"mappings":"6nDA2BA,MAAMA,EAA6B,CACjCC,KAAM,UACNC,KAAM,IAEFC,EAAaC,EAAY,cACzBC,EAAQC,EAWRC,EAAQC,EAEd,SAASC,IACP,MAAMR,KAAEA,EAAAC,KAAMA,EAAO,IAAOQ,OAAOC,OAAO,GAAIX,EAAeK,EAAMO,QACvDC,EAAA,CAACX,EAAKY,KAAKC,GAA0BA,EAAGC,SAASf,OAAM,GAAW,KAC5EgB,EAAY,kBAGhB,CACS,SAAAC,EAAiBC,EAAWC,GAC7B,MAAAlB,KAAEA,GAASQ,OAAOC,OAAO,CAAA,EAAIX,EAAeK,EAAMO,QAClDS,EAAS,IAAIC,WACZD,EAAAE,kBAAkBJ,EAAKK,KACvBH,EAAAI,UAAY,SAAUC,SACrB,MAAAC,EAAS,OAAAC,EAAEF,EAAAG,aAAQ,EAAAD,EAAAE,OAEnBC,EADwBC,EAAYL,GACrBb,KAAKmB,UACxB,MAAMC,EAAoB,CAAA,EAC1B,IAAA,MAAWC,KAAOF,EAAK,CAEdC,EADG,OAAAN,EAAA,MAAA1B,OAAA,EAAAA,EAAMkC,MAAMrB,GAA0BA,EAAGC,QAAUmB,UAAnD,EAAAP,EAAyDS,MACvDJ,EAAIE,EAClB,CACO,OAAAD,CAAA,IAET3B,EAAM,SAAUwB,EAAG,CAEvB"}