{"version":3,"file":"Index-7b9d62c8.js","sources":["../../../src/components/BaseCrud/_components/QueryForm/Index.vue"],"sourcesContent":["<template>\r\n  <el-form\r\n    class=\"query-form\"\r\n    :class=\"{ compact, small: isSmall }\"\r\n    :model=\"formData\"\r\n    v-bind=\"defaultFormAttrs\"\r\n    @keyup.enter=\"handleSubmit\"\r\n    ref=\"formRef\"\r\n    v-if=\"!noFieldsHide || newFields.length || newSections.length\"\r\n  >\r\n    <div class=\"all-hide-scroll wrap-box\" :style=\"{ maxHeight: getMaxHeight() }\" v-if=\"newSections.length\">\r\n      <div class=\"f-fs-fs\" v-for=\"(sItem, sInd) in newSections.slice(0, isFold ? rowNum : undefined)\" :key=\"sInd\">\r\n        <div class=\"sec-label f-0\">{{ sItem.label }}</div>\r\n        <div class=\"sec-fields f-fs-fs-w f-1\">\r\n          <QueryFields\r\n            v-model=\"formData\"\r\n            :field=\"field\"\r\n            :className=\"isSmall ? 'mb-qtr' : 'mb-half'\"\r\n            :inputDebounce=\"inputDebounce\"\r\n            :size=\"$attrs.size\"\r\n            @change=\"(key:string, val:any)=>emits('change', {[key]: val})\"\r\n            v-bind=\"getColAttrs(field)\"\r\n            v-for=\"(field, ind) in sItem.fields.slice(0, sliceInd?.(sInd))\"\r\n            :key=\"ind\"\r\n          >\r\n            <template #custom=\"{ field: currField }\">\r\n              <slot name=\"custom\" :field=\"currField\" :form=\"formData\"></slot>\r\n            </template>\r\n          </QueryFields>\r\n          <QueryBtns\r\n            :class=\"[isSmall ? 'mb-qtr' : 'mb-half']\"\r\n            :small=\"isSmall\"\r\n            :compact=\"compact\"\r\n            :loading=\"loading\"\r\n            :isFold=\"isFold\"\r\n            :showFoldBtn=\"showFoldBtn\"\r\n            @submit=\"handleSubmit\"\r\n            @fold=\"isFold = !isFold\"\r\n            @reset=\"resetForm\"\r\n            v-bind=\"colSpanAttrs\"\r\n            v-if=\"\r\n              newSections.length <= rowNum\r\n                ? sInd === newSections.length - 1\r\n                : isFold\r\n                ? sInd === rowNum - 1\r\n                : sInd === newSections.length - 1\r\n            \"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"f-fs-fs-w wrap-box all-hide-scroll\" :style=\"{ maxHeight: getMaxHeight() }\" v-else>\r\n      <QueryFields\r\n        v-model=\"formData\"\r\n        :field=\"field\"\r\n        :className=\"isSmall ? 'mb-qtr' : 'mb-half'\"\r\n        :inputDebounce=\"inputDebounce\"\r\n        :size=\"$attrs.size\"\r\n        @change=\"(key:string, val:any)=>emits('change', {[key]: val})\"\r\n        v-bind=\"getColAttrs(field)\"\r\n        v-for=\"(field, ind) in newFields.slice(0, sliceInd)\"\r\n        :key=\"ind\"\r\n      >\r\n        <template #custom=\"{ field: currField }\">\r\n          <slot name=\"custom\" :field=\"currField\" :form=\"formData\"></slot>\r\n        </template>\r\n      </QueryFields>\r\n      <QueryBtns\r\n        :class=\"[isSmall ? 'mb-qtr' : 'mb-half']\"\r\n        :small=\"isSmall\"\r\n        :compact=\"compact\"\r\n        :loading=\"loading\"\r\n        :isFold=\"isFold\"\r\n        :showFoldBtn=\"showFoldBtn\"\r\n        @submit=\"handleSubmit\"\r\n        @fold=\"isFold = !isFold\"\r\n        @reset=\"resetForm\"\r\n        v-bind=\"colSpanAttrs\"\r\n      />\r\n    </div>\r\n  </el-form>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, inject, computed, watch, useAttrs } from \"vue\";\r\nimport { FormInstance } from \"element-plus\";\r\nimport { getScreenSizeType, showMessage } from \"@/components/_utils\";\r\nimport { FormField, FormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport { merge } from \"lodash\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport QueryFields from \"./_components/QueryFields.vue\";\r\nimport QueryBtns from \"./_components/QueryBtns.vue\";\r\nimport config from \"@/config\";\r\nimport { useEvent } from \"@/hooks\";\r\nimport { handleFields } from \"@/components/form/_utils\";\r\nimport { ColSpanAttrs, SectionFieldsItemAttrs, defaultFormAttrs } from \"@/components/form\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"QueryForm\" }); \n\r\n\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    modelValue?: CommonObj; //表单数据\r\n    fields: FormField[]; //表单字段项\r\n    sections?: SectionFieldsItemAttrs[];\r\n    loading?: boolean;\r\n    rowNum?: number;\r\n    extraParams?: CommonObj; //额外的参数\r\n    inputDebounce?: boolean;\r\n    colSpanAttrs?: ColSpanAttrs;\r\n    compact?: boolean; //是否是紧凑的\r\n    noFieldsHide?: boolean; //没有字段时是否不显示表单内容\r\n  }>(),\r\n  Object.assign(\r\n    {\r\n      rowNum: 2,\r\n      fields: () => [],\r\n      modelValue: () => reactive({}),\r\n      noFieldsHide: true,\r\n    },\r\n    config?.BaseCrud?._components?.QueryForm\r\n  )\r\n);\r\nconst emits = defineEmits([\"update:modelValue\", \"search\", \"change\", \"reset\"]);\r\nlet isFirst = true;\r\nconst $attrs = useAttrs();\r\nconst formRef = ref<FormInstance>();\r\nconst colNum = ref(2);\r\nconst isFold = ref(true);\r\nconst newFields = ref<FormFieldAttrs[]>([]);\r\nconst newSections = ref<SectionFieldsItemAttrs[]>([]);\r\nconst isSmall = $attrs.size === \"small\";\r\n//折叠或展开时，要截取的fields的长度的第二个参数的下标\r\nconst sliceInd = computed((): any => {\r\n  if (!isFold.value) return;\r\n  const { sections, rowNum } = props;\r\n  if (sections) {\r\n    return (rowInd: number) => {\r\n      const newSecLen = newSections.value.length;\r\n      const isLast = rowInd === newSecLen - 1;\r\n      return newSecLen <= rowNum\r\n        ? colNum.value > 1\r\n          ? colNum.value - (isLast ? 1 : 0)\r\n          : 1\r\n        : colNum.value - (rowInd === rowNum - 1 ? 1 : 0);\r\n    };\r\n  } else {\r\n    return colNum.value > 1 ? colNum.value * rowNum - 1 : 1 * rowNum;\r\n  }\r\n});\r\n//是否展示折叠按钮\r\nconst showFoldBtn = computed(() => {\r\n  const { sections, rowNum } = props;\r\n  if (sections) {\r\n    const numArr = newSections.value.map((item: SectionFieldsItemAttrs, ind: number) => {\r\n      const isLast = ind === newSections.value.length - 1;\r\n      return item.fields.length <= colNum.value - (isLast ? 1 : 0) ? 1 : 2;\r\n    });\r\n    let total = 0;\r\n    for (let i = 0; i < numArr.length; i++) {\r\n      total += numArr[i];\r\n      if (total > rowNum) return true;\r\n    }\r\n    return false;\r\n  } else {\r\n    return newFields.value.length > colNum.value * rowNum - 1;\r\n  }\r\n});\r\nconst formData = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(val: CommonObj) {\r\n    emits(\"update:modelValue\", val);\r\n  },\r\n});\r\n// watch fields 和 watch sections 只能两者选其一执行\r\nwatch(\r\n  () => props.fields,\r\n  (newVal: FormField[]) => {\r\n    if (props.sections?.length) return;\r\n    const { modelValue } = props;\r\n    const result = handleFields(newVal, undefined, modelValue);\r\n    const { data, fields } = result;\r\n    newFields.value = fields;\r\n    merge(formData.value, data);\r\n    emits(\"change\", formData.value, isFirst ? !!modelValue : false);\r\n    isFirst = false;\r\n  },\r\n  { immediate: true, deep: true, once: !!props?.sections?.length }\r\n);\r\nwatch(\r\n  () => props.sections,\r\n  (newVal: SectionFieldsItemAttrs[]) => {\r\n    if (!newVal) return;\r\n    const { modelValue } = props;\r\n    newSections.value =\r\n      newVal?.map((item: SectionFieldsItemAttrs) => {\r\n        const { label, fields: secFields } = item;\r\n        const result = handleFields(secFields, undefined, modelValue);\r\n        const { data, fields } = result;\r\n        item.fields = fields;\r\n        merge(formData.value, data);\r\n        return item;\r\n      }) ?? [];\r\n    emits(\"change\", formData.value, isFirst ? !!modelValue : false);\r\n    isFirst = false;\r\n  },\r\n  { immediate: true, deep: true, once: !props.sections }\r\n);\r\nuseEvent(\"resize\", () => (colNum.value = getColNum()), true);\r\nfunction getMaxHeight() {\r\n  if (!isFold.value) return \"35vh\";\r\n  const rows = colNum.value > 1 ? props.rowNum : props.rowNum + 1;\r\n  return rows * (isSmall ? 28 : 40) + \"px\";\r\n}\r\n//设置屏幕宽度类型\r\nfunction getColNum() {\r\n  const { colSpanAttrs } = props;\r\n  const colNumMap: CommonObj = {};\r\n  const size = getScreenSizeType();\r\n  for (const key in colSpanAttrs) {\r\n    colNumMap[key] = 24 / colSpanAttrs[key];\r\n  }\r\n  return colNumMap[size];\r\n}\r\n//获取列属性\r\nfunction getColAttrs(field: FormFieldAttrs) {\r\n  const { colSpanAttrs } = props;\r\n  const { span, type } = field;\r\n  if (span) return { span };\r\n  return colSpanAttrs;\r\n}\r\n//提交表单\r\nfunction handleSubmit() {\r\n  const formInst = formRef.value;\r\n  if (!formInst) return;\r\n  //fieldsObj: ValidateFieldsError\r\n  formInst.validate((valid, fieldsObj) => {\r\n    if (valid) {\r\n      const { extraParams } = props;\r\n      emits(\"search\", merge({}, extraParams, formData.value));\r\n    } else {\r\n      const target = Object.values(fieldsObj)[0][0];\r\n      showMessage(target.message, \"error\");\r\n    }\r\n  });\r\n}\r\n//重置表单\r\nfunction resetForm() {\r\n  formRef.value?.resetFields();\r\n  emits(\"reset\");\r\n}\r\ndefineExpose({\r\n  formRef,\r\n  getFields() {\r\n    if (!props.sections?.length) return newFields.value;\r\n    return newSections.value.map((item: SectionFieldsItemAttrs) => item.fields).flat(1);\r\n  },\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.query-form {\r\n  padding: $gap-half $gap-half 0 0;\r\n  border-radius: $radius-main;\r\n  background: #fff;\r\n  @include shadow-main();\r\n  //是否是紧凑型\r\n  &.compact {\r\n    :deep(.el-form-item__label) {\r\n      padding: 0 $gap-qtr 0 0;\r\n    }\r\n  }\r\n  //是否是小型\r\n  &.small {\r\n    padding: $gap-qtr $gap-qtr 0 0;\r\n    :deep(.el-form-item__label) {\r\n      padding: 0 2px 0 0;\r\n    }\r\n    //去掉日期组件前面的图标\r\n    :deep(.el-date-editor .el-range__icon) {\r\n      display: none;\r\n    }\r\n    //elementPlus中没有提供对应的scss变量，故在此处写死\r\n    :deep(.el-range-editor.el-input__wrapper) {\r\n      padding: 0 $gap-qtr;\r\n    }\r\n    .sec-label {\r\n      padding: $gap-qtr;\r\n    }\r\n  }\r\n}\r\n.mb-half {\r\n  margin-bottom: $gap-half;\r\n}\r\n.mb-qtr {\r\n  margin-bottom: $gap-qtr;\r\n}\r\n.wrap-box {\r\n  overflow: auto;\r\n  transition: max-height $transition-time-main;\r\n  overscroll-behavior: auto;\r\n}\r\n.sec-label {\r\n  padding: $gap-half;\r\n  font-weight: 900;\r\n  font-size: $font-size-lighter;\r\n}\r\n.icon-fold {\r\n  transition: transform $transition-time-main;\r\n}\r\n</style>\r\n"],"names":["props","__props","emits","__emit","isFirst","$attrs","useAttrs","formRef","ref","colNum","isFold","newFields","newSections","isSmall","size","sliceInd","computed","value","sections","rowNum","rowInd","newSecLen","length","isLast","showFoldBtn","numArr","map","item","ind","fields","total","i","formData","get","modelValue","set","val","getMaxHeight","getColAttrs","field","colSpanAttrs","span","type","handleSubmit","formInst","validate","valid","fieldsObj","extraParams","merge","target","Object","values","showMessage","message","resetForm","_a","resetFields","watch","newVal","result","handleFields","data","immediate","deep","once","label","secFields","useEvent","colNumMap","getScreenSizeType","key","getColNum","__expose","getFields","flat"],"mappings":"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"}