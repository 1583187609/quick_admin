{"version":3,"file":"Index-214b4f44.js","sources":["../../../src/components/BaseFormItem/_config.ts","../../../src/components/BaseFormItem/Index.vue"],"sourcesContent":["import { CommonObj, OptionItem, StrNum } from \"@/vite-env\";\r\nimport { FormFieldAttrs } from \"@/components/BaseFormItem/index\";\r\nimport { getExportData, rangeJoinChar, regexp } from \"@/components/_utils\";\r\nimport config from \"@/config\";\r\n\r\nconst formCfg = config?.form;\r\n\r\n//日期快捷方式\r\nexport const defaultDateShortcuts = getExportData(\r\n  [\r\n    {\r\n      text: \"今天\",\r\n      value: new Date(),\r\n    },\r\n    {\r\n      text: \"昨天\",\r\n      value: () => {\r\n        const date = new Date();\r\n        date.setTime(date.getTime() - 3600 * 1000 * 24);\r\n        return date;\r\n      },\r\n    },\r\n    {\r\n      text: \"一周内\",\r\n      value: () => {\r\n        const date = new Date();\r\n        date.setTime(date.getTime() - 3600 * 1000 * 24 * 7);\r\n        return date;\r\n      },\r\n    },\r\n  ],\r\n  formCfg?.defaultDateShortcuts,\r\n  \"alert\"\r\n);\r\n\r\n//日期区间快捷方式\r\nexport const defaultDateRangeShortcuts = getExportData(\r\n  [\r\n    {\r\n      text: \"近一周\",\r\n      value: () => {\r\n        const end = new Date();\r\n        const start = new Date();\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n        return [start, end];\r\n      },\r\n    },\r\n    {\r\n      text: \"近一个月\",\r\n      value: () => {\r\n        const end = new Date();\r\n        const start = new Date();\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n        return [start, end];\r\n      },\r\n    },\r\n    {\r\n      text: \"近三个月\",\r\n      value: () => {\r\n        const end = new Date();\r\n        const start = new Date();\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n        return [start, end];\r\n      },\r\n    },\r\n  ],\r\n  formCfg?.defaultDateRangeShortcuts,\r\n  \"alert\"\r\n);\r\n\r\n//覆盖重写el-form-item 的默认属性值\r\nexport const defaultFieldAttrs: CommonObj = getExportData(\r\n  {\r\n    input: {\r\n      attrs: {\r\n        placeholder: \"请输入${label}\",\r\n        // maxlength: 30,\r\n        clearable: true,\r\n        showWordLimit: true,\r\n      },\r\n    },\r\n    select: {\r\n      attrs: {\r\n        style: {\r\n          // width: \"100%\",\r\n          minWidth: \"150px\", // minWidth 在作为表单子项时，是需要设置的，不然宽度会塌陷\r\n        },\r\n        // placeholder: \"请选择${label}\",\r\n        clearable: true,\r\n        tagType: \"primary\", // 用户标签类型 success/info/warning/danger/primary\r\n        loadingText: \"玩命加载中……\",\r\n        getAttrs(field: FormFieldAttrs) {\r\n          const { remote, multiple } = field.attrs || {};\r\n          const multiAttrs = multiple\r\n            ? {\r\n                collapseTags: true,\r\n                collapseTagsTooltip: true,\r\n                maxCollapseTags: 2,\r\n              }\r\n            : undefined;\r\n          return {\r\n            placeholder: remote ? \"请输入关键字搜索${label}\" : \"请选择${label}\",\r\n            ...multiAttrs,\r\n          };\r\n        },\r\n      },\r\n      // options: [],\r\n    },\r\n    cascader: {\r\n      attrs: {\r\n        // style: { width: \"100%\" },\r\n        placeholder: \"请选择${label}\",\r\n        clearable: true,\r\n      },\r\n    },\r\n    \"date-picker\": {\r\n      attrs: {\r\n        // style: { width: \"100%\" },\r\n        type: \"daterange\", // year/month/date/dates/datetime/ week/datetimerange/daterange/monthrange\r\n        rangeSeparator: rangeJoinChar,\r\n        valueFormat: \"YYYY-MM-DD\",\r\n        placeholder: \"请选择${label}\",\r\n        clearable: true,\r\n        getAttrs(field: FormFieldAttrs) {\r\n          const { attrs = {} } = field;\r\n          const { type } = attrs;\r\n          const newAttrs: CommonObj = {};\r\n          if (type.includes(\"range\")) {\r\n            const textMap: CommonObj = {\r\n              date: \"日期\",\r\n              month: \"月份\",\r\n              datetime: \"时间\",\r\n            };\r\n            newAttrs.startPlaceholder = `开始${textMap[type.slice(0, -5)]}`;\r\n            newAttrs.endPlaceholder = `结束${textMap[type.slice(0, -5)]}`;\r\n            if (type === \"daterange\") {\r\n              newAttrs.shortcuts = defaultDateRangeShortcuts;\r\n            }\r\n          } else {\r\n            // newAttrs.placeholder = \"请选择${label}\";\r\n          }\r\n          return newAttrs;\r\n        },\r\n      },\r\n    },\r\n    switch: {\r\n      attrs: {\r\n        activeValue: 1,\r\n        inactiveValue: 0,\r\n        activeText: \"启用\",\r\n        inactiveText: \"禁用\",\r\n        inlinePrompt: true,\r\n      },\r\n    },\r\n    // checkbox: {\r\n    //   attrs: {},\r\n    // },\r\n    \"checkbox-group\": {\r\n      attrs: {},\r\n      options: [{ label: \"多选项1\" }],\r\n    },\r\n    \"radio-group\": {\r\n      attrs: { type: \"button\" },\r\n      options: [{ label: \"单选项-error\" }],\r\n    },\r\n    pureText: {\r\n      attrs: {\r\n        style: { \"line-height\": \"22px\", \"margin-top\": \"4px\" },\r\n      },\r\n    },\r\n    \"input-number\": {\r\n      attrs: {\r\n        // style: { width: \"100%\" },\r\n        placeholder: \"${label}\",\r\n        // getAttrs(field: FormFieldAttrs) {\r\n        //   const { style = {} } = field.attrs;\r\n        //   const { before, after } = field;\r\n        //   if ((before || after) && !style.width) {\r\n        //     style.flex = 1;\r\n        //     return style;\r\n        //   }\r\n        // },\r\n      },\r\n    },\r\n    slider: {\r\n      attrs: {\r\n        // showInput: false,\r\n      },\r\n    },\r\n    autocomplete: {\r\n      attrs: {\r\n        // style: { width: \"100%\" },\r\n        placeholder: \"请输入${label}\",\r\n        // maxlength: 30,\r\n        clearable: true,\r\n        showWordLimit: true,\r\n        fetchSuggestions(val: string, cb: any) {\r\n          cb([{ label: val, value: val }]);\r\n        },\r\n        // onSelect(item: CommonObj) {\r\n        //   console.log(item);\r\n        // },\r\n      },\r\n    },\r\n    \"time-picker\": {\r\n      attrs: {\r\n        // style: { width: \"100%\" },\r\n        placeholder: \"请选择${label}\",\r\n        rangeSeparator: rangeJoinChar,\r\n        clearable: true,\r\n      },\r\n    },\r\n    \"time-select\": {\r\n      attrs: {\r\n        // style: { width: \"100%\" },\r\n        placeholder: \"请选择${label}\",\r\n        clearable: true,\r\n      },\r\n    },\r\n    BaseNumberRange: {\r\n      attrs: {\r\n        // style: { width: \"100%\" },\r\n      },\r\n    },\r\n    // BaseUpload: {\r\n    //   attrs: {},\r\n    // },\r\n    // BaseEditor: {\r\n    //   attrs: {\r\n    // style: { width: \"100%\" },\r\n    //   },\r\n    // },\r\n  },\r\n  formCfg?.defaultFieldAttrs\r\n);\r\n\r\nexport const defaultPopoverAttrs: CommonObj = getExportData(\r\n  {\r\n    // placement: \"top\",\r\n    // title: \"Title\",\r\n    // width: 300,\r\n    // trigger: \"hover\",\r\n    // content: \"自定义提示内容\",\r\n  },\r\n  formCfg?.defaultPopoverAttrs\r\n);\r\n\r\n//默认的校验类型\r\nexport const defaultValidTypes: CommonObj = getExportData(\r\n  {\r\n    //手机号\r\n    phone: {\r\n      rules: [\r\n        {\r\n          pattern: regexp.phone,\r\n          message: \"请输入正确的11位电话号码\",\r\n          trigger: \"blur\",\r\n        },\r\n      ],\r\n      attrs: {\r\n        maxlength: 11,\r\n      },\r\n    },\r\n    //密码\r\n    password: {\r\n      rules: [\r\n        {\r\n          min: 6,\r\n          message: \"密码长度不能小于6位\",\r\n          trigger: \"blur\",\r\n        },\r\n        {\r\n          pattern: regexp.password,\r\n          message: \"请输入正确的6~16位字母 + 数字组合密码\",\r\n          trigger: \"blur\",\r\n        },\r\n      ],\r\n      attrs: {\r\n        type: \"password\",\r\n        maxlength: 16,\r\n        showPassword: true,\r\n      },\r\n    },\r\n    //15~18位身份证号\r\n    identity: {\r\n      rules: [\r\n        {\r\n          min: 15,\r\n          message: \"身份证号长度不能小于15位\",\r\n          trigger: \"blur\",\r\n        },\r\n        {\r\n          pattern: regexp.identity,\r\n          message: \"请输入正确的15/18位身份证号\",\r\n          trigger: \"blur\",\r\n        },\r\n      ],\r\n      attrs: {\r\n        maxlength: 18,\r\n      },\r\n    },\r\n    //邮箱\r\n    email: {\r\n      rules: [\r\n        {\r\n          pattern: regexp.email,\r\n          message: \"请输入正确的邮箱地址\",\r\n          trigger: \"blur\",\r\n        },\r\n      ],\r\n    },\r\n    //年龄\r\n    age: {\r\n      type: \"input-number\",\r\n      attrs: {\r\n        min: 0,\r\n        max: 100,\r\n      },\r\n      extra: {\r\n        after: \"岁\",\r\n      },\r\n    },\r\n  },\r\n  formCfg?.defaultValidTypes\r\n);\r\n","<template>\r\n  <!-- 如果下面这样写，会导致内置的表单校验pattern失效 -->\r\n  <!-- v-bind=\"deleteAttrs(newField, ['children', 'popover', 'attrs'])\" -->\r\n  <el-form-item\r\n    class=\"base-form-item\"\r\n    v-bind=\"prefixProp && !newField.labelWidth ? deleteAttrs(newField, ['label']) : newField\"\r\n    :class=\"className\"\r\n  >\r\n    <template #label v-if=\"!prefixProp || newField.labelWidth\">\r\n      <BaseRender :data=\"newField.label\" />\r\n      <el-popover v-bind=\"popoverAttrs\" v-if=\"popoverAttrs\">\r\n        <template #reference>\r\n          <BaseIcon :color=\"cssVars.colorInfo\" class=\"icon-popover\" :class=\"size\" name=\"QuestionFilled\"></BaseIcon>\r\n        </template>\r\n        <BaseRender :data=\"popoverAttrs.defaultSlot\" v-if=\"popoverAttrs.defaultSlot\" />\r\n      </el-popover>\r\n    </template>\r\n    <div class=\"mr-h\" v-if=\"newField.extra?.before\">\r\n      <BaseRender :data=\"newField.extra.before\" />\r\n    </div>\r\n    <template v-if=\"!subFields.length\">\r\n      <template v-if=\"newField.extra?.pureText || pureText\">{{ getKeyVal(newField, newVal).value ?? \"-\" }}</template>\r\n      <template v-else>\r\n        <!-- 以下按照使用频率高低排序 -->\r\n        <el-input\r\n          :class=\"flexClass\"\r\n          v-debounce:input=\"(e:any)=>handleInput(e, newField.prop as string)\"\r\n          @clear=\"() => emits('change', newField.prop, '')\"\r\n          v-model.trim=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-if=\"newField.type === 'input'\"\r\n        >\r\n          <!-- <component :is=\"newField?.slots\" v-if=\"newField?.slots\"></component> -->\r\n          <template #[key] v-for=\"(val, key) in newField?.slots\" :key=\"key\">\r\n            <BaseRender :data=\"val\" />\r\n          </template>\r\n        </el-input>\r\n        <el-select\r\n          :class=\"flexClass\"\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'select'\"\r\n        >\r\n          <template v-for=\"(opt, ind) in newField.options\" :key=\"ind\">\r\n            <el-option v-bind=\"deleteAttrs(opt, ['customOption'])\" v-if=\"opt?.customOption\">\r\n              <BaseRender :data=\"opt.customOption\" />\r\n            </el-option>\r\n            <el-option v-bind=\"opt\" v-else />\r\n          </template>\r\n          <template #[key] v-for=\"(val, key) in newField?.slots\" :key=\"key\">\r\n            <BaseRender :data=\"val\" />\r\n          </template>\r\n        </el-select>\r\n        <el-date-picker\r\n          :class=\"flexClass\"\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'date-picker'\"\r\n        >\r\n          <template #[key] v-for=\"(val, key) in newField?.slots\" :key=\"key\">\r\n            <BaseRender :data=\"val\" />\r\n          </template>\r\n        </el-date-picker>\r\n        <el-radio-group\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'radio-group'\"\r\n        >\r\n          <template v-if=\"newField?.attrs?.type === 'button'\">\r\n            <el-radio-button :disabled=\"opt.disabled\" :value=\"opt.value\" v-for=\"(opt, ind) in newField.options\" :key=\"ind\">\r\n              {{ opt.label }}\r\n            </el-radio-button>\r\n          </template>\r\n          <template v-else>\r\n            <el-radio :disabled=\"opt.disabled\" :value=\"opt.value\" v-for=\"(opt, ind) in newField.options\" :key=\"ind\">\r\n              {{ opt.label }}\r\n            </el-radio>\r\n          </template>\r\n        </el-radio-group>\r\n        <el-checkbox-group\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'checkbox-group'\"\r\n        >\r\n          <!-- 这个表单控件需要特殊处理，不能直接使用v-bind=\"opt\" -->\r\n          <el-checkbox\r\n            :disabled=\"opt.disabled\"\r\n            :value=\"opt.value\"\r\n            v-bind=\"deleteAttrs(opt, ['label'])\"\r\n            :name=\"(newField.prop as string)\"\r\n            v-for=\"(opt, ind) in newField.options\"\r\n            :key=\"ind\"\r\n          >\r\n            <BaseRender :data=\"opt.label\" />\r\n          </el-checkbox>\r\n        </el-checkbox-group>\r\n        <el-input-number\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'input-number'\"\r\n        />\r\n        <el-switch\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'switch'\"\r\n        />\r\n        <el-cascader\r\n          :class=\"flexClass\"\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          :options=\"newField.options\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'cascader'\"\r\n        >\r\n          <template #[key] v-for=\"(val, key) in newField?.slots\" :key=\"key\">\r\n            <BaseRender :data=\"val\" />\r\n          </template>\r\n        </el-cascader>\r\n        <slot name=\"custom\" :field=\"newField\" v-else-if=\"newField.type === 'custom'\">\r\n          <div class=\"err\">【自定义】{{ `${newField.label}（${newField.prop})` }}</div>\r\n        </slot>\r\n        <BaseNumberRange\r\n          :class=\"flexClass\"\r\n          @change=\"(prop:string, val:any)=> emits('change', prop, val ?? '')\"\r\n          :size=\"size\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField\"\r\n          v-else-if=\"newField.type === 'BaseNumberRange'\"\r\n        />\r\n        <BaseUpload\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-bind=\"newField.attrs\"\r\n          v-model=\"newVal\"\r\n          v-else-if=\"newField.type === 'BaseUpload'\"\r\n        />\r\n        <!-- <BaseEditor\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'BaseEditor'\"\r\n        ></BaseEditor> -->\r\n        <el-autocomplete\r\n          :class=\"flexClass\"\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'autocomplete'\"\r\n        >\r\n          <template #[key] v-for=\"(val, key) in newField?.slots\" :key=\"key\">\r\n            <BaseRender :data=\"val\" />\r\n          </template>\r\n        </el-autocomplete>\r\n        <el-slider\r\n          :class=\"flexClass\"\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'slider'\"\r\n        />\r\n        <el-checkbox\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'checkbox'\"\r\n        >\r\n          <!-- <BaseRender\r\n            :data=\"newField?.slots?.default || newField.label\"\r\n          /> -->\r\n        </el-checkbox>\r\n        <!-- <el-time-picker\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'time-picker'\"\r\n        />\r\n        <el-time-select\r\n          @change=\"(val:any)=> emits('change', newField.prop, val ?? '')\"\r\n          v-model=\"newVal\"\r\n          v-bind=\"newField.attrs\"\r\n          v-else-if=\"newField.type === 'time-select'\"\r\n        /> -->\r\n        <div class=\"empty\" v-bind=\"newField.attrs\" v-else-if=\"newField.type === 'empty'\"></div>\r\n        <div class=\"err\" v-else>【不存在】{{ newField.type }}</div>\r\n        <div class=\"ml-h\" v-if=\"newField.extra?.after\">\r\n          <BaseRender :data=\"newField.extra?.after\" />\r\n        </div>\r\n      </template>\r\n      <template v-if=\"newField.extra?.tips\">\r\n        <div class=\"show-tips\" v-html=\"'注：' + newField.extra.tips\"></div>\r\n      </template>\r\n    </template>\r\n    <!-- 当有子项表单时 -->\r\n    <template v-else>\r\n      <AddDelList\r\n        :parentProp=\"newField.prop\"\r\n        :fields=\"subFields\"\r\n        :pureText=\"pureText\"\r\n        v-model=\"newVal\"\r\n        :formRef=\"formRef\"\r\n        v-if=\"newField.type === 'addDel'\"\r\n      />\r\n      <template v-for=\"(cField, cInd) in subFields\" :key=\"cInd\" v-else>\r\n        <!-- :field=\"deleteAttrs(cField, ['label'])\" -->\r\n        <BaseFormItem\r\n          :prefixProp=\"newField.prop as string\"\r\n          :field=\"cField\"\r\n          :pureText=\"cField.extra?.pureText || pureText\"\r\n          v-model=\"newVal[cField.prop as string]\"\r\n          className=\"mr-o\"\r\n          v-bind=\"cField\"\r\n        />\r\n      </template>\r\n    </template>\r\n  </el-form-item>\r\n</template>\r\n<script lang=\"ts\">\r\nexport default {\r\n  name: \"BaseFormItem\",\r\n  inheritAttrs: false,\r\n};\r\n</script>\r\n<script lang=\"ts\" name=\"BaseFormItem\" setup>\r\n// 表单校验规则参考：https://blog.csdn.net/m0_61083409/article/details/123158056\r\nimport { ref, reactive, watch, useAttrs, computed } from \"vue\";\r\nimport { merge, cloneDeep } from \"lodash\";\r\nimport { typeOf, getTextFromOpts, deleteAttrs, getPopoverAttrs, defaultFormItemType, showMessage } from \"@/components/_utils\";\r\nimport cssVars from \"@/assets/styles/_var.module.scss\";\r\nimport { CommonObj, OptionItem, StrNum, CommonSize } from \"@/vite-env\";\r\nimport { FormField, FormFieldAttrs, PopoverAttrs } from \"./index\";\r\nimport { FormItemRule } from \"element-plus\";\r\nimport { defaultFieldAttrs, defaultValidTypes } from \".\";\r\nimport AddDelList from \"./_components/AddDelList.vue\";\r\nimport { rangeJoinChar } from \"@/components/_utils\";\r\nimport { useDictMap } from \"@/hooks\";\r\nimport { CascaderName, DictName } from \"@/dict\";\r\n\r\nexport interface RuleItem {\r\n  type?: string; // string, number, boolean, method, regexp, integer, float, array, object, enum, date, url, hex, email, any\r\n  required?: boolean;\r\n  message?: string;\r\n  pattern?: RegExp;\r\n  //min, max: type为array, string时，指长度。为number时，指大小\r\n  min?: StrNum;\r\n  max?: StrNum;\r\n  len?: any; //type为array, string时，指长度。为number时，指值\r\n  enum?: any; //例：{ type: 'enum', enum: ['admin', 'user', 'guest'] }\r\n  // Deep Rules 对象的深层规则\r\n  // fields: any; // 对象的属性名，数组的下标\r\n  // defaultField: any; // 应用于对象、数组内的所有成员\r\n  // transform: any; // 方法，对值的预处理\r\n  // validator: any; // 自定义验证方法\r\n  // asyncValidator: any; // 自定义异步验证方法\r\n}\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    prefixProp?: string; //前置prop属性\r\n    // isLastChild?: boolean; // 是否是 addDel 列表中的最后一个 child\r\n    field: FormFieldAttrs;\r\n    pureText?: boolean; //是否展示纯文本\r\n    modelValue?: any;\r\n    className?: any;\r\n    inputDebounce?: boolean;\r\n    size?: CommonSize;\r\n    formRef?: any;\r\n  }>(),\r\n  {}\r\n);\r\nconst emits = defineEmits([\"update:modelValue\", \"change\"]);\r\nconst newVal = computed({\r\n  get() {\r\n    return props.modelValue;\r\n  },\r\n  set(val: any) {\r\n    emits(\"update:modelValue\", val);\r\n  },\r\n});\r\nlet popoverAttrs: any;\r\nconst { getCascaderOpts, getOpts } = useDictMap();\r\nconst subFields = ref<FormFieldAttrs[]>([]);\r\nconst newField = computed<FormFieldAttrs>(() => {\r\n  const { prefixProp, field, size } = props;\r\n  const { type: fType, label, extra = {}, children, slots } = field;\r\n  let tempField: FormFieldAttrs = JSON.parse(JSON.stringify(field));\r\n  if (children?.length) {\r\n    const { required } = field;\r\n    subFields.value = children as FormFieldAttrs[];\r\n    // // 当是 addDel 类型的子项时，如果子项都未设置 required，则默认父级需显示必传红星符号\r\n    // if (fType === \"addDel\") {\r\n    //   const someRequired = children.some((item: FormField, ind: number) => {\r\n    //     const isLast = ind === children.length - 1;\r\n    //     if (typeof item === \"object\") return item?.required ?? (isLast ? true : false);\r\n    //     return false;\r\n    //   });\r\n    //   if (someRequired) tempField.required = true;\r\n    // } else {\r\n    // 当子项有一个必填项时，父级自动变为必填项\r\n    if (!required) {\r\n      const someRequired = children.some((item: FormField) => {\r\n        if (typeof item === \"object\") return item?.required ?? false;\r\n        return false;\r\n      });\r\n      if (someRequired) tempField.required = true;\r\n    }\r\n    // }\r\n  } else {\r\n    const { valid = \"\" } = extra;\r\n    const validField: CommonObj = valid ? defaultValidTypes[valid] : {};\r\n    const { type: vType } = validField;\r\n    const type = fType || vType || defaultFormItemType;\r\n    const defField = defaultFieldAttrs[type];\r\n    // tempField = merge({ type, required: prefixProp ? true : false }, defField, validField, field);\r\n    tempField = merge({ type }, defField, validField, field);\r\n    const { getAttrs } = tempField?.attrs ?? {};\r\n    getAttrs && merge(tempField, { attrs: getAttrs(tempField) }, field);\r\n    let { options } = tempField;\r\n    if (typeof options === \"string\")\r\n      tempField.options = type === \"cascader\" ? getCascaderOpts(options as CascaderName) : getOpts(options as DictName);\r\n    popoverAttrs = getPopoverAttrs(tempField.extra?.popover);\r\n    tempField.prop = prefixProp ? `${prefixProp}.${field.prop}` : field.prop;\r\n    tempField.rules = getRules(tempField, field.rules);\r\n    if (tempField?.attrs?.placeholder) {\r\n      tempField.attrs.placeholder = getPlaceholder(tempField);\r\n    }\r\n    if (typeof slots === \"string\") {\r\n      tempField.slots = { default: slots };\r\n    }\r\n  }\r\n  // if (size === \"small\" && type === \"date-picker\") {\r\n  //   tempField.labelWidth = label.length + 0.5 + \"em\";\r\n  // }\r\n  // delete tempField.popover; //如果将popover一并v-bind在el-form-item上，会导致该表单字段不会渲染出来，故需要单独特殊处理\r\n  // delete tempField.extra; //此处不能删除\r\n  delete tempField.children; //需要删除，不然会在子级表单项上 v-bind 时触发 children 警告\r\n  return tempField;\r\n});\r\nconst flexClass = { \"f-1\": newField.value.extra?.before || newField.value.extra?.after };\r\nfunction getPlaceholder(field: FormFieldAttrs) {\r\n  const { label = \"\", extra = {} } = field;\r\n  const { example } = extra;\r\n  let phr = field?.attrs?.placeholder ?? \"\";\r\n  phr = phr.replace(\"${label}\", label);\r\n  if (example) phr += `，例：${example}`;\r\n  return phr;\r\n}\r\n/**\r\n * 获取表单校验的rules\r\n * @params rules 不能取 合并之后的tempField上的rules\r\n */\r\nfunction getRules(field: FormFieldAttrs, rules: RuleItem[] = []) {\r\n  const { label = \"\", required, extra = {} } = field;\r\n  const { valid } = extra;\r\n  const validField: CommonObj = valid ? defaultValidTypes[valid] : {};\r\n  const newRules: FormItemRule[] = [\r\n    ...(validField.rules || []),\r\n    ...(required ? [{ required, message: label + \"必填\", trigger: \"blur\" }] : []),\r\n    ...rules,\r\n  ];\r\n  const _rules = mergeRules(newRules);\r\n  return _rules;\r\n}\r\n//合并表单校验的rules\r\nfunction mergeRules(rules: FormItemRule[] = []) {\r\n  const arr: FormItemRule[] = [];\r\n  rules.forEach((item: CommonObj, ind: number) => {\r\n    const keys: string[] = [\"required\", \"min\", \"max\", \"pattern\", \"validator\"];\r\n    const { type } = item;\r\n    const findInd = rules.findIndex((it: CommonObj, i: number) => {\r\n      // if (i < ind) return false;\r\n      let isFind = false;\r\n      if (type) {\r\n        isFind = it.type === type;\r\n      } else {\r\n        isFind = !!keys.find((k, j) => item[k] !== undefined && it[k] !== undefined);\r\n      }\r\n      return isFind;\r\n    });\r\n    if (findInd === -1) {\r\n      arr.push(item);\r\n    } else {\r\n      arr[findInd] = item;\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n// console.log(\r\n//   \"mergeRules----------\",\r\n//   mergeRules([\r\n//     { required: true, message: \"必填1\" },\r\n//     { max: 10, message: \"最大10\" },\r\n//     { min: 10, message: \"最小10\" },\r\n//     { pattern: /1/, message: \"正则1\" },\r\n//     { max: 20, message: \"最大20\" },\r\n//     { pattern: /2/, message: \"正则2\" },\r\n//     { required: true, message: \"必填2\" },\r\n//     { min: 20, message: \"最小20\" },\r\n//   ])\r\n// );\r\n//获取表单键值对的值\r\nfunction getKeyVal(field: FormFieldAttrs, val: any) {\r\n  const { type = defaultFormItemType, label, attrs = {}, options = [], extra = {} } = field;\r\n  const { after = \"\" } = extra;\r\n  if ([\"select\", \"radio-group\"].includes(type)) {\r\n    val = options?.find(it => it.value === val)?.label;\r\n  } else if (type.includes(\"Time\") || type.includes(\"date\")) {\r\n    const { format } = merge({}, defaultFieldAttrs[type]?.attrs, attrs);\r\n    const isArr = typeOf(val) === \"Array\";\r\n    const joinStr = ` ${rangeJoinChar} `;\r\n    if (props.pureText) {\r\n      val = isArr ? val.join(joinStr) : val;\r\n    } else {\r\n      val = isArr ? val.map((it: any) => it.format(format)).join(joinStr) : val?.format(format);\r\n    }\r\n  } else if (type === \"checkbox-group\") {\r\n    val = options\r\n      ?.filter((it: OptionItem) => val.includes(it.value))\r\n      ?.map((it: OptionItem) => it.label)\r\n      .join(\"，\");\r\n  } else if (type === \"input-number\") {\r\n    val = val ? val + after : \"-\";\r\n  } else if (type === \"switch\") {\r\n    const { activeText = \"是\", inactiveText = \"否\", activeValue } = attrs;\r\n    val = activeValue === val ? activeText : inactiveText;\r\n  } else if (type === \"checkbox\") {\r\n    val = val ? \"是\" : \"否\";\r\n  } else if (type === \"cascader\") {\r\n    val = getTextFromOpts(attrs?.options, val) || \"-\";\r\n  } else if (type === \"BaseNumberRange\") {\r\n    val = val.join(rangeJoinChar);\r\n  } else if (type === \"custom\") {\r\n    val = \"-\";\r\n  }\r\n  // else {\r\n  //   val = \"暂未解析\";\r\n  // }\r\n  return {\r\n    label,\r\n    value: val,\r\n  };\r\n}\r\nfunction handleInput(e: any, prop: string) {\r\n  if (props.inputDebounce) {\r\n    const inp = e.querySelector(\"input\") || e.querySelector(\"textarea\");\r\n    const val = inp.value;\r\n    emits(\"change\", prop, val);\r\n  }\r\n}\r\ndefineExpose({});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.base-form-item {\r\n}\r\n.err {\r\n  color: $color-danger;\r\n}\r\n.icon-popover {\r\n  margin-left: 2px;\r\n  margin-top: 9px;\r\n  &.small {\r\n    margin-left: 0;\r\n    margin-top: 7px;\r\n  }\r\n}\r\n.hide-tips,\r\n.show-tips {\r\n  font-weight: 500;\r\n  line-height: 2;\r\n  width: 100%;\r\n  font-size: $font-size-lighter;\r\n  :deep(a) {\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: $color-primary;\r\n    }\r\n  }\r\n}\r\n.hide-tips {\r\n  // background: $color-bg-main;\r\n}\r\n.show-tips {\r\n  color: $color-text-light;\r\n}\r\n// .empty {\r\n//   margin-right: auto;\r\n// }\r\n</style>\r\n"],"names":["formCfg","_a","config","form","getExportData","text","value","Date","date","setTime","getTime","defaultDateShortcuts","defaultDateRangeShortcuts","end","start","defaultFieldAttrs","input","attrs","placeholder","clearable","showWordLimit","select","style","minWidth","tagType","loadingText","getAttrs","field","remote","multiple","collapseTags","collapseTagsTooltip","maxCollapseTags","cascader","type","rangeSeparator","rangeJoinChar","valueFormat","newAttrs","includes","textMap","month","datetime","startPlaceholder","slice","endPlaceholder","shortcuts","switch","activeValue","inactiveValue","activeText","inactiveText","inlinePrompt","options","label","pureText","slider","autocomplete","fetchSuggestions","val","cb","BaseNumberRange","defaultPopoverAttrs","defaultValidTypes","phone","rules","pattern","regexp","message","trigger","maxlength","password","min","showPassword","identity","email","age","max","extra","after","name","inheritAttrs","props","__props","emits","__emit","newVal","computed","get","modelValue","set","popoverAttrs","getCascaderOpts","getOpts","useDictMap","subFields","ref","newField","prefixProp","size","fType","children","slots","tempField","JSON","parse","stringify","length","required","some","item","valid","validField","vType","defaultFormItemType","defField","merge","getPopoverAttrs","popover","prop","newRules","arr","forEach","ind","keys","findInd","findIndex","it","i","isFind","find","k","j","push","mergeRules","getRules","_b","example","phr","replace","getPlaceholder","default","flexClass","before","getKeyVal","format","isArr","typeOf","joinStr","join","map","_c","filter","getTextFromOpts","__expose","e","inputDebounce","querySelector"],"mappings":"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"}