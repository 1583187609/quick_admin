{"version":3,"file":"_utils-aafb43ef.js","sources":["../../../src/components/form/_utils.ts"],"sourcesContent":["import { FormField, FormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport { typeOf, propsJoinChar, getMaxLength } from \"@/components/_utils\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { merge } from \"lodash\";\r\nimport { handleFormInitData } from \"@/components/_utils\";\r\n\r\n//处理属性继承\r\nfunction handleAttrsInherit(field: FormFieldAttrs, inheritAttrs?: CommonObj) {\r\n  if (!inheritAttrs) return;\r\n  const { attrs, children } = field;\r\n  const { attrs: subAttrs, ...fieAttrs } = inheritAttrs;\r\n  field.attrs = attrs ? merge({}, subAttrs, attrs) : subAttrs;\r\n  children?.forEach((subField: FormField) => {\r\n    if (typeOf(subField) !== \"Object\") return false;\r\n    handleAttrsInherit(subField as FormFieldAttrs, inheritAttrs);\r\n  });\r\n  //使用JSON.stringify是为了能够直接修改field对象，且最后以field对象的属性为准\r\n  merge(field, fieAttrs, JSON.parse(JSON.stringify(field)));\r\n  // merge(field, fieAttrs, structuredClone(field));\r\n}\r\n\r\n/**\r\n * 获取AddDel分组的每个数组项对象数据\r\n * @param fields 每个组的字段集和\r\n */\r\nexport function getAddDelItem(fields?: FormField[]) {\r\n  const obj: CommonObj = {};\r\n  fields?.map((item: FormField) => {\r\n    if (typeOf(item) !== \"Object\") return;\r\n    const { prop } = item as FormFieldAttrs;\r\n    obj[prop as string] = undefined;\r\n  });\r\n  return obj;\r\n}\r\n\r\n/**\r\n * 是否是合法的字段（同时初始化表单数据）\r\n * @param formData object 表单数据对象\r\n * @param field 字段对象属性\r\n * @param emits vue emits\r\n * @param model 表单初始值\r\n * @param inheritAttrs 表单控件继承父级的属性，例：disabled\r\n * @return boolean 这个字段属性是否合法（是否是对象）\r\n */\r\ninterface ResObj {\r\n  data: CommonObj;\r\n  fields: FormFieldAttrs[];\r\n}\r\nexport function handleFields(fields: FormField[] = [], emits: any, modelValue?: CommonObj, inheritAttrs?: CommonObj) {\r\n  const resObj: ResObj = {\r\n    data: {},\r\n    fields: [],\r\n  };\r\n  fields.forEach((field: FormField, ind: number) => {\r\n    if (typeOf(field) !== \"Object\") return null;\r\n    const { type, prop, children } = field as FormFieldAttrs;\r\n    const propType = typeOf(prop);\r\n    handleFormInitData(field as FormFieldAttrs, modelValue);\r\n    if (propType === \"String\") {\r\n      let defVal = modelValue?.[prop as string];\r\n      //是为了处理 el-checkbox 在点击重置按钮后，选中状态不会重置的问题\r\n      if (type === \"checkbox\" && defVal === undefined) {\r\n        defVal = false;\r\n      } else if (type === \"addDel\") {\r\n        resObj.data[prop as string] = defVal?.length ? defVal : [getAddDelItem(children)];\r\n      } else {\r\n        const val = children?.length ? handleFields(children, emits, defVal).data : defVal;\r\n        resObj.data[prop as string] = val;\r\n        val !== undefined && emits?.(\"change\", prop, val);\r\n      }\r\n    } else if (propType === \"Array\") {\r\n      //此处不会有children\r\n      const [minProp, maxProp] = prop as [string, string];\r\n      const maxVal = modelValue?.[maxProp];\r\n      const minVal = modelValue?.[minProp];\r\n      const newProp = (prop as string[]).join(propsJoinChar);\r\n      const isAllUnd = minVal === undefined && maxVal === undefined;\r\n      const val = isAllUnd ? undefined : [minVal, maxVal];\r\n      resObj.data[newProp] = val;\r\n      (field as FormFieldAttrs).prop = newProp;\r\n      val !== undefined && emits?.(\"change\", newProp, val);\r\n    } else if (propType === \"Undefined\") {\r\n      if (children) {\r\n        if (children.length) {\r\n          const defVal: CommonObj = {};\r\n          const joinProp = children\r\n            .map((item: any) => {\r\n              const { prop } = item;\r\n              defVal[prop] = modelValue?.[prop];\r\n              return prop;\r\n            })\r\n            .join(propsJoinChar);\r\n          const val = defVal;\r\n          (field as FormFieldAttrs).prop = joinProp;\r\n          resObj.data[joinProp as string] = val;\r\n          Object.keys(val).length && emits?.(\"change\", joinProp, val);\r\n        } else {\r\n          console.warn(\"children不能为空数组\");\r\n        }\r\n      } else {\r\n        throw new Error(\"不能同时没有prop和children属性\");\r\n      }\r\n    } else {\r\n      throw new Error(`暂未处理prop为${propType}类型的值`);\r\n    }\r\n    //继承父级的属性\r\n    handleAttrsInherit(field as FormFieldAttrs, inheritAttrs);\r\n    //让子级元素的label宽度自动统一\r\n    if (children?.length) {\r\n      // const maxLabelLen = getMaxLength(children);\r\n      children?.forEach((field: FormField) => {\r\n        if (typeOf(field) !== \"Object\") return false;\r\n        // const _field = field as FormFieldAttrs;\r\n        // if (_field.labelWidth === undefined) {\r\n        //   _field.labelWidth = maxLabelLen + \"em\";\r\n        // }\r\n      });\r\n    }\r\n    resObj.fields.push(field as FormFieldAttrs);\r\n  });\r\n  return resObj;\r\n}\r\n"],"names":["handleAttrsInherit","field","inheritAttrs","attrs","children","subAttrs","fieAttrs","merge","forEach","subField","typeOf","JSON","parse","stringify","getAddDelItem","fields","obj","map","item","prop","handleFields","emits","modelValue","resObj","data","ind","type","propType","handleFormInitData","defVal","length","val","minProp","maxProp","maxVal","minVal","newProp","join","propsJoinChar","Error","joinProp","Object","keys","push"],"mappings":"+FAOA,SAASA,EAAmBC,EAAuBC,GACjD,IAAKA,EAAc,OACb,MAAAC,MAAEA,EAAOC,SAAAA,GAAaH,GACpBE,MAAOE,KAAaC,GAAaJ,EACnCD,EAAAE,MAAQA,EAAQI,EAAAA,MAAM,CAAI,EAAAF,EAAUF,GAASE,EACzC,MAAAD,GAAAA,EAAAI,SAASC,IACb,GAAqB,WAArBC,EAAOD,GAA+B,OAAA,EAC1CT,EAAmBS,EAA4BP,EAAY,YAGvDD,EAAOK,EAAUK,KAAKC,MAAMD,KAAKE,UAAUZ,IAEnD,CAMO,SAASa,EAAcC,GAC5B,MAAMC,EAAiB,CAAA,EAMhB,OALC,MAAAD,GAAAA,EAAAE,KAAKC,IACP,GAAiB,WAAjBR,EAAOQ,GAAoB,OACzB,MAAAC,KAAEA,GAASD,EACjBF,EAAIG,QAAkB,CAAA,IAEjBH,CACT,CAeO,SAASI,EAAaL,EAAsB,GAAIM,EAAYC,EAAwBpB,GACzF,MAAMqB,EAAiB,CACrBC,KAAM,CAAC,EACPT,OAAQ,IAqEH,OAnEAA,EAAAP,SAAQ,CAACP,EAAkBwB,KAC5B,GAAkB,WAAlBf,EAAOT,GAA4B,OAAA,KACvC,MAAMyB,KAAEA,EAAAP,KAAMA,EAAMf,SAAAA,GAAaH,EAC3B0B,EAAWjB,EAAOS,GAExB,GADAS,EAAmB3B,EAAyBqB,GAC3B,WAAbK,EAAuB,CACrB,IAAAE,EAAsB,MAAbP,OAAa,EAAAA,EAAAH,GAEtB,GAAS,aAATO,QAAkC,IAAXG,EAChBA,GAAA,OAAA,GACS,WAATH,EACFH,EAAAC,KAAKL,IAAkB,MAAAU,OAAA,EAAAA,EAAQC,QAASD,EAAS,CAACf,EAAcV,QAClE,CACC,MAAA2B,SAAM3B,WAAU0B,QAASV,EAAahB,EAAUiB,EAAOQ,GAAQL,KAAOK,EACrEN,EAAAC,KAAKL,GAAkBY,OACtB,IAAAA,IAAqB,MAARV,GAAQA,EAAA,SAAUF,EAAMY,GAC/C,CAAA,MAAA,GACsB,UAAbJ,EAAsB,CAEzB,MAACK,EAASC,GAAWd,EACrBe,EAAsB,MAAbZ,OAAa,EAAAA,EAAAW,GACtBE,EAAsB,MAAbb,OAAa,EAAAA,EAAAU,GACtBI,EAAWjB,EAAkBkB,KAAKC,GAElCP,OADsB,IAAXI,QAAmC,IAAXD,OAClB,EAAY,CAACC,EAAQD,GACrCX,EAAAC,KAAKY,GAAWL,EACtB9B,EAAyBkB,KAAOiB,OACzB,IAAAL,IAAqB,MAARV,GAAQA,EAAA,SAAUe,EAASL,GAAG,KAAA,IAC7B,cAAbJ,EAsBT,MAAM,IAAIY,MAAM,YAAYZ,SArB5B,IAAIvB,EAkBI,MAAA,IAAImC,MAAM,yBAjBhB,GAAInC,EAAS0B,OAAQ,CACnB,MAAMD,EAAoB,CAAA,EACpBW,EAAWpC,EACda,KAAKC,IACE,MAAEC,KAAAA,GAASD,EAEVC,OADAA,EAAAA,GAAqBA,MAAbG,OAAaH,EAAAA,EAAAA,GACrBA,CAAAA,IAERkB,KAAKC,GACFP,EAAMF,EACX5B,EAAyBkB,KAAOqB,EAC1BjB,EAAAC,KAAKgB,GAAsBT,EAClCU,OAAOC,KAAKX,GAAKD,SAAU,MAAAT,GAAAA,EAAQ,SAAUmB,EAAUT,GAAG,CAShE,CAEA/B,EAAmBC,EAAyBC,UAExCE,WAAU0B,UAEF,MAAA1B,GAAAA,EAAAI,SAASP,IACb,GAAkB,WAAlBS,EAAOT,GAA4B,OAAA,CAAA,KAOpCsB,EAAAR,OAAO4B,KAAK1C,EAAuB,IAErCsB,CACT"}