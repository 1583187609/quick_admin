{"version":3,"file":"EditTable-3fd3dc7d.js","sources":["../../../src/components/table/EditTable.vue"],"sourcesContent":["<template>\r\n  <el-form ref=\"formRef\" class=\"edit-table f-fs-s-c\" :model=\"newRows\">\r\n    <el-table :data=\"newRows\" v-bind=\"newAttrs\" class=\"table\" v-if=\"newCols.length\">\r\n      <template v-for=\"(col, cInd) in newCols\" :key=\"cInd\">\r\n        <el-table-column v-bind=\"col\">\r\n          <template #header=\"{ row, colum, $index }\">\r\n            <span>\r\n              <span v-if=\"col.required\" class=\"required\">*</span>\r\n              {{ col.label }}\r\n            </span>\r\n          </template>\r\n          <template #default=\"{ row, column, $index }\" v-if=\"col.field\">\r\n            <slot :name=\"col.prop\" v-bind=\"{ row, col, $index }\" v-if=\"col?.field?.type === 'custom'\"></slot>\r\n            <template v-else-if=\"col?.field?.type === 'operate'\">\r\n              <template v-if=\"$index < newRows.length - 1\">\r\n                <el-button :icon=\"Delete\" type=\"danger\" link @click=\"onDelete($index)\">删除</el-button>\r\n                <!-- <el-button\r\n                  :icon=\"Delete\"\r\n                  type=\"primary\"\r\n                  link\r\n                  @click=\"onEmptyRow($index)\"\r\n                  >置空</el-button\r\n                > -->\r\n              </template>\r\n              <template v-else>-</template>\r\n            </template>\r\n            <BaseFormItem :field=\"getNewField(col, $index)\" v-model=\"row[col.prop]\" v-else></BaseFormItem>\r\n          </template>\r\n        </el-table-column>\r\n      </template>\r\n      <template #empty>\r\n        <BaseEmpty></BaseEmpty>\r\n      </template>\r\n    </el-table>\r\n    <div class=\"f-c-c\" v-else>空空如也~</div>\r\n    <div class=\"f-c-c f-0 pt-h pb-h\" style=\"width: 100%\" v-if=\"!text && footer\">\r\n      <el-button type=\"primary\" v-debounce.immediate=\"onSubmit\" :disabled=\"loading\">\r\n        <template #icon>\r\n          <BaseIcon :class=\"{ rotate: loading }\" :name=\"loading ? 'Loading' : 'Promotion'\"></BaseIcon>\r\n        </template>\r\n        {{ submitText }}\r\n      </el-button>\r\n      <el-button :icon=\"RefreshLeft\" @click=\"resetForm\" :disabled=\"loading\">{{ resetText }}</el-button>\r\n    </div>\r\n  </el-form>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { merge } from \"lodash\";\r\nimport { ref, reactive, toRefs, inject, watch } from \"vue\";\r\nimport { Delete, RefreshLeft } from \"@element-plus/icons-vue\";\r\nimport { FormInstance } from \"element-plus\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { TableColAttrs, defaultColumnAttrs, defaultTableAttrs } from \"@/components/table\";\r\nimport { showMessage } from \"../_utils\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"EditTable\" }); \n\r\nexport type CellType = \"\" | \"input\" | \"select\" | \"switch\" | \"custom\" | \"operate\";\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    cols: TableColAttrs[]; //表头\r\n    rows: CommonObj[]; //表格行数据\r\n    footer?: boolean; //是否显示底部按钮\r\n    text?: boolean; //是否纯文本展示\r\n    request?: any; //接口请求\r\n    total?: number;\r\n    currPage?: number; //当前页码，默认1\r\n    pageSize?: number; // 每页多少条，默认10\r\n    pageAttrs?: CommonObj; //分页属性\r\n    submitText?: string; //提交按钮的文字\r\n    resetText?: string; //提交按钮的文字\r\n    index?: boolean; //是否展示序号列\r\n    extraParams?: CommonObj; //额外的参数\r\n    autoAddRow?: boolean; //是否自动增加要编辑的行\r\n    submitCb?: () => void; //提交之后的回调函数\r\n  }>(),\r\n  {\r\n    autoAddRow: false,\r\n    formData: () => ({}),\r\n    cols: () => [],\r\n    rows: () => [],\r\n    text: false,\r\n    footer: true,\r\n    fields: () => [],\r\n    submitText: \"提交\",\r\n    resetText: \"重置\",\r\n  }\r\n);\r\nconst emits = defineEmits([\"submit\", \"update:rows\"]);\r\nconst closePopup: any = inject(\"closePopup\");\r\nconst formRef = ref<FormInstance | null>(null);\r\nconst loading = ref(false);\r\nconst newRows = ref(props.rows);\r\nconst { extraParams, submitText, submitCb, index, cols } = props;\r\n// const rowNum = $attrs.showSummary ? 2 : 1;\r\nconst rowNum = 1;\r\nconst newAttrs = reactive(merge({ maxHeight: `calc(100% + ${rowNum * 36}px)` }, defaultTableAttrs));\r\nif (index) {\r\n  //为了防止开发的时候，保存文件就刷新，导致序号列和选择列会重复添加，正式环境则不会影响\r\n  if (!cols.slice(0, 2).find(it => it.type === \"index\")) {\r\n    cols.unshift({\r\n      prop: \"$index\",\r\n      label: \"序号\",\r\n      type: \"index\",\r\n      fixed: \"left\",\r\n      width: 58,\r\n      index: 1,\r\n    });\r\n  }\r\n}\r\nconst newCols = reactive(\r\n  cols.map(item => {\r\n    const { type } = item?.field || {};\r\n    let fixedAttr = {};\r\n    if (type === \"operate\") {\r\n      fixedAttr = {\r\n        prop: \"$operate\",\r\n        fixed: \"right\",\r\n        width: 80,\r\n      };\r\n    }\r\n    item = merge(fixedAttr, defaultColumnAttrs, item);\r\n    return item;\r\n  })\r\n);\r\n\r\nfunction getNewField(col: CommonObj, $index: number) {\r\n  const { field, label, prop = \"\", ...rest } = col;\r\n  const newProp = `${$index}[${prop}]`;\r\n  field.prop = newProp;\r\n  // if ($index === newRows.value.length - 1) {\r\n  //   // col.required = true;\r\n  //   field.rules = [{ required: true, message: \"请输入\" }];\r\n  //   console.log($index, \"$inxee-----------\");\r\n  // }\r\n  // return {\r\n  //   field,\r\n  //   prop: newProp,\r\n  //   ...rest,\r\n  // };\r\n  return field;\r\n}\r\nwatch(\r\n  newRows,\r\n  (newVal = []) => {\r\n    if (!newVal.length && props.autoAddRow) {\r\n      const lastVals = Object.values(newVal.slice(-1)[0]);\r\n      const isLastEmpty = lastVals.every(it => it === \"\");\r\n      // const secondVals =\r\n      //   newVal.length > 2 ? Object.values(newVal.slice(-2)[0]) : [];\r\n      // const isSecondEmpty = secondVals.every((it) => it === \"\");\r\n      if (!isLastEmpty) {\r\n        const obj: CommonObj = {};\r\n        Object.keys(newVal.slice(-1)[0]).forEach(key => {\r\n          obj[key] = \"\";\r\n        });\r\n        newVal.push(obj);\r\n      }\r\n    }\r\n    // if (isSecondEmpty) {\r\n    //   newVal.shift();\r\n    // }\r\n    emits(\"update:rows\", newVal);\r\n  },\r\n  { immediate: true, deep: true }\r\n);\r\nfunction onDelete(ind: number) {\r\n  newRows.value.splice(ind, 1);\r\n}\r\n// function onEmptyRow(ind: number) {\r\n//   const obj: CommonObj = {};\r\n//   Object.keys(newRows.value[ind]).forEach((key) => {\r\n//     obj[key] = \"\";\r\n//   });\r\n//   newRows.value[ind] = obj;\r\n// }\r\n//提交表单\r\nconst onSubmit = () => {\r\n  const formInst = formRef.value;\r\n  if (!formInst) return;\r\n  formInst.validate((valid, fieldsObj) => {\r\n    if (valid) {\r\n      // console.log(newRows.value, \"mergeParams-----------------------\");\r\n      const mergeParams = newRows.value.slice(0, -1);\r\n      if (props?.request) {\r\n        loading.value = true;\r\n        props\r\n          .request(mergeParams)\r\n          .then((res: any) => {\r\n            showMessage(submitText + \"成功\");\r\n            if (submitCb) {\r\n              submitCb();\r\n            } else {\r\n              closePopup();\r\n            }\r\n          })\r\n          .finally(() => {\r\n            loading.value = false;\r\n          });\r\n      } else {\r\n        emits(\"submit\", mergeParams);\r\n      }\r\n    } else {\r\n      const target = Object.values(fieldsObj)[0][0];\r\n      showMessage(target.message, \"error\");\r\n    }\r\n  });\r\n};\r\n//重置表单\r\nconst resetForm = () => {\r\n  const formInst = formRef.value;\r\n  if (!formInst) return;\r\n  formInst.resetFields();\r\n};\r\ndefineExpose({\r\n  formRef,\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.required {\r\n  color: red;\r\n}\r\n.edit-table {\r\n  height: 100%;\r\n  overflow: auto;\r\n  .table {\r\n    width: 100%;\r\n    overflow: auto;\r\n  }\r\n}\r\n</style>\r\n"],"names":["props","__props","emits","__emit","closePopup","inject","formRef","ref","loading","newRows","rows","extraParams","submitText","submitCb","index","cols","newAttrs","reactive","merge","maxHeight","defaultTableAttrs","slice","find","it","type","unshift","prop","label","fixed","width","newCols","map","item","field","fixedAttr","defaultColumnAttrs","getNewField","col","$index","rest","newProp","watch","newVal","length","autoAddRow","Object","values","every","obj","keys","forEach","key","push","immediate","deep","onSubmit","formInst","value","validate","valid","fieldsObj","mergeParams","request","then","res","showMessage","finally","target","message","resetForm","resetFields","__expose","ind","splice"],"mappings":"6kEA0DA,MAAMA,EAAQC,EA8BRC,EAAQC,EACRC,EAAkBC,EAAO,cACzBC,EAAUC,EAAyB,MACnCC,EAAUD,GAAI,GACdE,EAAUF,EAAIP,EAAMU,OACpBC,YAAEA,EAAaC,WAAAA,EAAAC,SAAYA,EAAUC,MAAAA,EAAAC,KAAOA,GAASf,EAGrDgB,EAAWC,EAASC,QAAM,CAAEC,UAAW,qBAAmCC,IAC5EN,IAEGC,EAAKM,MAAM,EAAG,GAAGC,MAAWC,GAAY,UAAZA,EAAGC,QAClCT,EAAKU,QAAQ,CACXC,KAAM,SACNC,MAAO,KACPH,KAAM,QACNI,MAAO,OACPC,MAAO,GACPf,MAAO,KAIb,MAAMgB,EAAUb,EACdF,EAAKgB,KAAYC,IACf,MAAMR,KAAEA,IAAS,MAAAQ,OAAA,EAAAA,EAAMC,QAAS,CAAA,EAChC,IAAIC,EAAY,CAAA,EAST,MARM,YAATV,IACUU,EAAA,CACVR,KAAM,WACNE,MAAO,QACPC,MAAO,KAGJG,EAAAd,EAAAA,MAAMgB,EAAWC,EAAoBH,EACrC,KAIF,SAAAI,EAAYC,EAAgBC,GACnC,MAAML,MAAEA,EAAON,MAAAA,EAAAD,KAAOA,EAAO,MAAOa,GAASF,EACvCG,EAAU,GAAGF,KAAUZ,KAYtB,OAXPO,EAAMP,KAAOc,EAWNP,CACT,CACAQ,EACEhC,GACA,CAACiC,EAAS,MACR,IAAKA,EAAOC,QAAU3C,EAAM4C,WAAY,CAMtC,IALiBC,OAAOC,OAAOJ,EAAOrB,OAAQ,GAAE,IACnB0B,OAAMxB,GAAa,KAAPA,IAIvB,CAChB,MAAMyB,EAAiB,CAAA,EAChBH,OAAAI,KAAKP,EAAOrB,OAAQ,GAAE,IAAI6B,SAAeC,IAC9CH,EAAIG,GAAO,EAAA,IAEbT,EAAOU,KAAKJ,EACd,CACF,CAIA9C,EAAM,cAAewC,EAAM,GAE7B,CAAEW,WAAW,EAAMC,MAAM,IAa3B,MAAMC,EAAW,KACf,MAAMC,EAAWlD,EAAQmD,MACpBD,GACIA,EAAAE,UAAS,CAACC,EAAOC,KACxB,GAAID,EAAO,CAET,MAAME,EAAcpD,EAAQgD,MAAMpC,MAAM,GAAK,UACzCrB,WAAO8D,UACTtD,EAAQiD,OAAQ,EAChBzD,EACG8D,QAAQD,GACRE,MAAMC,IACLC,EAAYrD,EAAa,MACrBC,SAIJ,IAEDqD,SAAQ,KACP1D,EAAQiD,OAAQ,CAAA,KAGpBvD,EAAM,SAAU2D,EAClB,KACK,CACL,MAAMM,EAAStB,OAAOC,OAAOc,GAAW,GAAG,GAC/BK,EAAAE,EAAOC,QAAS,QAC9B,IACD,EAGGC,EAAY,KAChB,MAAMb,EAAWlD,EAAQmD,MACpBD,GACLA,EAASc,aAAY,SAEVC,EAAA,CACXjE,k6BAjDgBkE,SACR/D,EAAAgD,MAAMgB,OAAOD,EAAK,GAD5B,IAAkBA"}