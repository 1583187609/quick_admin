{"version":3,"file":"BaseTag-4fb040b8.js","sources":["../../../src/components/BaseTag.vue"],"sourcesContent":["<!-- 页面-简介 -->\r\n<template>\r\n  <span class=\"base-tag span m-2\" :class=\"tag?.attrs?.type ?? 'main'\" v-bind=\"tag?.attrs\" v-if=\"pureText || !tag\">\r\n    <slot :tag=\"tag\">{{ tag?.text || empty }}</slot>\r\n  </span>\r\n  <el-tag class=\"base-tag m-2\" v-bind=\"tag?.attrs\" v-else>\r\n    <slot :tag=\"tag\"\r\n      >{{ tag?.text || empty }}<template v-if=\"count\">：{{ count }}</template></slot\r\n    >\r\n  </el-tag>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, reactive, watch, computed } from \"vue\";\r\nimport { DictName } from \"@/dict\";\r\nimport { CommonObj, StrNum } from \"@/vite-env\";\r\nimport { emptyVals } from \"@/components/_utils\";\r\nimport type { TagProps } from \"element-plus\";\r\nimport { useDictMap } from \"@/hooks\";\nimport { defineOptions } from 'vue'; \ndefineOptions({ name: \"BaseTag\" }); \n\r\nexport type BaseDictType = \"tag\" | \"text\";\r\nexport type TagType = TagProps[\"type\"];\r\nexport type TagEffect = TagProps[\"effect\"];\r\nconst { getMap } = useDictMap();\r\nconst props = withDefaults(\r\n  defineProps<{\r\n    name?: DictName;\r\n    value?: StrNum;\r\n    codeMap?: CommonObj;\r\n    pureText?: boolean;\r\n    empty?: any;\r\n    count?: StrNum;\r\n  }>(),\r\n  {\r\n    name: \"EnableStatus\",\r\n    empty: \"-\",\r\n  }\r\n);\r\nconst tag = computed(() => {\r\n  const { name, value, codeMap } = props;\r\n  if (emptyVals.includes(value as string)) return null;\r\n  let currMap: CommonObj = {};\r\n  currMap = getMap(name, codeMap);\r\n  return currMap[value as string] || {};\r\n});\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.base-tag {\r\n  &.span {\r\n    font-size: 1em;\r\n  }\r\n  &.main {\r\n    color: $color-text-main;\r\n  }\r\n  &.success {\r\n    color: $color-success;\r\n  }\r\n  &.info {\r\n    color: $color-info;\r\n  }\r\n  &.danger {\r\n    color: $color-danger;\r\n  }\r\n  &.warning {\r\n    color: $color-warning;\r\n  }\r\n}\r\n</style>\r\n"],"names":["getMap","useDictMap","props","__props","tag","computed","name","value","codeMap","emptyVals","includes","currMap"],"mappings":"+mDAwBM,MAAAA,OAAEA,GAAWC,IACbC,EAAQC,EAcRC,EAAMC,GAAS,KACnB,MAAMC,KAAEA,EAAAC,MAAMA,EAAOC,QAAAA,GAAYN,EAC7B,GAAAO,EAAUC,SAASH,GAAyB,OAAA,KAChD,IAAII,EAAqB,CAAA,EAElB,OADGA,EAAAX,EAAOM,EAAME,GAChBG,EAAQJ,IAAoB"}