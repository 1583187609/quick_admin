{"version":3,"file":"vite-plugin-mock-d7a8ead1.js","sources":["../../../node_modules/vite-plugin-mock/es/createProdMockServer.js"],"sourcesContent":["/* eslint-disable */\nimport mockJs from 'mockjs';\nimport { pathToRegexp } from 'path-to-regexp';\nconst Mock = mockJs;\nexport function createProdMockServer(mockList) {\n    Mock.XHR.prototype.__send = Mock.XHR.prototype.send;\n    Mock.XHR.prototype.send = function () {\n        if (this.custom.xhr) {\n            this.custom.xhr.withCredentials = this.withCredentials || false;\n            if (this.responseType) {\n                this.custom.xhr.responseType = this.responseType;\n            }\n        }\n        if (this.custom.requestHeaders) {\n            const headers = {};\n            for (let k in this.custom.requestHeaders) {\n                headers[k.toString().toLowerCase()] = this.custom.requestHeaders[k];\n            }\n            this.custom.options = Object.assign({}, this.custom.options, { headers });\n        }\n        this.__send.apply(this, arguments);\n    };\n    Mock.XHR.prototype.proxy_open = Mock.XHR.prototype.open;\n    Mock.XHR.prototype.open = function () {\n        let responseType = this.responseType;\n        this.proxy_open(...arguments);\n        if (this.custom.xhr) {\n            if (responseType) {\n                this.custom.xhr.responseType = responseType;\n            }\n        }\n    };\n    for (const { url, method, response, timeout } of mockList) {\n        __setupMock__(timeout);\n        Mock.mock(pathToRegexp(url, undefined, { end: false }), method || 'get', __XHR2ExpressReqWrapper__(response));\n    }\n}\nfunction __param2Obj__(url) {\n    const search = url.split('?')[1];\n    if (!search) {\n        return {};\n    }\n    return JSON.parse('{\"' +\n        decodeURIComponent(search)\n            .replace(/\"/g, '\\\\\"')\n            .replace(/&/g, '\",\"')\n            .replace(/=/g, '\":\"')\n            .replace(/\\+/g, ' ') +\n        '\"}');\n}\nfunction __XHR2ExpressReqWrapper__(handle) {\n    return function (options) {\n        let result = null;\n        if (typeof handle === 'function') {\n            const { body, type, url, headers } = options;\n            let b = body;\n            try {\n                b = JSON.parse(body);\n            }\n            catch { }\n            result = handle({\n                method: type,\n                body: b,\n                query: __param2Obj__(url),\n                headers,\n            });\n        }\n        else {\n            result = handle;\n        }\n        return Mock.mock(result);\n    };\n}\nfunction __setupMock__(timeout = 0) {\n    timeout &&\n        Mock.setup({\n            timeout,\n        });\n}\n"],"names":["Mock","mockJs","createProdMockServer","mockList","headers","k","responseType","url","method","response","timeout","__setupMock__","pathToRegexp","__XHR2ExpressReqWrapper__","__param2Obj__","search","handle","options","result","body","type","b"],"mappings":"0FAGA,MAAMA,EAAOC,EACN,SAASC,EAAqBC,EAAU,CAC3CH,EAAK,IAAI,UAAU,OAASA,EAAK,IAAI,UAAU,KAC/CA,EAAK,IAAI,UAAU,KAAO,UAAY,CAOlC,GANI,KAAK,OAAO,MACZ,KAAK,OAAO,IAAI,gBAAkB,KAAK,iBAAmB,GACtD,KAAK,eACL,KAAK,OAAO,IAAI,aAAe,KAAK,eAGxC,KAAK,OAAO,eAAgB,CAC5B,MAAMI,EAAU,CAAA,EAChB,QAASC,KAAK,KAAK,OAAO,eACtBD,EAAQC,EAAE,SAAQ,EAAG,YAAW,CAAE,EAAI,KAAK,OAAO,eAAeA,CAAC,EAEtE,KAAK,OAAO,QAAU,OAAO,OAAO,CAAA,EAAI,KAAK,OAAO,QAAS,CAAE,QAAAD,CAAS,CAAA,EAE5E,KAAK,OAAO,MAAM,KAAM,SAAS,CACzC,EACIJ,EAAK,IAAI,UAAU,WAAaA,EAAK,IAAI,UAAU,KACnDA,EAAK,IAAI,UAAU,KAAO,UAAY,CAClC,IAAIM,EAAe,KAAK,aACxB,KAAK,WAAW,GAAG,SAAS,EACxB,KAAK,OAAO,KACRA,IACA,KAAK,OAAO,IAAI,aAAeA,EAG/C,EACI,SAAW,CAAE,IAAAC,EAAK,OAAAC,EAAQ,SAAAC,EAAU,QAAAC,CAAS,IAAIP,EAC7CQ,EAAcD,CAAO,EACrBV,EAAK,KAAKY,EAAaL,EAAK,OAAW,CAAE,IAAK,EAAO,CAAA,EAAGC,GAAU,MAAOK,EAA0BJ,CAAQ,CAAC,CAEpH,CACA,SAASK,EAAcP,EAAK,CACxB,MAAMQ,EAASR,EAAI,MAAM,GAAG,EAAE,CAAC,EAC/B,OAAKQ,EAGE,KAAK,MAAM,KACd,mBAAmBA,CAAM,EACpB,QAAQ,KAAM,KAAK,EACnB,QAAQ,KAAM,KAAK,EACnB,QAAQ,KAAM,KAAK,EACnB,QAAQ,MAAO,GAAG,EACvB,IAAI,EARG,EASf,CACA,SAASF,EAA0BG,EAAQ,CACvC,OAAO,SAAUC,EAAS,CACtB,IAAIC,EAAS,KACb,GAAI,OAAOF,GAAW,WAAY,CAC9B,KAAM,CAAE,KAAAG,EAAM,KAAAC,EAAM,IAAAb,EAAK,QAAAH,CAAO,EAAKa,EACrC,IAAII,EAAIF,EACR,GAAI,CACAE,EAAI,KAAK,MAAMF,CAAI,CACtB,MACD,CAAS,CACTD,EAASF,EAAO,CACZ,OAAQI,EACR,KAAMC,EACN,MAAOP,EAAcP,CAAG,EACxB,QAAAH,CAChB,CAAa,OAGDc,EAASF,EAEb,OAAOhB,EAAK,KAAKkB,CAAM,CAC/B,CACA,CACA,SAASP,EAAcD,EAAU,EAAG,CAChCA,GACIV,EAAK,MAAM,CACP,QAAAU,CACZ,CAAS,CACT","x_google_ignoreList":[0]}