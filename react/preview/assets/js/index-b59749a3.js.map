{"version":3,"file":"index-b59749a3.js","sources":["../../../src/components/echarts/_config/index.ts","../../../src/components/echarts/BaseChart.tsx","../../../src/components/echarts/LineChart.tsx","../../../src/components/echarts/BarChart.tsx","../../../src/components/echarts/BarsChart.tsx","../../../src/components/echarts/PieChart.tsx","../../../src/components/BaseSection/index.tsx"],"sourcesContent":["export const colors = [];\r\n//渐变色调色盘\r\nexport const gradColors = [\r\n  [\"#2EB7F5\", \"#B8F2FF\"],\r\n  [\"#FFAA00\", \"#FFE867\"],\r\n  [\"#F95741\", \"#fdb498\"],\r\n  [\"#FFAA00\", \"#FFE867\"],\r\n  [\"#2EB7F5\", \"#B8F2FF\"],\r\n  [\"#F95741\", \"#fdb498\"],\r\n];\r\n// export const gradColors = [\r\n//   ['#5087EC', '#5087EC'],\r\n//   ['#68BBC4', '#68BBC4'],\r\n//   ['#58A55C', '#58A55C'],\r\n//   ['#F2BD42', '#F2BD42'],\r\n//   ['#EE752F', '#EE752F'],\r\n//   ['#D95040', '#D95040'],\r\n//   ['#9940D9', '#9940D9'],\r\n// ];\r\n//坐标轴样式\r\nexport const axisCfg = {\r\n  axisTick: {\r\n    show: false,\r\n  },\r\n  axisLine: {\r\n    show: true,\r\n    lineStyle: {\r\n      color: \"#eee\",\r\n    },\r\n  },\r\n  axisLabel: {\r\n    color: \"#999\",\r\n    fontSize: 12,\r\n  },\r\n  nameTextStyle: {\r\n    color: \"#999\",\r\n    // align: 'right'\r\n  },\r\n};\r\n//标题样式\r\nexport const titleCfg = {\r\n  // text: \"XXX标题\",\r\n  top: 0,\r\n  left: \"center\",\r\n  // textStyle: {\r\n  color: \"#666\",\r\n  fontSize: 16,\r\n  // },\r\n};\r\n","import { useEffect, useRef } from \"react\";\r\nimport { merge } from \"lodash\";\r\nimport { gradColors } from \"./_config\";\r\nimport { CSSProperties } from \"react\";\r\nimport * as echarts from \"echarts/core\";\r\nimport {\r\n  PieChart,\r\n  PieSeriesOption,\r\n  BarChart,\r\n  // 系列类型的定义后缀都为 SeriesOption\r\n  BarSeriesOption,\r\n  LineChart,\r\n  LineSeriesOption,\r\n} from \"echarts/charts\";\r\nimport {\r\n  LegendComponent,\r\n  TitleComponent,\r\n  // 组件类型的定义后缀都为 ComponentOption\r\n  TitleComponentOption,\r\n  TooltipComponent,\r\n  TooltipComponentOption,\r\n  GridComponent,\r\n  GridComponentOption,\r\n  // 数据集组件\r\n  DatasetComponent,\r\n  DatasetComponentOption,\r\n  // 内置数据转换器组件 (filter, sort)\r\n  TransformComponent,\r\n} from \"echarts/components\";\r\nimport { LabelLayout, UniversalTransition } from \"echarts/features\";\r\nimport { CanvasRenderer } from \"echarts/renderers\";\r\nexport const coreEcharts = echarts;\r\nexport type ThemeTypes = \"dark\" | \"macarons\"; //echarts图表主题色\r\nexport type DataItem = (string | number)[][]; //echarts图表的数据\r\n\r\n// 通过 ComposeOption 来组合出一个只有必须组件和图表的 Option 类型\r\ntype ECOption = echarts.ComposeOption<\r\n  | PieSeriesOption\r\n  | BarSeriesOption\r\n  | LineSeriesOption\r\n  | TitleComponentOption\r\n  | TooltipComponentOption\r\n  | GridComponentOption\r\n  | DatasetComponentOption\r\n>;\r\ninterface Props {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  theme?: ThemeTypes;\r\n  option?: CommonObj;\r\n}\r\n// 注册必须的组件\r\necharts.use([\r\n  LegendComponent,\r\n  TitleComponent,\r\n  TooltipComponent,\r\n  GridComponent,\r\n  DatasetComponent,\r\n  TransformComponent,\r\n  PieChart,\r\n  BarChart,\r\n  LineChart,\r\n  LabelLayout,\r\n  UniversalTransition,\r\n  CanvasRenderer,\r\n]);\r\nlet echartIns: any = null;\r\nconst tempOpts = {\r\n  title: {\r\n    text: \"ECharts 入门示例\",\r\n  },\r\n  tooltip: {},\r\n  xAxis: {\r\n    data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"],\r\n  },\r\n  yAxis: {},\r\n  series: [\r\n    {\r\n      name: \"销量\",\r\n      type: \"bar\",\r\n      data: [5, 20, 36, 10, 10, 20],\r\n    },\r\n  ],\r\n};\r\nexport default ({\r\n  className = \"\",\r\n  height = \"300px\",\r\n  width = \"100%\",\r\n  theme = \"macarons\",\r\n  option = tempOpts,\r\n}: Props) => {\r\n  const chartRef = useRef<HTMLDivElement | null>(null);\r\n  const newOpts = merge(\r\n    {\r\n      color: gradColors.map((item) => item[0]),\r\n    },\r\n    option\r\n  );\r\n  function handleResize() {\r\n    echartIns.resize();\r\n  }\r\n  useEffect(() => {\r\n    echartIns = echarts.init(chartRef?.current as HTMLElement, theme);\r\n    echartIns.setOption(newOpts, true);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [newOpts]);\r\n  return (\r\n    <div className={className} style={{ height, width }} ref={chartRef}></div>\r\n  );\r\n};\r\n","import { merge } from \"lodash\";\r\nimport { CSSProperties } from \"react\";\r\nimport { axisCfg, gradColors, titleCfg } from \"./_config\";\r\nimport BaseChart, { coreEcharts as echarts, DataItem, ThemeTypes } from \"./BaseChart\";\r\nimport { CommonObj } from \"@/vite-env\";\r\ninterface Props {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  theme?: ThemeTypes;\r\n  title?: string;\r\n  unit?: string;\r\n  data?: DataItem;\r\n  smooth?: boolean; //折线是否平滑\r\n  symbolSize?: number; //折线连接点的大小\r\n  option?: CommonObj;\r\n}\r\nconst defaultOption = {\r\n  // title: {},\r\n  legend: {\r\n    // y: '92%',\r\n  },\r\n  tooltip: {\r\n    trigger: \"axis\",\r\n  },\r\n  //类目轴（category）。默认情况下，类目轴对应到 dataset 第一列。\r\n  xAxis: { type: \"category\", ...axisCfg },\r\n  //数值轴（value）。\r\n  yAxis: {\r\n    type: \"value\",\r\n    // name: unit, //纵轴单位\r\n    ...axisCfg,\r\n  },\r\n  grid: { left: 0, top: 40, right: 0, bottom: 0, containLabel: true },\r\n  // dataset: {\r\n  //   // dimensions: [\"product\", \"2015\", \"2016\", \"2017\"],\r\n  //   source: [[\"Matcha Latte\", 43.3, 85.8, 93.7],[\"Milk Tea\", 83.1, 73.4, 55.1]],\r\n  // },\r\n  // 声明多个 line 系列，默认情况下，每个系列会自动对应到 dataset 的每一列。\r\n  // series: [{ type: \"line\" }, { type: \"line\" }, { type: \"line\" }],\r\n};\r\nconst tempData = [\r\n  [\"product\", \"2015\", \"2016\", \"2017\"],\r\n  [\"第一季度\", 43.3, 85.8, 93.7],\r\n  [\"第二季度\", 83.1, 73.4, 55.1],\r\n  [\"第三季度\", 86.4, 65.2, 82.5],\r\n  [\"第四季度\", 72.4, 53.9, 39.1],\r\n];\r\nfunction getItemColor(ind: number) {\r\n  //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n  return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n    {\r\n      offset: 0,\r\n      color: gradColors[ind][0],\r\n    },\r\n    {\r\n      offset: 1,\r\n      color: gradColors[ind][0],\r\n    },\r\n  ]);\r\n}\r\nexport default ({ title, unit, data = tempData, smooth = false, symbolSize = 6, option, ...restPorps }: Props) => {\r\n  const dimensions = data?.[0] || [\"product\"];\r\n  const series =\r\n    dimensions?.slice(1)?.map((item: any, ind: number) => {\r\n      return {\r\n        type: \"line\",\r\n        symbolSize,\r\n        smooth,\r\n        lineStyle: {\r\n          color: getItemColor(ind),\r\n        },\r\n        itemStyle: {\r\n          color: getItemColor(ind),\r\n        },\r\n      };\r\n    }) || [];\r\n  const newOpts: CommonObj = merge(\r\n    {},\r\n    defaultOption,\r\n    {\r\n      ...(title && { title: { text: title, ...titleCfg } }),\r\n      ...(unit && { yAxis: { name: unit } }),\r\n      dataset: {\r\n        source: data,\r\n      },\r\n      series,\r\n    },\r\n    option\r\n  );\r\n  return <BaseChart option={newOpts} {...restPorps} />;\r\n};\r\n","import { merge } from \"lodash\";\r\nimport { CSSProperties } from \"react\";\r\nimport { axisCfg, gradColors, titleCfg } from \"./_config\";\r\nimport BaseChart, {\r\n  coreEcharts as echarts,\r\n  DataItem,\r\n  ThemeTypes,\r\n} from \"./BaseChart\";\r\ninterface Props {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  theme?: ThemeTypes;\r\n  title?: string;\r\n  unit?: string;\r\n  data?: DataItem;\r\n  option?: CommonObj;\r\n}\r\nconst defaultOption = {\r\n  // title: {},\r\n  legend: {},\r\n  barWidth: 16,\r\n  barGap: \"50%\",\r\n  tooltip: {\r\n    trigger: \"item\",\r\n  },\r\n  //类目轴（category）。默认情况下，类目轴对应到 dataset 第一列。\r\n  xAxis: { type: \"category\", ...axisCfg },\r\n  //数值轴（value）。\r\n  yAxis: {\r\n    type: \"value\",\r\n    // name: unit, //纵轴单位\r\n    ...axisCfg,\r\n  },\r\n  grid: { left: 0, top: 30, right: 0, bottom: 0, containLabel: true },\r\n  // dataset: {\r\n  //   // dimensions: [\"product\", \"2015\", \"2016\", \"2017\"],\r\n  //   source: [[\"Matcha Latte\", 43.3, 85.8, 93.7],[\"Milk Tea\", 83.1, 73.4, 55.1]], // 提供一份数据。\r\n  // },\r\n  // 声明多个 bar 系列，默认情况下，每个系列会自动对应到 dataset 的每一列。\r\n  // series: [{ type: \"bar\" }, { type: \"bar\" }, { type: \"bar\" }],\r\n};\r\nconst tempData = [\r\n  /** 单维度示例 **/\r\n  // [\"product\", \"2015\"],\r\n  // [\"第一季度\", 43.3],\r\n  // [\"第二季度\", 83.1],\r\n  // [\"第三季度\", 86.4],\r\n  // [\"第四季度\", 72.4],\r\n  /** 多维度示例 **/\r\n  [\"product\", \"2015\", \"2016\", \"2017\"],\r\n  [\"第一季度\", 43.3, 85.8, 93.7],\r\n  [\"第二季度\", 83.1, 73.4, 55.1],\r\n  [\"第三季度\", 86.4, 65.2, 82.5],\r\n  [\"第四季度\", 72.4, 53.9, 39.1],\r\n];\r\n/**\r\n * 获取series 的itemStyle的color值\r\n * @param ind {number} 数组下标值\r\n * @param isMulti {boolean} 是否是多维度\r\n */\r\nfunction getItemColor(ind: number, isMulti: boolean) {\r\n  // const isMulti = dimensions.length > 2;\r\n  /** 多维度多色，同一维度同一种颜色 */\r\n  if (isMulti) {\r\n    //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n    return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n      {\r\n        offset: 0,\r\n        color: gradColors[ind][0],\r\n      },\r\n      {\r\n        offset: 1,\r\n        color: gradColors[ind][1],\r\n      },\r\n    ]);\r\n  } else {\r\n    /** 单维度多色可用，同一维度不同颜色 */\r\n    return (params: CommonObj) => {\r\n      const i = params.dataIndex;\r\n      //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n      return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n        {\r\n          offset: 0,\r\n          color: gradColors[i][0],\r\n        },\r\n        {\r\n          offset: 1,\r\n          color: gradColors[i][1],\r\n        },\r\n      ]);\r\n    };\r\n  }\r\n}\r\nexport default ({\r\n  title,\r\n  unit,\r\n  data = tempData,\r\n  option,\r\n  ...restProps\r\n}: Props) => {\r\n  const barWidth = option?.barWidth || defaultOption.barWidth;\r\n  const dimensions = data[0] || [\"product\"];\r\n  const series =\r\n    dimensions?.slice(1)?.map((item: any, ind: number) => {\r\n      return {\r\n        type: \"bar\",\r\n        itemStyle: {\r\n          borderRadius: [barWidth / 2, barWidth / 2, 0, 0],\r\n          color: getItemColor(ind, dimensions.length > 2),\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"#666\",\r\n          fontSize: 14,\r\n        },\r\n      };\r\n    }) || [];\r\n  const newOpts = merge(\r\n    {},\r\n    defaultOption,\r\n    {\r\n      ...(title && { title: { text: title, ...titleCfg } }),\r\n      ...(unit && { yAxis: { name: unit } }),\r\n      dataset: {\r\n        source: data,\r\n      },\r\n      series,\r\n    },\r\n    option\r\n  );\r\n  return <BaseChart option={newOpts} {...restProps} />;\r\n};\r\n","import { merge } from \"lodash\";\r\nimport { CSSProperties } from \"react\";\r\nimport { axisCfg, gradColors, titleCfg } from \"./_config\";\r\nimport BaseChart, {\r\n  coreEcharts as echarts,\r\n  DataItem,\r\n  ThemeTypes,\r\n} from \"./BaseChart\";\r\ninterface Props {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  width?: string | number;\r\n  height?: string | number;\r\n  theme?: ThemeTypes;\r\n  titles?: string[];\r\n  units?: string[];\r\n  datas?: DataItem[];\r\n  option?: CommonObj;\r\n}\r\nconst defaultOption = {\r\n  // title: titles,\r\n  tooltip: {\r\n    trigger: \"item\",\r\n  },\r\n  barWidth: 12,\r\n  barGap: \"50%\",\r\n  grid: [\r\n    { left: 0, width: \"47%\", bottom: 30, top: 40, containLabel: true },\r\n    { right: 0, width: \"47%\", bottom: 30, top: 40, containLabel: true },\r\n  ],\r\n  // xAxis,\r\n  // yAxis,\r\n  // dataset: datasets,\r\n  // series,\r\n};\r\nconst tempData = [\r\n  [\r\n    [\"name\", \"国内\", \"国外\"],\r\n    [\"示例1\", 30, 22],\r\n    [\"示例2\", 14, 42],\r\n    [\"示例3\", 18, 23],\r\n    // [\"name\", \"国内\"],\r\n    // [\"建筑工程\", 30],\r\n    // [\"能源化工\", 14],\r\n    // [\"交通运输\", 18],\r\n  ],\r\n  [\r\n    [\"name\", \"国内\", \"国外\"],\r\n    [\"示例1\", 23, 62],\r\n    [\"示例2\", 65, 88],\r\n    [\"示例3\", 66, 48],\r\n    // [\"name\", \"国内\"],\r\n    // [\"建筑工程\", 23],\r\n    // [\"能源化工\", 65],\r\n    // [\"交通运输\", 66],\r\n  ],\r\n];\r\n\r\nexport default ({\r\n  titles = [\"标题1\", \"标题2\"],\r\n  units = [\"元\", \"元\"],\r\n  datas = tempData,\r\n  option,\r\n  ...restProps\r\n}: Props) => {\r\n  // const { datas, option, titles, units } = props;\r\n  let [datasets, newTitles, series, xAxis, yAxis]: any = [[], [], [], [], []];\r\n  datas.forEach((data, index) => {\r\n    const title = titles[index];\r\n    const unit = units[index];\r\n    newTitles.push({\r\n      gridIndex: index,\r\n      left: index == 0 ? \"25%\" : \"75%\",\r\n      bottom: 0,\r\n      textAlign: \"center\",\r\n      text: `{label|${title}}  {amount|${getTotal(data.slice(1))}${unit}}`,\r\n      textStyle: {\r\n        rich: {\r\n          label: {\r\n            fontSize: 14,\r\n            fontWeight: \"bold\",\r\n            color: \"#666\",\r\n          },\r\n          amount: {\r\n            color: \"#333\",\r\n            fontSize: 15,\r\n            fontWeight: \"bold\",\r\n          },\r\n        },\r\n      },\r\n    });\r\n    xAxis.push({\r\n      type: \"category\",\r\n      gridIndex: index,\r\n      ...axisCfg,\r\n    });\r\n    yAxis.push({\r\n      type: \"value\",\r\n      gridIndex: index,\r\n      name: unit,\r\n      ...axisCfg,\r\n    });\r\n    datasets.push({ source: data });\r\n    const dimensions = data[0];\r\n    for (let i = 0; i < dimensions.length - 1; i++) {\r\n      series.push({\r\n        type: \"bar\",\r\n        xAxisIndex: index,\r\n        yAxisIndex: index,\r\n        datasetIndex: index,\r\n        itemStyle: {\r\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n            {\r\n              //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n              offset: 0,\r\n              color: gradColors[i][0],\r\n            },\r\n            {\r\n              offset: 1,\r\n              color: gradColors[i][1],\r\n            },\r\n          ]),\r\n          borderRadius: [6, 6, 0, 0],\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: \"top\",\r\n          color: \"#666\",\r\n          fontSize: 14,\r\n        },\r\n      });\r\n    }\r\n  });\r\n  const newOpts = merge(\r\n    {},\r\n    defaultOption,\r\n    {\r\n      title: newTitles,\r\n      // tooltip: {\r\n      //   trigger: \"item\",\r\n      // },\r\n      // barWidth: 12,\r\n      // barGap: \"50%\",\r\n      grid: [\r\n        { left: 0, width: \"47%\", bottom: 30, top: 40, containLabel: true },\r\n        { right: 0, width: \"47%\", bottom: 30, top: 40, containLabel: true },\r\n      ],\r\n      xAxis,\r\n      yAxis,\r\n      dataset: datasets,\r\n      series,\r\n    }\r\n    // option\r\n  );\r\n  function getTotal(arr: any[]) {\r\n    let total = 0;\r\n    arr.forEach((itemArr) => {\r\n      for (let i = 1; i < itemArr.length; i++) {\r\n        total += Number(itemArr[i]);\r\n      }\r\n    });\r\n    return total;\r\n  }\r\n  return <BaseChart option={newOpts} {...restProps} />;\r\n};\r\n","import { merge } from \"lodash\";\r\nimport { CSSProperties } from \"react\";\r\nimport { axisCfg, gradColors, titleCfg } from \"./_config\";\r\nimport BaseChart, { coreEcharts as echarts, DataItem, ThemeTypes } from \"./BaseChart\";\r\nimport { CommonObj } from \"@/vite-env\";\r\ninterface Props {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  theme?: ThemeTypes;\r\n  height?: string | number;\r\n  width?: string | number;\r\n  title?: string;\r\n  unit?: string;\r\n  data?: DataItem;\r\n  hollow?: boolean;\r\n  radius?: [number, number];\r\n  center?: [string, string];\r\n  option?: CommonObj;\r\n}\r\nconst defaultOption = {\r\n  // title: {},\r\n  tooltip: {},\r\n  legend: {\r\n    // x: \"5%\",\r\n    // y: \"center\",\r\n    itemGap: 20,\r\n    itemHeight: 12,\r\n    itemWidth: 12,\r\n    // orient: \"vertical\",\r\n    // formatter(name) {\r\n    //     let val = dataset.source.find(item => {\r\n    //         return item[0] === name;\r\n    //     })[1];\r\n    //     return `{label|${name}}{value|${val}${unit}}`;\r\n    // },\r\n    color: \"#999\",\r\n    fontSize: 14,\r\n    rich: {\r\n      label: {\r\n        width: 150,\r\n      },\r\n      value: {\r\n        color: \"#333\",\r\n        fontWeight: \"bold\",\r\n        width: 100,\r\n      },\r\n    },\r\n  },\r\n  // dataset: {\r\n  //   source: [\r\n  //     [\"主要负责人用车\", 150],\r\n  //   ],\r\n  // },\r\n  // series: [{type: \"pie\"}],\r\n};\r\nconst tempData = [\r\n  [\"主要负责人用车\", 150],\r\n  [\"其他公务用车\", 149],\r\n  [\"经营和业务保险专用车\", 150],\r\n];\r\n//获取空心饼图的legend配置\r\nfunction getHollowLegendCfg() {\r\n  return {\r\n    legend: {\r\n      x: \"5%\",\r\n      y: \"center\",\r\n      orient: \"vertical\",\r\n    },\r\n  };\r\n}\r\n\r\nexport default ({\r\n  title,\r\n  unit,\r\n  data = tempData,\r\n  hollow = true,\r\n  radius = [72, 93],\r\n  center = [\"75%\", \"50%\"],\r\n  option,\r\n  ...restProps\r\n}: Props) => {\r\n  const newOpts = merge(\r\n    {},\r\n    defaultOption,\r\n    {\r\n      ...(title && { title: { text: title, ...titleCfg } }),\r\n      ...(hollow ? getHollowLegendCfg() : {}),\r\n      // legend: {\r\n      //   formatter(name: string) {\r\n      //     let val = data?.find((item: any) => {\r\n      //       return item[0] === name;\r\n      //     })[1];\r\n      //     return `{label|${name}}{value|${val}${unit}}`;\r\n      //   },\r\n      // },\r\n      dataset: {\r\n        source: data,\r\n      },\r\n      series: [\r\n        {\r\n          type: \"pie\",\r\n          ...(hollow ? getHollowSeriesCfg() : {}),\r\n          itemStyle: {\r\n            borderColor: \"#fff\",\r\n            borderWidth: 2,\r\n            color: (params: CommonObj) => {\r\n              const ind = params.dataIndex;\r\n              //颜色渐变函数 前四个参数分别表示四个位置依次为左、下、右、上\r\n              return new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: gradColors[ind][0],\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: gradColors[ind][1],\r\n                },\r\n              ]);\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    option\r\n  );\r\n  //获取空心饼图的series配置\r\n  function getHollowSeriesCfg() {\r\n    let total = 0;\r\n    data.forEach(item => {\r\n      total += Number(item[1]);\r\n    });\r\n    return {\r\n      radius,\r\n      center,\r\n      label: {\r\n        show: true,\r\n        position: \"center\",\r\n        color: \"#4c4a4a\",\r\n        formatter: `{value|${total}}\\n\\r{label|车辆总数${unit ? `(${unit})` : \"\"}}`,\r\n        rich: {\r\n          value: {\r\n            color: \"#333\",\r\n            fontSize: 24,\r\n            lineHeight: 24,\r\n            fontWeight: \"bold\",\r\n          },\r\n          label: {\r\n            color: \"#999\",\r\n            fontSize: 14,\r\n            lineHeight: 24,\r\n            fontWeight: \"bold\",\r\n          },\r\n        },\r\n        emphasis: {\r\n          show: true,\r\n        },\r\n      },\r\n    };\r\n  }\r\n  return <BaseChart option={newOpts} {...restProps} />;\r\n};\r\n","/**\r\n * BaseSection - 用作块状的组件\r\n */\r\n\r\nimport { CSSProperties, useState } from \"react\";\r\nimport { Badge, Button } from \"antd\";\r\nimport { CaretDownOutlined } from \"@ant-design/icons\";\r\nimport s from \"./index.module.less\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  title?: any;\r\n  right?: any;\r\n  count?: number;\r\n  overflowCount?: number;\r\n  fold?: boolean;\r\n  children?: any;\r\n}\r\nexport default ({ className = \"\", style, title, right, count = 0, overflowCount = 99, fold, children }: Props) => {\r\n  const [isFold, setIsFold] = useState(false);\r\n  return (\r\n    <div style={style} className={`${className} ${s[\"base-section\"]}`}>\r\n      <header className={`${s.head} f-sb-c`}>\r\n        <div className={`${s.title} f-fs-c`}>{title}</div>\r\n        {!!count && <Badge className={s.badge} count={count} overflowCount={overflowCount}></Badge>}\r\n        {right}\r\n        {fold && (\r\n          <Button\r\n            className={`${s[\"fold-btn\"]} ml-h`}\r\n            type=\"link\"\r\n            onClick={() => setIsFold(!isFold)}\r\n            icon={<CaretDownOutlined className={`${s[\"fold-icon\"]} ${isFold ? \"\" : \"rotate-180\"}`} />}\r\n          ></Button>\r\n        )}\r\n      </header>\r\n      <div\r\n        className={`${s.body}`}\r\n        style={{\r\n          maxHeight: isFold ? \"0\" : \"100vh\",\r\n          padding: isFold ? \"0 16px\" : \"8px 16px\",\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["gradColors","axisCfg","titleCfg","coreEcharts","echarts","echarts.use","LegendComponent","TitleComponent","TooltipComponent","GridComponent","DatasetComponent","TransformComponent","PieChart","BarChart","LineChart","LabelLayout","UniversalTransition","CanvasRenderer","echartIns","tempOpts","BaseChart","className","height","width","theme","option","chartRef","useRef","newOpts","merge","item","handleResize","useEffect","echarts.init","jsx","defaultOption","tempData","getItemColor","ind","title","unit","data","smooth","symbolSize","restPorps","dimensions","series","_a","isMulti","params","i","restProps","barWidth","BarsChart","titles","units","datas","datasets","newTitles","xAxis","yAxis","index","getTotal","arr","total","itemArr","getHollowLegendCfg","hollow","radius","center","getHollowSeriesCfg","BaseSection","style","right","count","overflowCount","fold","children","isFold","setIsFold","useState","jsxs","s","Badge","Button","CaretDownOutlined"],"mappings":"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"}