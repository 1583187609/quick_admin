{"version":3,"file":"index-a27b5eea.js","sources":["../../../src/components/form/StepForm/index.tsx","../../../src/views/test/test-1/index.tsx"],"sourcesContent":["/**\r\n * 基础表单 - StepForm\r\n */\r\n\r\nimport { useImperativeHandle, forwardRef, useState } from \"react\";\r\nimport { Steps } from \"antd\";\r\nimport { CSSProperties } from \"react\";\r\nimport { FormField } from \"@/components/BaseFormItem\";\r\nimport { SizeType } from \"antd/es/config-provider/SizeContext\";\r\nimport { CommonObj, FetchType, FinallyNext } from \"@/vite-env\";\r\nimport { BtnAttrs } from \"@/components/form/_types\";\r\nimport SectionForm, { SectionFormField, SectionFormFieldAttrs } from \"../SectionForm\";\r\nimport s from \"./index.module.less\";\r\n\r\ninterface Props {\r\n  /**\r\n   * 以下是继承 antd 的属性\r\n   */\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  initialValues?: CommonObj;\r\n  labelCol?: CommonObj;\r\n  wrapperCol?: CommonObj;\r\n  disabled?: boolean;\r\n  size?: SizeType;\r\n  /**\r\n   * 以下是自定义的属性\r\n   */\r\n  fields?: FormField[];\r\n  submitButton?: string | BtnAttrs;\r\n  resetButton?: string | BtnAttrs;\r\n  readOnly?: boolean;\r\n  pureText?: boolean;\r\n  fetch?: FetchType;\r\n  fetchSuccess?: FinallyNext; //fetch请求成功之后的回调方法\r\n  fetchFail?: FinallyNext; //fetch请求失败之后的回调方法\r\n  onSubmit?: (data: CommonObj, next: () => void) => void;\r\n  isOmit?: boolean; // 表单提交时，是否剔除空的属性\r\n  stepsAttrs?: CommonObj;\r\n  [key: string]: any;\r\n}\r\n\r\nconst defaultStepAttrs: CommonObj = {\r\n  direction: \"vertical\",\r\n};\r\nexport default forwardRef(({ className = \"\", stepsAttrs, ...restProps }: Props, ref: any) => {\r\n  const [currStep, setCurrStep] = useState(0);\r\n  const newStepAttrs = Object.assign({}, defaultStepAttrs, stepsAttrs);\r\n  const isVertical = newStepAttrs.direction === \"vertical\";\r\n  const steps = restProps?.sections?.map((item: SectionFormField) => {\r\n    if (!item) return false;\r\n    const { title, popover } = item as SectionFormFieldAttrs;\r\n    return { title, description: popover };\r\n  });\r\n  function handleGetInds(inds: number[]) {\r\n    setCurrStep(inds[0] ?? 0);\r\n  }\r\n  return isVertical ? (\r\n    <div className={`${className} ${s[\"step-form\"]} f-sb-s`}>\r\n      <Steps\r\n        className={`${newStepAttrs.className ?? \"\"} ${s.steps} mr-t f-0`}\r\n        {...newStepAttrs}\r\n        items={steps}\r\n        current={currStep}\r\n      />\r\n      <SectionForm className=\"f-1\" getUnFilledIndexs={handleGetInds} {...restProps} />\r\n    </div>\r\n  ) : (\r\n    <>\r\n      <Steps\r\n        className={`${newStepAttrs.className ?? \"\"} ${s.steps} ${isVertical ? \"mr-t\" : \"mb-h\"} f-0`}\r\n        {...newStepAttrs}\r\n        items={steps}\r\n        current={currStep}\r\n      />\r\n      <SectionForm className=\"f-1\" getUnFilledIndexs={handleGetInds} {...restProps} />\r\n    </>\r\n  );\r\n});\r\n","/**\r\n * 测试1\r\n */\r\n\r\nimport { FormField, FormFieldAttrs, StandardFormFieldAttrs } from \"@/components/BaseFormItem\";\r\nimport { Tabs, Select } from \"antd\";\r\nimport { UserOutlined, UnlockOutlined } from \"@ant-design/icons\";\r\nimport { PostMockCommon } from \"@/api-mock\";\r\nimport BaseForm from \"@/components/form/BaseForm\";\r\nimport SectionForm, { SectionFormField, SectionFormFieldAttrs } from \"@/components/form/SectionForm\";\r\nimport StepForm from \"@/components/form/StepForm\";\r\nimport { CommonObj } from \"@/vite-env\";\r\nimport { useState } from \"react\";\r\nimport Setting from \"./_components/Setting\";\r\n\r\nlet isRequired = false;\r\nexport const getFields = (args: CommonObj): FormField[] => {\r\n  const { hasChildren, showDate, isAgree, childSubFieldsShowTypes } = args;\r\n  return [\r\n    {\r\n      name: \"name\",\r\n      label: \"姓名\",\r\n      required: isRequired,\r\n      extra: \"设置 maxLength 属性后，则触发 showCount 属性值为true\",\r\n      colAttrs: 12,\r\n      attrs: {\r\n        maxLength: 6,\r\n      },\r\n      otherAttrs: {},\r\n    },\r\n    {\r\n      name: \"age\",\r\n      label: \"年龄\",\r\n      type: \"InputNumber\",\r\n      extra: \"设置 valid 属性为age，将获得 age 的所有预设值特性\",\r\n      colAttrs: 12,\r\n      attrs: {},\r\n      otherAttrs: {\r\n        valid: \"age\",\r\n      },\r\n    },\r\n    {\r\n      name: \"gender\",\r\n      label: \"性别\",\r\n      type: \"RadioGroup\",\r\n      extra: \"options选项传入数组 genderOpts\",\r\n      colAttrs: {\r\n        span: 12,\r\n      },\r\n      attrs: {\r\n        optionType: \"button\",\r\n        buttonStyle: \"solid\",\r\n        options: \"Gender\",\r\n      },\r\n    },\r\n\r\n    {\r\n      name: \"homeAddress\",\r\n      label: \"家庭住址\",\r\n      type: \"Cascader\",\r\n      extra: \"options选项传入级联名称 Region\",\r\n      colAttrs: 12,\r\n      attrs: {\r\n        options: \"Region\",\r\n      },\r\n    },\r\n    {\r\n      name: \"height\",\r\n      label: \"身高\",\r\n      type: \"Slider\",\r\n      extra: \"这是popover的使用示例（鼠标放在label右侧的图标上查看）\",\r\n      attrs: {\r\n        min: 0,\r\n        max: 250,\r\n      },\r\n      otherAttrs: {\r\n        popover: \"这是popover的使用示例\",\r\n      },\r\n    },\r\n    false && {\r\n      name: \"detail\",\r\n      label: \"详细地址\",\r\n      attrs: {\r\n        maxLength: 50,\r\n      },\r\n    },\r\n    {\r\n      name: \"phone\",\r\n      label: \"电话\",\r\n      colAttrs: 12,\r\n      // extra: `设置 {valid: \"phone\"} 实现电话号码长度限制、正则校验`,\r\n      extra: `设置prefix、addonAfter属性`,\r\n      attrs: {\r\n        prefix: <UserOutlined />,\r\n        // addonAfter: \"+86\",\r\n        addonAfter: (\r\n          <Select\r\n            defaultValue={1}\r\n            options={[\r\n              { label: \"国内\", value: 1 },\r\n              { label: \"国外\", value: 2 },\r\n            ]}\r\n          ></Select>\r\n        ),\r\n      },\r\n      otherAttrs: {\r\n        valid: \"phone\",\r\n      },\r\n    },\r\n    {\r\n      name: \"password\",\r\n      label: \"密码\",\r\n      type: \"Password\",\r\n      colAttrs: 12,\r\n      extra: `设置 {valid: \"password\"} 实现密码长度限制、正则校验`,\r\n      attrs: {\r\n        prefix: <UnlockOutlined />,\r\n      },\r\n      otherAttrs: {\r\n        valid: \"password\",\r\n      },\r\n    },\r\n    {\r\n      name: \"search\",\r\n      label: \"搜索\",\r\n      type: \"Search\",\r\n      colAttrs: 12,\r\n      required: isRequired,\r\n      extra: \"colAttrs为Col的属性，值可为数字或对象\",\r\n      attrs: { placeholder: \"请输入搜索内容\" },\r\n    },\r\n    {\r\n      name: \"listSearch\",\r\n      label: \"搜索记忆\",\r\n      type: \"AutoComplete\",\r\n      colAttrs: 12,\r\n      attrs: {\r\n        options: [\r\n          { label: \"搜索提示1\", value: \"1\" },\r\n          { label: \"搜索提示2\", value: \"2\" },\r\n          { label: \"搜索提示3\", value: \"3\" },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"activeType\",\r\n      label: \"报名形式\",\r\n      type: \"Select\",\r\n      colAttrs: 12,\r\n      attrs: {\r\n        options: [\r\n          { label: \"现场\", value: 1 },\r\n          { label: \"线上\", value: 2 },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"signUpFee\",\r\n      label: \"报名费用\",\r\n      type: \"InputNumber\",\r\n      attrs: {\r\n        disabled: true,\r\n      },\r\n      colAttrs: 12,\r\n      otherAttrs: {\r\n        valid: \"rmb\",\r\n      },\r\n    },\r\n    {\r\n      name: \"score\",\r\n      label: \"评分\",\r\n      type: \"Rate\",\r\n    },\r\n    {\r\n      name: \"intendedCity\",\r\n      label: \"意向城市\",\r\n      type: \"CheckboxGroup\",\r\n      attrs: {\r\n        options: [\r\n          { label: \"成都\", value: 1 },\r\n          { label: \"杭州\", value: 2 },\r\n          { label: \"武汉\", value: 3 },\r\n        ],\r\n      },\r\n    },\r\n    {\r\n      name: \"showDate\",\r\n      label: \"是否显示日期\",\r\n      type: \"Switch\",\r\n      extra: \"切换开关后，下面几个日期时间项会以同级字段形式整体显示或隐藏\",\r\n    },\r\n    ...(showDate\r\n      ? [\r\n          {\r\n            name: \"attendDate\",\r\n            label: \"参加活动的日期\",\r\n            type: \"DatePicker\",\r\n            required: isRequired,\r\n          },\r\n          {\r\n            name: \"attendTime\",\r\n            label: \"参加活动的时间\",\r\n            type: \"TimePicker\",\r\n          },\r\n          {\r\n            name: \"signUpDateRange\",\r\n            // name: [\"signUpDateStart\", \"signUpDateEnd\"],\r\n            label: \"报名日期\",\r\n            type: \"DateRangePicker\",\r\n            extra: `name传数组[\"signUpDateStart\", \"signUpDateEnd\"]`,\r\n            otherAttrs: {\r\n              popover: \"传入数组时，将拆成两个字段传给后端\",\r\n            },\r\n          },\r\n          {\r\n            name: \"signUpTimeRange\",\r\n            label: \"报名时间\",\r\n            type: \"TimeRangePicker\",\r\n            extra: `name传字符串\"signUpTimeRange\"`,\r\n            otherAttrs: {\r\n              popover: \"传入字符串时，将用一个数组传给后端\",\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      name: \"hasChildren\",\r\n      label: \"是否带有儿童\",\r\n      type: \"Switch\",\r\n      extra: \"切换开关后，下面几个儿童信息项会以 children 形式整体显示或隐藏\",\r\n    },\r\n    hasChildren && {\r\n      name: \"childSubFieldsShowTypes\",\r\n      label: \"子项的展示风格\",\r\n      type: \"RadioGroup\",\r\n      extra: \"切换选项，观察下面几个儿童信息项会以何种样式进行呈现\",\r\n      attrs: {\r\n        options: [\r\n          { label: \"紧凑型\", value: \"compact\" },\r\n          { label: \"行撑满\", value: \"expand\" },\r\n          { label: \"自定义\", value: \"custom\" },\r\n          { label: \"加减行\", value: \"addDel\" },\r\n        ],\r\n      },\r\n    },\r\n    hasChildren && {\r\n      name: \"childrenInfo\",\r\n      label: \"儿童信息\",\r\n      childrenStyle: childSubFieldsShowTypes,\r\n      children: [\r\n        {\r\n          name: \"childName\",\r\n          label: \"姓名\",\r\n          required: isRequired,\r\n          ...(childSubFieldsShowTypes === \"custom\"\r\n            ? {\r\n                style: {\r\n                  display: \"inline-block\",\r\n                  width: \"calc(50% - 8px)\",\r\n                },\r\n                className: \"mr-16\",\r\n              }\r\n            : {}),\r\n        },\r\n        {\r\n          name: \"childHeight\",\r\n          label: \"身高\",\r\n          type: \"InputNumber\",\r\n          required: isRequired,\r\n          otherAttrs: {\r\n            valid: \"height\",\r\n          },\r\n          ...(childSubFieldsShowTypes === \"custom\"\r\n            ? {\r\n                style: {\r\n                  display: \"inline-block\",\r\n                  width: \"calc(50% - 8px)\",\r\n                },\r\n              }\r\n            : {}),\r\n        },\r\n        {\r\n          name: \"childAge\",\r\n          label: \"年龄\",\r\n          type: \"InputNumber\",\r\n          required: isRequired,\r\n          otherAttrs: {\r\n            valid: \"age\",\r\n          },\r\n          ...(childSubFieldsShowTypes === \"custom\"\r\n            ? {\r\n                style: {\r\n                  display: \"inline-block\",\r\n                  width: \"calc(50% - 8px)\",\r\n                },\r\n                className: \"mr-16\",\r\n              }\r\n            : {}),\r\n        },\r\n        {\r\n          name: \"childWeight\",\r\n          label: \"体重\",\r\n          type: \"InputNumber\",\r\n          required: isRequired,\r\n          otherAttrs: {\r\n            valid: \"weight\",\r\n          },\r\n          ...(childSubFieldsShowTypes === \"custom\"\r\n            ? {\r\n                style: {\r\n                  display: \"inline-block\",\r\n                  width: \"calc(50% - 8px)\",\r\n                },\r\n              }\r\n            : {}),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \"isAgree\",\r\n      label: \"阅读并同意协议\",\r\n      type: \"Checkbox\",\r\n    },\r\n    isAgree && {\r\n      name: \"custom\",\r\n      label: \"自定义项\",\r\n      // type: \"Custom\", // 有 render 时，可以省略不写\r\n      extra: \"声明type为Custom，同时写上element属性\",\r\n      render: (attrs: StandardFormFieldAttrs) => <div className=\"color-primary\">这是一个自定义项</div>,\r\n      otherAttrs: {\r\n        popover: \"勾选【阅读并同意协议之后】，此字段才会显示，否则隐藏\",\r\n      },\r\n    },\r\n    {\r\n      name: \"note\",\r\n      label: \"备注\",\r\n      type: \"TextArea\",\r\n      attrs: { maxLength: 200 },\r\n    },\r\n    {\r\n      name: \"error\",\r\n      label: \"error项\",\r\n      type: \"Inputt\",\r\n      extra: \"当type类型拼写错误(不存在)时，就会出现此错误提示\",\r\n    } as FormField,\r\n  ];\r\n};\r\nexport const initVals = {\r\n  listSearch: \"搜索列表\",\r\n  activeType: 1,\r\n  name: \"张三\",\r\n  gender: 1,\r\n  age: 26,\r\n  homeAddress: [12, 2, 3],\r\n  phone: \"18483221518\",\r\n  height: 170,\r\n  weight: 62,\r\n  score: 3,\r\n  intendedCity: [1, 2],\r\n  attendDate: \"2023-07-03\",\r\n  attendTime: \"15:33:32\",\r\n  signUpDateRange: [\"2023-06-01\", \"2023-06-30\"],\r\n  signUpTimeRange: [\"09:00:00\", \"18:00:00\"],\r\n  signUpFee: 199.0,\r\n  showDate: true,\r\n  hasChildren: true,\r\n  childSubFieldsShowTypes: \"compact\",\r\n  isAgree: true,\r\n  note: \"暂无备注内容暂无备注内容暂无备注内容暂无备注内容暂无备注内容暂无备注内容暂无备注内容暂无备注内容。\",\r\n};\r\nconst stepAttrs: CommonObj = {\r\n  direction: \"vertical\",\r\n  // direction: \"horizontal\",\r\n};\r\nconst isVertical = stepAttrs.direction !== \"horizontal\";\r\nexport default () => {\r\n  const [params, setParams] = useState<CommonObj>(initVals);\r\n  const fields = getFields(params);\r\n  const { showDate, hasChildren } = params;\r\n  const addressEndInd = showDate ? 19 : 15;\r\n  const childInfoEndInd = hasChildren ? addressEndInd + 3 : addressEndInd + 1;\r\n  const sections: SectionFormField[] = [\r\n    {\r\n      name: \"baseInfo\",\r\n      title: \"基本信息\",\r\n      popover: \"这是第一部分内容【 基本信息 】的介绍\",\r\n      fields: fields.slice(0, 8),\r\n    },\r\n    {\r\n      name: \"signUpInfo\",\r\n      title: \"报名信息\",\r\n      popover: \"这是第二部分内容【 报名信息 】的介绍\",\r\n      fields: fields.slice(8, 14),\r\n    },\r\n    {\r\n      name: \"addressInfo\",\r\n      title: \"地址信息\",\r\n      popover: \"这是第三部分内容【 地址信息 】的介绍\",\r\n      fields: fields.slice(14, addressEndInd),\r\n    },\r\n    {\r\n      name: \"childInfo\",\r\n      title: \"儿童信息\",\r\n      popover: \"这是第四部分内容【 儿童信息 】的介绍\",\r\n      fields: fields.slice(addressEndInd, childInfoEndInd),\r\n    },\r\n    {\r\n      name: \"otherInfo\",\r\n      title: \"其他信息\",\r\n      popover: \"这是第五部分内容【 其他信息 】的介绍\",\r\n      fields: fields.slice(childInfoEndInd),\r\n    },\r\n  ];\r\n  const items = [\r\n    {\r\n      key: \"1\",\r\n      label: \"基础表单\",\r\n      destroyInactiveTabPane: true,\r\n      children: (\r\n        <BaseForm\r\n          fields={fields}\r\n          initialValues={initVals}\r\n          fetch={PostMockCommon}\r\n          onValuesChange={(vals: CommonObj, allVals: CommonObj) => setParams(allVals)}\r\n          style={{ height: \"calc(100vh - 160px)\" }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      key: \"2\",\r\n      label: \"分块表单\",\r\n      destroyInactiveTabPane: true,\r\n      children: (\r\n        <SectionForm\r\n          sections={sections}\r\n          initialValues={initVals}\r\n          fetch={PostMockCommon}\r\n          onValuesChange={(vals: CommonObj, allVals: CommonObj) => setParams(allVals)}\r\n          style={{ height: \"calc(100vh - 160px)\" }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      key: \"3\",\r\n      label: \"步骤表单\",\r\n      destroyInactiveTabPane: true,\r\n      children: (\r\n        <StepForm\r\n          sections={sections}\r\n          initialValues={initVals}\r\n          fetch={PostMockCommon}\r\n          stepsAttrs={stepAttrs}\r\n          onValuesChange={(vals: CommonObj, allVals: CommonObj) => setParams(allVals)}\r\n          style={{ height: `calc(100vh - ${isVertical ? 160 : 240}px)` }}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n  return <Tabs items={items} defaultActiveKey=\"2\" tabBarExtraContent={<Setting />} />;\r\n};\r\n"],"names":["defaultStepAttrs","StepForm","forwardRef","className","stepsAttrs","restProps","ref","currStep","setCurrStep","useState","newStepAttrs","isVertical","steps","_a","item","title","popover","handleGetInds","inds","s","jsx","Steps","SectionForm","jsxs","Fragment","isRequired","getFields","args","hasChildren","showDate","isAgree","childSubFieldsShowTypes","UserOutlined","Select","UnlockOutlined","attrs","initVals","stepAttrs","index","params","setParams","fields","addressEndInd","childInfoEndInd","sections","items","BaseForm","PostMockCommon","vals","allVals","Tabs","Setting"],"mappings":"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EACZ,EACA,SAAU,GACV,WAAY,CACV,MAAO,KACT,CACF,EACA,CACE,KAAM,QACN,MAAO,KACP,KAAM,MACR,EACA,CACE,KAAM,eACN,MAAO,OACP,KAAM,gBACN,MAAO,CACL,QAAS,CACP,CAAE,MAAO,KAAM,MAAO,CAAE,EACxB,CAAE,MAAO,KAAM,MAAO,CAAE,EACxB,CAAE,MAAO,KAAM,MAAO,CAAE,CAC1B,CACF,CACF,EACA,CACE,KAAM,WACN,MAAO,SACP,KAAM,SACN,MAAO,gCACT,EACA,GAAII,EACA,CACE,CACE,KAAM,aACN,MAAO,UACP,KAAM,aACN,SAAUJ,CACZ,EACA,CACE,KAAM,aACN,MAAO,UACP,KAAM,YACR,EACA,CACE,KAAM,kBAEN,MAAO,OACP,KAAM,kBACN,MAAO,8CACP,WAAY,CACV,QAAS,mBACX,CACF,EACA,CACE,KAAM,kBACN,MAAO,OACP,KAAM,kBACN,MAAO,4BACP,WAAY,CACV,QAAS,mBACX,CACF,CAAA,EAEF,CAAC,EACL,CACE,KAAM,cACN,MAAO,SACP,KAAM,SACN,MAAO,sCACT,EACAG,GAAe,CACb,KAAM,0BACN,MAAO,UACP,KAAM,aACN,MAAO,6BACP,MAAO,CACL,QAAS,CACP,CAAE,MAAO,MAAO,MAAO,SAAU,EACjC,CAAE,MAAO,MAAO,MAAO,QAAS,EAChC,CAAE,MAAO,MAAO,MAAO,QAAS,EAChC,CAAE,MAAO,MAAO,MAAO,QAAS,CAClC,CACF,CACF,EACAA,GAAe,CACb,KAAM,eACN,MAAO,OACP,cAAeG,EACf,SAAU,CACR,CACE,KAAM,YACN,MAAO,KACP,SAAUN,EACV,GAAIM,IAA4B,SAC5B,CACE,MAAO,CACL,QAAS,eACT,MAAO,iBACT,EACA,UAAW,OAAA,EAEb,CAAC,CACP,EACA,CACE,KAAM,cACN,MAAO,KACP,KAAM,cACN,SAAUN,EACV,WAAY,CACV,MAAO,QACT,EACA,GAAIM,IAA4B,SAC5B,CACE,MAAO,CACL,QAAS,eACT,MAAO,iBACT,CAAA,EAEF,CAAC,CACP,EACA,CACE,KAAM,WACN,MAAO,KACP,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"}